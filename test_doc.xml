<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0511.2203                                -->
<workbook source-build='9.3.1 (9300.16.0511.2203)' source-platform='win' version='9.3' xml:base='https://qa.visualizedata.ucop.edu' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='EmployeeFTE-Indevelopment' path='/t/Public/workbooks' revision='1.1' site='Public' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='9.3'>
      <aliases enabled='yes' />
      <column alias='Base FTE' caption='Dollars FTE' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Base FTE&quot;'>
        <calculation class='tableau' formula='&quot;Base FTE&quot;' />
        <aliases>
          <alias key='&quot;Base FTE&quot;' value='Base FTE' />
          <alias key='&quot;Earnings&quot;' value='Earnings' />
        </aliases>
        <members>
          <member alias='Base FTE' value='&quot;Base FTE&quot;' />
          <member alias='Earnings' value='&quot;Earnings&quot;' />
        </members>
      </column>
      <column alias='(All)' caption='Service Focus' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
        <calculation class='tableau' formula='&quot;All&quot;' />
        <aliases>
          <alias key='&quot;All&quot;' value='(All)' />
          <alias key='&quot;Health Sciences&quot;' value='--- Health Sciences' />
          <alias key='&quot;Med Center&quot;' value='--- Med Center' />
        </aliases>
        <members>
          <member alias='(All)' value='&quot;All&quot;' />
          <member value='&quot;General Campus&quot;' />
          <member value='&quot;UC Health&quot;' />
          <member alias='--- Health Sciences' value='&quot;Health Sciences&quot;' />
          <member alias='--- Med Center' value='&quot;Med Center&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Custom SQL Query (PERSONNEL)' inline='true' name='db2.1phqijc054rhev1266iad0956og9' version='9.3'>
      <connection IsolationLevel='' class='db2' dbname='UC_CDW' odbc-connect-string-extras='' odbc-native-protocol='yes' one-time-sql='' port='50001' schema='PERSONNEL' server='dwp1.ucop.edu' source-charset='' username='chbrooks'>
        <relation name='Custom SQL Query' type='text'>select&#13;&#10;&#9;eff_date,&#13;&#10;        employee_number,&#13;&#10;&#9;employee_name,&#13;&#10;        dos_code_cps,&#13;&#10;        pers_pgm,&#13;&#10;        Campus_Name_Abr,&#13;&#10;        location_1,&#13;&#10;        location_2,&#13;&#10;&#9;location_3,&#13;&#10;        CHECK_DATE,&#13;&#10;&#9;appt_type_code,&#13;&#10;&#9;appt_type_code_pri,&#13;&#10;&#9;function_code,&#13;&#10;&#9;function_name,&#13;&#10;&#9;fund_group_code,&#13;&#10;        fund,&#13;&#10;&#9;Org_1_Code,&#13;&#10;&#9;Org_1_Title,&#13;&#10;&#9;Org_2_Code,&#13;&#10;&#9;Org_2_Title,&#13;&#10;&#9;Org_3_Code,&#13;&#10;&#9;Org_3_Title,&#13;&#10;&#9;UAS_Discipline_Code,&#13;&#10;&#9;UAS_Discipline_Name,&#13;&#10;        sau_code,&#13;&#10;        Class_Ttl_Outl_Code_Appt1,&#13;&#10;        Class_Ttl_Outl_Code_Appt,&#13;&#10;        CLASS_TTL_OUTL_NAME_APPT,&#13;&#10;        CLASS_TTL_OUTL_NAME_PRI,&#13;&#10;        title_code,&#13;&#10;        TITLE_NAME_PRI_APPT,&#13;&#10;        Title_Code_Pri_Appt,&#13;&#10;        Active_This_Month_Empl,&#13;&#10;        CASE&#13;&#10;                WHEN eff_date = &apos;OCT2009&apos; and location_1 = &apos;01&apos; and title_code in (&#13;&#10;                &apos;000209&apos;,&#13;&#10;                &apos;000212&apos;,&#13;&#10;                &apos;000213&apos;,&#13;&#10;                &apos;000214&apos;,&#13;&#10;                &apos;000215&apos;,&#13;&#10;                &apos;000220&apos;,&#13;&#10;                &apos;000245&apos;,&#13;&#10;                &apos;000280&apos;,&#13;&#10;                &apos;000302&apos;,&#13;&#10;                &apos;000303&apos;,&#13;&#10;                &apos;000304&apos;,&#13;&#10;                &apos;000305&apos;,&#13;&#10;                &apos;000307&apos;,&#13;&#10;                &apos;000308&apos;,&#13;&#10;                &apos;000309&apos;,&#13;&#10;                &apos;000310&apos;,&#13;&#10;                &apos;000311&apos;,&#13;&#10;                &apos;000312&apos;,&#13;&#10;                &apos;000313&apos;,&#13;&#10;                &apos;000314&apos;,&#13;&#10;                &apos;000315&apos;,&#13;&#10;                &apos;000316&apos;,&#13;&#10;                &apos;000317&apos;,&#13;&#10;                &apos;000318&apos;,&#13;&#10;                &apos;000319&apos;,&#13;&#10;                &apos;000320&apos;,&#13;&#10;                &apos;000321&apos;,&#13;&#10;                &apos;000322&apos;,&#13;&#10;                &apos;000323&apos;,&#13;&#10;                &apos;000324&apos;,&#13;&#10;                &apos;000325&apos;,&#13;&#10;                &apos;000327&apos;,&#13;&#10;                &apos;000329&apos;,&#13;&#10;                &apos;000334&apos;,&#13;&#10;                &apos;000336&apos;,&#13;&#10;                &apos;000337&apos;,&#13;&#10;                &apos;000344&apos;,&#13;&#10;                &apos;000349&apos;,&#13;&#10;                &apos;000350&apos;,&#13;&#10;                &apos;000351&apos;,&#13;&#10;                &apos;000355&apos;,&#13;&#10;                &apos;000360&apos;,&#13;&#10;                &apos;000361&apos;,&#13;&#10;                &apos;000373&apos;,&#13;&#10;                &apos;000375&apos;,&#13;&#10;                &apos;000376&apos;,&#13;&#10;                &apos;000381&apos;,&#13;&#10;                &apos;000382&apos;,&#13;&#10;                &apos;000389&apos;,&#13;&#10;                &apos;000390&apos;,&#13;&#10;                &apos;000391&apos;,&#13;&#10;                &apos;000392&apos;,&#13;&#10;                &apos;000394&apos;,&#13;&#10;                &apos;000395&apos;,&#13;&#10;                &apos;000398&apos;,&#13;&#10;                &apos;000403&apos;,&#13;&#10;                &apos;000404&apos;,&#13;&#10;                &apos;000408&apos;,&#13;&#10;                &apos;000410&apos;,&#13;&#10;                &apos;000413&apos;,&#13;&#10;                &apos;000414&apos;,&#13;&#10;                &apos;000417&apos;,&#13;&#10;                &apos;000419&apos;,&#13;&#10;                &apos;000421&apos;,&#13;&#10;                &apos;000422&apos;,&#13;&#10;                &apos;000423&apos;,&#13;&#10;                &apos;000424&apos;,&#13;&#10;                &apos;000429&apos;,&#13;&#10;                &apos;000436&apos;,&#13;&#10;                &apos;000437&apos;,&#13;&#10;                &apos;000439&apos;,&#13;&#10;                &apos;000441&apos;,&#13;&#10;                &apos;000444&apos;,&#13;&#10;                &apos;000445&apos;,&#13;&#10;                &apos;000457&apos;,&#13;&#10;                &apos;000458&apos;,&#13;&#10;                &apos;000459&apos;,&#13;&#10;                &apos;000460&apos;,&#13;&#10;                &apos;000464&apos;,&#13;&#10;                &apos;000465&apos;,&#13;&#10;                &apos;000466&apos;,&#13;&#10;                &apos;000467&apos;,&#13;&#10;                &apos;000468&apos;,&#13;&#10;                &apos;000471&apos;,&#13;&#10;                &apos;000473&apos;,&#13;&#10;                &apos;000474&apos;,&#13;&#10;                &apos;000475&apos;,&#13;&#10;                &apos;000479&apos;,&#13;&#10;                &apos;000481&apos;,&#13;&#10;                &apos;000483&apos;,&#13;&#10;                &apos;000485&apos;,&#13;&#10;                &apos;000487&apos;,&#13;&#10;                &apos;000494&apos;,&#13;&#10;                &apos;000515&apos;,&#13;&#10;                &apos;000519&apos;,&#13;&#10;                &apos;000524&apos;,&#13;&#10;                &apos;000525&apos;,&#13;&#10;                &apos;000541&apos;,&#13;&#10;                &apos;000547&apos;,&#13;&#10;                &apos;000548&apos;,&#13;&#10;                &apos;000549&apos;,&#13;&#10;                &apos;000550&apos;,&#13;&#10;                &apos;000552&apos;,&#13;&#10;                &apos;000556&apos;,&#13;&#10;                &apos;000559&apos;,&#13;&#10;                &apos;000564&apos;,&#13;&#10;                &apos;000567&apos;,&#13;&#10;                &apos;000568&apos;,&#13;&#10;                &apos;000569&apos;,&#13;&#10;                &apos;000570&apos;,&#13;&#10;                &apos;000572&apos;,&#13;&#10;                &apos;000573&apos;,&#13;&#10;                &apos;000574&apos;,&#13;&#10;                &apos;000575&apos;,&#13;&#10;                &apos;000594&apos;,&#13;&#10;                &apos;000607&apos;,&#13;&#10;                &apos;000608&apos;,&#13;&#10;                &apos;000609&apos;,&#13;&#10;                &apos;000614&apos;,&#13;&#10;                &apos;000616&apos;,&#13;&#10;                &apos;000617&apos;,&#13;&#10;                &apos;000621&apos;,&#13;&#10;                &apos;000624&apos;,&#13;&#10;                &apos;000625&apos;,&#13;&#10;                &apos;000626&apos;,&#13;&#10;                &apos;000630&apos;,&#13;&#10;                &apos;000631&apos;,&#13;&#10;                &apos;000649&apos;,&#13;&#10;                &apos;000650&apos;,&#13;&#10;                &apos;000651&apos;,&#13;&#10;                &apos;000656&apos;,&#13;&#10;                &apos;000666&apos;,&#13;&#10;                &apos;000667&apos;,&#13;&#10;                &apos;000668&apos;,&#13;&#10;                &apos;000669&apos;,&#13;&#10;                &apos;000670&apos;,&#13;&#10;                &apos;000671&apos;,&#13;&#10;                &apos;000672&apos;,&#13;&#10;                &apos;000673&apos;,&#13;&#10;                &apos;000675&apos;,&#13;&#10;                &apos;000677&apos;,&#13;&#10;                &apos;000678&apos;,&#13;&#10;                &apos;000680&apos;,&#13;&#10;                &apos;000682&apos;,&#13;&#10;                &apos;000688&apos;) THEN &apos;M10&apos;&#13;&#10;                ELSE class_ttl_outl_code_appt &#13;&#10;        END as CTO_fix,&#13;&#10;        gross_earnings_pay_per,&#13;&#10;        time_distrib_actual&#13;&#10;from personnel.per_snap_all&#13;&#10;&#13;&#10;where eff_date in (&#13;&#10;        &apos;OCT2007&apos;,&#13;&#10;&#9;&apos;OCT2008&apos;,&#13;&#10;&#9;&apos;OCT2009&apos;,&#13;&#10;&#9;&apos;OCT2010&apos;,&#13;&#10;&#9;&apos;OCT2011&apos;,&#13;&#10;&#9;&apos;OCT2012&apos;,&#13;&#10;&#9;&apos;OCT2013&apos;,&#13;&#10;&#9;&apos;OCT2014&apos;,&#13;&#10;&#9;&apos;OCT2015&apos;&#13;&#10;)&#13;&#10;and dos_code_cps IN (&apos;AM&apos;, &apos;AV&apos;, &apos;AW&apos;, &apos;AX&apos;, &apos;HR&apos;, &apos;HD&apos;, &apos;HY&apos;)</relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>EFF_DATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[EFF_DATE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>EFF_DATE</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>7</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EMPLOYEE_NUMBER</remote-name>
            <remote-type>129</remote-type>
            <local-name>[EMPLOYEE_NUMBER]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>EMPLOYEE_NUMBER</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>9</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EMPLOYEE_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[EMPLOYEE_NAME]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>EMPLOYEE_NAME</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DOS_CODE_CPS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DOS_CODE_CPS]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>DOS_CODE_CPS</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PERS_PGM</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PERS_PGM]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>PERS_PGM</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>3</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CAMPUS_NAME_ABR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CAMPUS_NAME_ABR]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>CAMPUS_NAME_ABR</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LOCATION_1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LOCATION_1]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>LOCATION_1</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LOCATION_2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LOCATION_2]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>LOCATION_2</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>1</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LOCATION_3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LOCATION_3]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>LOCATION_3</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>1</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CHECK_DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[CHECK_DATE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>CHECK_DATE</remote-alias>
            <ordinal>10</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>APPT_TYPE_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[APPT_TYPE_CODE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>APPT_TYPE_CODE</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>1</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>APPT_TYPE_CODE_PRI</remote-name>
            <remote-type>129</remote-type>
            <local-name>[APPT_TYPE_CODE_PRI]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>APPT_TYPE_CODE_PRI</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>1</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FUNCTION_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FUNCTION_CODE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>FUNCTION_CODE</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FUNCTION_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FUNCTION_NAME]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>FUNCTION_NAME</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>30</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FUND_GROUP_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FUND_GROUP_CODE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>FUND_GROUP_CODE</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>6</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FUND</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FUND]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>FUND</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>5</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORG_1_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ORG_1_CODE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>ORG_1_CODE</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>7</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORG_1_TITLE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ORG_1_TITLE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>ORG_1_TITLE</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>30</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORG_2_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ORG_2_CODE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>ORG_2_CODE</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>7</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORG_2_TITLE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ORG_2_TITLE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>ORG_2_TITLE</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>30</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORG_3_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ORG_3_CODE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>ORG_3_CODE</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>7</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORG_3_TITLE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ORG_3_TITLE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>ORG_3_TITLE</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>30</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UAS_DISCIPLINE_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UAS_DISCIPLINE_CODE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>UAS_DISCIPLINE_CODE</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>3</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UAS_DISCIPLINE_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UAS_DISCIPLINE_NAME]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>UAS_DISCIPLINE_NAME</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>30</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SAU_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SAU_CODE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>SAU_CODE</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>1</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CLASS_TTL_OUTL_CODE_APPT1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CLASS_TTL_OUTL_CODE_APPT1]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>CLASS_TTL_OUTL_CODE_APPT1</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>1</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CLASS_TTL_OUTL_CODE_APPT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CLASS_TTL_OUTL_CODE_APPT]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>CLASS_TTL_OUTL_CODE_APPT</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>3</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CLASS_TTL_OUTL_NAME_APPT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CLASS_TTL_OUTL_NAME_APPT]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>CLASS_TTL_OUTL_NAME_APPT</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>30</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CLASS_TTL_OUTL_NAME_PRI</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CLASS_TTL_OUTL_NAME_PRI]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>CLASS_TTL_OUTL_NAME_PRI</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>30</width>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TITLE_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TITLE_CODE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>TITLE_CODE</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>6</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TITLE_NAME_PRI_APPT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TITLE_NAME_PRI_APPT]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>TITLE_NAME_PRI_APPT</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>30</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TITLE_CODE_PRI_APPT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TITLE_CODE_PRI_APPT]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>TITLE_CODE_PRI_APPT</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>6</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ACTIVE_THIS_MONTH_EMPL</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ACTIVE_THIS_MONTH_EMPL]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>ACTIVE_THIS_MONTH_EMPL</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>1</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CTO_FIX</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CTO_FIX]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>CTO_FIX</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>3</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GROSS_EARNINGS_PAY_PER</remote-name>
            <remote-type>131</remote-type>
            <local-name>[GROSS_EARNINGS_PAY_PER]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>GROSS_EARNINGS_PAY_PER</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>14</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_DISTRIB_ACTUAL</remote-name>
            <remote-type>131</remote-type>
            <local-name>[TIME_DISTRIB_ACTUAL]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>TIME_DISTRIB_ACTUAL</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='date' name='[CHECK_DATE]' role='dimension' type='ordinal' />
      <column datatype='string' name='[CLASS_TTL_OUTL_CODE_APPT1]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot; &quot;' value='Non Classified' />
          <alias key='&quot;0&quot;' value='0 - Faculty  - Ladder Ranks' />
          <alias key='&quot;1&quot;' value='1 - Faculty - Acting Ranks' />
          <alias key='&quot;2&quot;' value='2 - Lecturers' />
          <alias key='&quot;3&quot;' value='3 - Additional Faculty' />
          <alias key='&quot;4&quot;' value='4 - Student Assistants' />
          <alias key='&quot;5&quot;' value='5 - Researchers' />
          <alias key='&quot;6&quot;' value='6 - Librarians' />
          <alias key='&quot;7&quot;' value='7 - Cooperative Extension' />
          <alias key='&quot;8&quot;' value='8 - University Extension' />
          <alias key='&quot;9&quot;' value='9 - Other Academic Personnel' />
          <alias key='&quot;A&quot;' value='A - Student Services' />
          <alias key='&quot;B&quot;' value='B - Clerical and Allied Services' />
          <alias key='&quot;C&quot;' value='C - Food and Linen Services' />
          <alias key='&quot;D&quot;' value='D - Communication, Arts and Graphics' />
          <alias key='&quot;E&quot;' value='E - Architechture, Engineering and Allied Services' />
          <alias key='&quot;F&quot;' value='F - Fiscal Management and Staff Services' />
          <alias key='&quot;G&quot;' value='G - Maintenance, Fabrication and Operations' />
          <alias key='&quot;H&quot;' value='H - Health Care and Allied Services' />
          <alias key='&quot;I&quot;' value='I - Sciences, Laboratory and Allied Services' />
          <alias key='&quot;J&quot;' value='J - Protective Services' />
          <alias key='&quot;M&quot;' value='M - Management' />
          <alias key='&quot;S&quot;' value='S - Academic Administrative Officers' />
          <alias key='&quot;Z&quot;' value='Z - Other' />
        </aliases>
      </column>
      <column caption='OP ANR Flag' datatype='string' name='[Calculation_1016687669559242752]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='// Pull out OP and ANR employees&#13;&#10;&#13;&#10;IF [LOCATION_2] = &apos;2&apos; AND [SAU_CODE] != &apos;4&apos; THEN &apos;UCOP&apos;&#13;&#10;ELSEIF [LOCATION_2] = &apos;2&apos; and [SAU_CODE] = &apos;4&apos; THEN &apos;ANR&apos;&#13;&#10;ELSE &apos;Other loc&apos;&#13;&#10;END' />
      </column>
      <column caption='Base FTE flag' datatype='string' name='[Calculation_1016687669560307714]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='// Filters out non-base FTE using description of service (DOS) codes.&#13;&#10;&#13;&#10;IF [DOS_CODE_CPS] = &apos;AV&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;AW&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;AX&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;AM&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;HR&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;HD&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;HY&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSE &apos;Other FTE&apos;&#13;&#10;END' />
      </column>
      <column caption='Calculation3' datatype='real' name='[Calculation_1110137365823213568]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([GROSS_EARNINGS_PAY_PER])/sum([TIME_DISTRIB_ACTUAL])) *12' />
      </column>
      <column caption='General Campus/Health Sci' datatype='string' name='[Calculation_1172906285524258816]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='// There are sometimes issues with how the campuses encode their data for location_3, which is what we use&#13;&#10;// to track those in the UC health umberella. To remedy this, one can look at the org_1_code and org_1_title &#13;&#10;//fields to see if there were errors. In the cases below, we could tell location_3 was not correct by looking &#13;&#10;//at the org_1 titles. If an org title indicated a medical school or some other health science area and it was &#13;&#10;// categorized into general campus, we capture that and make sure it correctly categorized into health&#13;&#10;&#13;&#10;// Fixes for Irvine&#13;&#10;&#13;&#10;IF  [LOCATION_3] = &apos;2&apos; THEN &apos;UC Health&apos;&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;09&apos;) &#13;&#10;    AND ((RTRIM([ORG_1_CODE]) = &apos;99030&apos;) &#13;&#10;    OR (RTRIM([ORG_1_CODE]) = &apos;9MEDC&apos;) &#13;&#10;    OR (RTRIM([ORG_1_CODE]) = &apos;92000&apos;))&#13;&#10;THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;// Fixes for Riverside&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;05&apos; AND RTRIM([ORG_1_CODE]) = &apos;5ORG40&apos;) THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;// Fixes for Los Angeles&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;04&apos;) &#13;&#10;    AND ((RTRIM([ORG_1_CODE]) = &apos;44000&apos;) &#13;&#10;    OR (RTRIM([ORG_1_CODE]) = &apos;42200&apos;)&#13;&#10;    OR (RTRIM([ORG_1_CODE]) = &apos;43200&apos;))&#13;&#10;THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;// Fixes for San Diego&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;06&apos;) AND &#13;&#10;    ((RTRIM([ORG_1_CODE]) = &apos;6000003&apos;) &#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;6     3&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;6000005&apos;) &#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;6     5&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;60003&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;60008&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;6000008&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;60005&apos;)&#13;&#10;)&#13;&#10;THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;ELSE &apos;General Campus&apos;&#13;&#10;&#13;&#10;END' />
      </column>
      <column caption='Health Breakout' datatype='string' name='[Calculation_1172906285534130177]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='// Breaks out medical centers and health sciences from overal UC health&#13;&#10;&#13;&#10;IF [Calculation_1172906285524258816] = &apos;UC Health&apos; AND [FUNCTION_CODE] = &apos;42&apos; THEN &apos;Med Center&apos;&#13;&#10;ELSEIF [Calculation_1172906285524258816] = &apos;UC Health&apos; AND [FUNCTION_CODE] != &apos;42&apos; THEN &apos;Health Sciences&apos;&#13;&#10;END' />
      </column>
      <column caption='Service Focus Filter' datatype='string' name='[Calculation_1172906285535813634]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='// Used to facilitate the filtering of the health sciences breakout.&#13;&#10;&#13;&#10;IF &#13;&#10;    [Parameters].[Parameter 2] = [Calculation_1172906285534130177] &#13;&#10;THEN &#13;&#10;    &quot;Show&quot;&#13;&#10;ELSEIF &#13;&#10;    [Parameters].[Parameter 2] = [Calculation_1172906285524258816] &#13;&#10;THEN &#13;&#10;    &quot;Show&quot;&#13;&#10;ELSEIF &#13;&#10;    [Parameters].[Parameter 2] = &apos;All&apos; THEN &apos;Show&apos;&#13;&#10;END' />
      </column>
      <column caption='Job Family - original' datatype='string' name='[Calculation_1198239034499338240]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='// This categorizes employees into different job families which were put together by Charles Masten for our&#13;&#10;// &apos;9-pager&apos; report.&#13;&#10;&#13;&#10;IF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and (      [CLASS_TTL_OUTL_CODE_APPT] = &apos;A10&apos; &#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A15&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A20&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A25&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A30&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A35&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;C10&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;C15&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;C20&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;C30&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H10&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H15&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H20&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H25&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H30&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H35&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H40&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H45&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H50&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H55&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H60&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H65&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H70&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H75&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H80&apos;&#13;&#10;) THEN &quot;Student Services (including Health, Housing, and Dining)&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and [CLASS_TTL_OUTL_CODE_APPT] = &apos;F20&apos; &#13;&#10;    THEN &quot;Administrative Analysis&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and &#13;&#10;        ([CLASS_TTL_OUTL_CODE_APPT] = &apos;B15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;B20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;B40&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;B30&apos;)&#13;&#10;    THEN &quot;Clerical &amp; Allied Services&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and [CLASS_TTL_OUTL_CODE_APPT] = &apos;F15&apos;&#13;&#10;    THEN &quot;Computer Programming and Analysis&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and ([CLASS_TTL_OUTL_CODE_APPT] = &apos;E10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;E15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;E20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G23&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G25&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G33&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G35&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G40&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G45&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G55&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G65&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G75&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G80&apos;)&#13;&#10;    THEN &quot;Arch./Engineering/Maint &amp; Plant Operations&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and ([CLASS_TTL_OUTL_CODE_APPT] = &apos;D10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;D15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;D25&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F30&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F35&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F40&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F45&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;I10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;I15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;I20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;I25&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;J10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;J15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;M20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;Z10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;Z20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;Z25&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;   &apos;)&#13;&#10;    THEN &quot;All Others (Laboratory, Comm. &amp; Fiscal Serv)&quot;&#13;&#10;ELSE &apos;Uncategorized&apos;&#13;&#10;END' />
      </column>
      <column caption='CTO 1 Fix' datatype='string' name='[Calculation_1338132104735383555]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [CTO_FIX] = &apos;M10&apos; THEN &apos;M&apos;&#13;&#10;ELSE [CLASS_TTL_OUTL_CODE_APPT1]&#13;&#10;END' />
      </column>
      <column caption='CTO Name' datatype='string' name='[Calculation_1338132104736489476]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [CTO_FIX] = &apos;M10&apos; THEN &apos;MANAGERS&apos; &#13;&#10;ELSE [CLASS_TTL_OUTL_NAME_APPT]&#13;&#10;END' />
      </column>
      <column caption='Location - Full List' datatype='string' name='[Calculation_145804093765197824]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='// Location list that includes OP and ANR&#13;&#10;&#13;&#10;IF [Calculation_1016687669559242752] = &apos;UCOP&apos; THEN &apos;OP&apos;&#13;&#10;ELSEIF [Calculation_1016687669559242752] = &apos;ANR&apos; THEN &apos;ANR&apos;&#13;&#10;ELSE [CAMPUS_NAME_ABR]&#13;&#10;END' />
        <aliases>
          <alias key='&quot;ANR&quot;' value='Ag &amp; Nat Resources (ANR)' />
          <alias key='&quot;BK&quot;' value='Berkeley' />
          <alias key='&quot;DV&quot;' value='Davis' />
          <alias key='&quot;IR&quot;' value='Irvine' />
          <alias key='&quot;LA&quot;' value='Los Angeles' />
          <alias key='&quot;MC&quot;' value='Merced' />
          <alias key='&quot;OP&quot;' value='Office of the President &amp; SWP*' />
          <alias key='&quot;RV&quot;' value='Riverside' />
          <alias key='&quot;SB&quot;' value='Santa Barbara' />
          <alias key='&quot;SC&quot;' value='Santa Cruz' />
          <alias key='&quot;SD&quot;' value='San Diego' />
          <alias key='&quot;SF&quot;' value='San Francisco' />
        </aliases>
      </column>
      <column caption='Funding Source (More Granular)' datatype='string' name='[Calculation_145804093768806401]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='// This categorizes funds into core and non-core in a more granular way&#13;&#10;&#13;&#10;IF (RTRIM([FUND_GROUP_CODE]) = &apos;401&apos;&#13;&#10;OR RTRIM([FUND_GROUP_CODE]) = &apos;402&apos;&#13;&#10;OR RTRIM([FUND_GROUP_CODE]) = &apos;40411&apos;) THEN &apos;General Funds (Core)&apos;&#13;&#10;ELSEIF (RTRIM([FUND_GROUP_CODE]) = &apos;40311&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40312&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403141&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403142&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403143&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403144&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403145&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403146&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403147&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403148&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403149&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40315&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403151&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403152&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403153&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;4032&apos;) THEN &apos;Other Core Funds&apos;&#13;&#10;ELSE &apos;Non-Core Funds&apos;&#13;&#10;END' />
      </column>
      <column caption='Base FTE' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_752382666467852288]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// Filters for only &apos;base FTE&apos;&#13;&#10;&#13;&#10;&#13;&#10;//Applies fix for those at Irvine who received retro-active pay adjustments that were encoded with 1.0 FTE&#13;&#10;// when they should have had 0.0 FTE. We foudn all of the check dates were on the same day and so this allows&#13;&#10;// us to remove the FTE from those lines while retaining the associated pay.&#13;&#10;IF [LOCATION_1] = &apos;09&apos; AND [CHECK_DATE] = DATE(&apos;12/1/2015&apos;) THEN 0&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [Calculation_1016687669560307714] = &apos;Base FTE&apos; THEN [TIME_DISTRIB_ACTUAL]&#13;&#10;END' />
      </column>
      <column caption='Career Status' datatype='string' name='[Calculation_869757736329613312]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [PERS_PGM] = &apos;ACA&apos; THEN &apos;Academic Personnel&apos;&#13;&#10;ELSEIF ([Calculation_946318925060980737] = &apos;2&apos; OR [Calculation_946318925060980737] = &apos;7&apos;) THEN &apos;Career Staff&apos;&#13;&#10;ELSE &apos;Non-Career Staff&apos;&#13;&#10;&#13;&#10;END' />
      </column>
      <column caption='Personnel Program Split' datatype='string' name='[Calculation_946318925060562944]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='// This categorizes employees into a more ganular version of personnel program. Particularly, it breaks&#13;&#10;// managers out from senior professionals in the MSP personnel program. It also breaks students out from the&#13;&#10;// large PSS personnel program. &#13;&#10;// For several years some employees were miscategorized with the CTO of M05, which is used for those in the&#13;&#10;// SMG personnel program when they should have been in the &apos;Managers&apos; CTO of M10, line 5 below fixes this.&#13;&#10;&#13;&#10;IF [PERS_PGM] = &apos;ACA&apos; THEN &apos;Academics&apos;&#13;&#10;ELSEIF [Calculation_946318925060980737] = &apos;4&apos; THEN &apos;Student Staff&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;SMG&apos; THEN &apos;SMG&apos;&#13;&#10;ELSEIF [CTO_FIX] = &apos;M10&apos; THEN &apos;MSP - Managers&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;MSP&apos; AND [CTO_FIX] = &apos;M05&apos; THEN &apos;MSP - Managers&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;MSP&apos; and [CTO_FIX] != &apos;M10&apos; THEN &apos;MSP - Senior Professionals&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;PSS&apos; and [Calculation_946318925060980737] != &apos;4&apos; THEN &apos;PSS - Non Students&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;UNK&apos; THEN &apos;PSS - Non Students&apos;&#13;&#10;END' />
        <aliases>
          <alias key='&quot;MSP - Managers&quot;' value='Managers (M)' />
          <alias key='&quot;MSP - Senior Professionals&quot;' value='Senior Professionals (SP)' />
          <alias key='&quot;PSS - Non Students&quot;' value='Professional &amp; Support Staff (PSS)  - Non Students' />
          <alias key='&quot;SMG&quot;' value='Senior Management Group (SMG)' />
        </aliases>
      </column>
      <column caption='appt type use' datatype='string' name='[Calculation_946318925060980737]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='// This code is used if the data has been extracted&#13;&#10;IF [APPT_TYPE_CODE] = &apos; &apos; THEN [APPT_TYPE_CODE_PRI]&#13;&#10;ELSE [APPT_TYPE_CODE]&#13;&#10;END&#13;&#10;&#13;&#10;//    This code is used if the connection to the server is live&#13;&#10;//    IF ISNULL([appt_type_code]) THEN [appt_type_code_pri]&#13;&#10;//    Else [appt_type_code]&#13;&#10;//    END' />
        <aliases>
          <alias key='&quot;1&quot;' value='Contract' />
          <alias key='&quot;2&quot;' value='Career' />
          <alias key='&quot;3&quot;' value='Limited' />
          <alias key='&quot;4&quot;' value='Casual/Restricted (student)' />
          <alias key='&quot;5&quot;' value='Academic' />
          <alias key='&quot;6&quot;' value='Per diem' />
          <alias key='&quot;7&quot;' value='Partial year career' />
          <alias key='&quot;8&quot;' value='Floater' />
        </aliases>
      </column>
      <column caption='Funding Source' datatype='string' name='[Funding Groups (More Granular) (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='// This categorizes funds into core and non-core&#13;&#10;&#13;&#10;IF [FUND] = &apos;69085&apos; THEN &apos;Systemwide Assessment&apos;&#13;&#10;&#13;&#10;ELSEIF    (RTRIM([FUND_GROUP_CODE]) = &apos;401&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;402&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40411&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40311&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40312&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403141&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403142&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403143&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403144&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403145&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403146&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403147&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403148&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403149&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40315&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403151&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403152&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403153&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;4032&apos;) THEN &apos;Core Funds&apos;&#13;&#10;ELSE &apos;Non-Core Funds&apos;&#13;&#10;END' />
      </column>
      <column caption='Job Family' datatype='string' name='[Job Family - original (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='// This categorizes employees into different job families which were put together by Charles Masten for our&#13;&#10;// &apos;9-pager&apos; report.&#13;&#10;&#13;&#10;IF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and (      [CLASS_TTL_OUTL_CODE_APPT] = &apos;A10&apos; &#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A15&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A20&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A25&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A30&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A35&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;C10&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;C15&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;C20&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;C30&apos;&#13;&#10;) THEN &quot;Student Services (including Health, Housing, and Dining)&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;       and(    [CLASS_TTL_OUTL_CODE_APPT] = &apos;H10&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H15&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H20&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H25&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H30&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H35&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H40&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H45&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H50&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H55&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H60&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H65&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H70&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H75&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H80&apos;&#13;&#10;) THEN &quot;UC Health&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and [CLASS_TTL_OUTL_CODE_APPT] = &apos;F20&apos; &#13;&#10;    THEN &quot;Administrative Analysis&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and &#13;&#10;        ([CLASS_TTL_OUTL_CODE_APPT] = &apos;B15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;B20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;B40&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;B30&apos;)&#13;&#10;    THEN &quot;Clerical &amp; Allied Services&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and [CLASS_TTL_OUTL_CODE_APPT] = &apos;F15&apos;&#13;&#10;    THEN &quot;Computer Programming and Analysis&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and ([CLASS_TTL_OUTL_CODE_APPT] = &apos;E10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;E15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;E20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G23&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G25&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G33&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G35&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G40&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G45&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G55&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G65&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G75&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G80&apos;)&#13;&#10;    THEN &quot;Arch./Engineering/Maint &amp; Plant Operations&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and ([CLASS_TTL_OUTL_CODE_APPT] = &apos;D10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;D15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;D25&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F30&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F35&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F40&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F45&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;I10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;I15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;I20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;I25&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;J10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;J15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;M20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;Z10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;Z20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;Z25&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;   &apos;)&#13;&#10;    THEN &quot;All Others (Laboratory, Comm. &amp; Fiscal Serv)&quot;&#13;&#10;ELSE &apos;Uncategorized&apos;&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Personnel Program Split (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_946318925060562944]'>
          <bin value='&quot;MSP - Managers&quot;'>
            <value>&quot;MSP - Managers&quot;</value>
            <value>&quot;MSP - Senior Professionals&quot;</value>
            <value>&quot;PSS - Non Students&quot;</value>
            <value>&quot;SMG&quot;</value>
            <value>&quot;Student Staff&quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot;Academics&quot;' value='Academic Personnel' />
          <alias key='&quot;MSP - Managers&quot;' value='Non-Academic Personnel' />
        </aliases>
      </column>
      <column datatype='string' name='[appt type use (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_946318925060980737]'>
          <bin value='&quot; &quot;'>
            <value>&quot; &quot;</value>
            <value>&quot;1&quot;</value>
            <value>&quot;3&quot;</value>
            <value>&quot;4&quot;</value>
            <value>&quot;5&quot;</value>
            <value>&quot;6&quot;</value>
            <value>&quot;8&quot;</value>
          </bin>
          <bin value='&quot;2&quot;'>
            <value>&quot;2&quot;</value>
            <value>&quot;7&quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot; &quot;' value='Non-Career' />
          <alias key='&quot;2&quot;' value='Career' />
        </aliases>
      </column>
      <column-instance column='[CHECK_DATE]' derivation='Month' name='[mn:CHECK_DATE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_145804093768806401]' derivation='None' name='[none:Calculation_145804093768806401:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (eff_date,Funding Source (More Granular),Personnel Program Split (group))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:eff_date:nk]' />
          <groupfilter function='level-members' level='[none:Calculation_145804093768806401:nk]' />
          <groupfilter function='level-members' level='[Personnel Program Split (group)]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\chbrooks\Desktop\audit\new product\07-15 october snap data DB2.tde' schema='Extract' tablename='Extract' update-time='10/04/2016 10:13:25 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_1016687669559242752]' formula='// Pull out OP and ANR employees&#13;&#10;&#13;&#10;IF [LOCATION_2] = &apos;2&apos; AND [SAU_CODE] != &apos;4&apos; THEN &apos;UCOP&apos;&#13;&#10;ELSEIF [LOCATION_2] = &apos;2&apos; and [SAU_CODE] = &apos;4&apos; THEN &apos;ANR&apos;&#13;&#10;ELSE &apos;Other loc&apos;&#13;&#10;END' />
            <calculation column='[Calculation_1016687669560307714]' formula='// Filters out non-base FTE using description of service (DOS) codes.&#13;&#10;&#13;&#10;IF [DOS_CODE_CPS] = &apos;AV&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;AW&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;AX&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;AM&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;HR&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;HD&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;HY&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSE &apos;Other FTE&apos;&#13;&#10;END' />
            <calculation column='[Calculation_1172906285524258816]' formula='// There are sometimes issues with how the campuses encode their data for location_3, which is what we use&#13;&#10;// to track those in the UC health umberella. To remedy this, one can look at the org_1_code and org_1_title &#13;&#10;//fields to see if there were errors. In the cases below, we could tell location_3 was not correct by looking &#13;&#10;//at the org_1 titles. If an org title indicated a medical school or some other health science area and it was &#13;&#10;// categorized into general campus, we capture that and make sure it correctly categorized into health&#13;&#10;&#13;&#10;// Fixes for Irvine&#13;&#10;&#13;&#10;IF  [LOCATION_3] = &apos;2&apos; THEN &apos;UC Health&apos;&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;09&apos;) &#13;&#10;    AND (([ORG_1_CODE] = &apos;99030  &apos;) &#13;&#10;    OR ([ORG_1_CODE] = &apos;9MEDC  &apos;) &#13;&#10;    OR ([ORG_1_CODE] = &apos;92000  &apos;))&#13;&#10;THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;// Fixes for Riverside&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;05&apos; AND [ORG_1_CODE] = &apos;5ORG40 &apos;) THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;// Fixes for Los Angeles&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;04&apos;) &#13;&#10;    AND (([ORG_1_CODE] = &apos;44000  &apos;) &#13;&#10;    OR ([ORG_1_CODE] = &apos;42200  &apos;)&#13;&#10;    OR ([ORG_1_CODE] = &apos;43200  &apos;))&#13;&#10;THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;// Fixes for San Diego&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;06&apos;) AND &#13;&#10;    (([ORG_1_CODE] = &apos;6000003&apos;) &#13;&#10;        OR ([ORG_1_CODE] = &apos;6     3&apos;)&#13;&#10;        OR ([ORG_1_CODE] = &apos;6000005&apos;) &#13;&#10;        OR ([ORG_1_CODE] = &apos;6     5&apos;)&#13;&#10;        OR ([ORG_1_CODE] = &apos;60003  &apos;)&#13;&#10;        OR ([ORG_1_CODE] = &apos;60008  &apos;)&#13;&#10;        OR ([ORG_1_CODE] = &apos;6000008&apos;)&#13;&#10;        OR ([ORG_1_CODE] = &apos;60005  &apos;)&#13;&#10;)&#13;&#10;THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;ELSE &apos;General Campus&apos;&#13;&#10;&#13;&#10;END' />
            <calculation column='[Calculation_1172906285534130177]' formula='// Breaks out medical centers and health sciences from overal UC health&#13;&#10;&#13;&#10;IF [Calculation_1172906285524258816] = &apos;UC Health&apos; AND [FUNCTION_CODE] = &apos;42&apos; THEN &apos;Med Center&apos;&#13;&#10;ELSEIF [Calculation_1172906285524258816] = &apos;UC Health&apos; AND [FUNCTION_CODE] != &apos;42&apos; THEN &apos;Health Sciences&apos;&#13;&#10;END' />
            <calculation column='[Calculation_1198239034499338240]' formula='// This categorizes employees into different job families which were put together by Charles Masten for our&#13;&#10;// &apos;9-pager&apos; report.&#13;&#10;&#13;&#10;IF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and (      [CLASS_TTL_OUTL_CODE_APPT] = &apos;A10&apos; &#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A15&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A20&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A25&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A30&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A35&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;C10&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;C15&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;C20&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;C30&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H10&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H15&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H20&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H25&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H30&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H35&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H40&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H45&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H50&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H55&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H60&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H65&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H70&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H75&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H80&apos;&#13;&#10;) THEN &quot;Student Services (including Health, Housing, and Dining)&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and [CLASS_TTL_OUTL_CODE_APPT] = &apos;F20&apos; &#13;&#10;    THEN &quot;Administrative Analysis&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and &#13;&#10;        ([CLASS_TTL_OUTL_CODE_APPT] = &apos;B15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;B20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;B40&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;B30&apos;)&#13;&#10;    THEN &quot;Clerical &amp; Allied Services&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and [CLASS_TTL_OUTL_CODE_APPT] = &apos;F15&apos;&#13;&#10;    THEN &quot;Computer Programming and Analysis&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and ([CLASS_TTL_OUTL_CODE_APPT] = &apos;E10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;E15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;E20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G23&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G25&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G33&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G35&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G40&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G45&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G55&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G65&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G75&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G80&apos;)&#13;&#10;    THEN &quot;Arch./Engineering/Maint &amp; Plant Operations&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and ([CLASS_TTL_OUTL_CODE_APPT] = &apos;D10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;D15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;D25&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F30&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F35&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F40&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F45&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;I10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;I15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;I20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;I25&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;J10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;J15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;M20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;Z10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;Z20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;Z25&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;   &apos;)&#13;&#10;    THEN &quot;All Others (Laboratory, Comm. &amp; Fiscal Serv)&quot;&#13;&#10;ELSE &apos;Uncategorized&apos;&#13;&#10;END' />
            <calculation column='[Calculation_145804093765197824]' formula='// Location list that includes OP and ANR&#13;&#10;&#13;&#10;IF [Calculation_1016687669559242752] = &apos;UCOP&apos; THEN &apos;OP&apos;&#13;&#10;ELSEIF [Calculation_1016687669559242752] = &apos;ANR&apos; THEN &apos;ANR&apos;&#13;&#10;ELSE [CAMPUS_NAME_ABR]&#13;&#10;END' />
            <calculation column='[Calculation_145804093768806401]' formula='// This categorizes funds into core and non-core in a more granular way&#13;&#10;&#13;&#10;IF ([FUND_GROUP_CODE] = &apos;401   &apos;&#13;&#10;OR [FUND_GROUP_CODE] = &apos;402   &apos;&#13;&#10;OR [FUND_GROUP_CODE] = &apos;40411 &apos;) THEN &apos;General Funds (Core)&apos;&#13;&#10;ELSEIF ([FUND_GROUP_CODE] = &apos;40311 &apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;40312 &apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;403141&apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;403142&apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;403143&apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;403144&apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;403145&apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;403146&apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;403147&apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;403148&apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;403149&apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;40315 &apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;403151&apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;403152&apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;403153&apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;4032  &apos;) THEN &apos;Other Core Funds&apos;&#13;&#10;ELSE &apos;Non-Core Funds&apos;&#13;&#10;END' />
            <calculation column='[Calculation_752382666467852288]' formula='// Filters for only &apos;base FTE&apos;&#13;&#10;&#13;&#10;&#13;&#10;//Applies fix for those at Irvine who received retro-active pay adjustments that were encoded with 1.0 FTE&#13;&#10;// when they should have had 0.0 FTE. We foudn all of the check dates were on the same day and so this allows&#13;&#10;// us to remove the FTE from those lines while retaining the associated pay.&#13;&#10;IF [LOCATION_1] = &apos;09&apos; AND [CHECK_DATE] = DATE(&apos;12/1/2015&apos;) THEN 0&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [Calculation_1016687669560307714] = &apos;Base FTE&apos; THEN [TIME_DISTRIB_ACTUAL]&#13;&#10;END' />
            <calculation column='[Calculation_869757736329613312]' formula='IF [PERS_PGM] = &apos;ACA&apos; THEN &apos;Academic Personnel&apos;&#13;&#10;ELSEIF ([Calculation_946318925060980737] = &apos;2&apos; OR [Calculation_946318925060980737] = &apos;7&apos;) THEN &apos;Career Staff&apos;&#13;&#10;ELSE &apos;Non-Career Staff&apos;&#13;&#10;&#13;&#10;END' />
            <calculation column='[Calculation_946318925060562944]' formula='// This categorizes employees into a more ganular version of personnel program. Particularly, it breaks&#13;&#10;// managers out from senior professionals in the MSP personnel program. It also breaks students out from the&#13;&#10;// large PSS personnel program. &#13;&#10;// For several years some employees were miscategorized with the CTO of M05, which is used for those in the&#13;&#10;// SMG personnel program when they should have been in the &apos;Managers&apos; CTO of M10, line 5 below fixes this.&#13;&#10;&#13;&#10;IF [PERS_PGM] = &apos;ACA&apos; THEN &apos;Academics&apos;&#13;&#10;ELSEIF [Calculation_946318925060980737] = &apos;4&apos; THEN &apos;Student Staff&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;SMG&apos; THEN &apos;SMG&apos;&#13;&#10;ELSEIF [CLASS_TTL_OUTL_CODE_APPT] = &apos;M10&apos; THEN &apos;MSP - Managers&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;MSP&apos; AND [CLASS_TTL_OUTL_CODE_APPT] = &apos;M05&apos; THEN &apos;MSP - Managers&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;MSP&apos; and [CLASS_TTL_OUTL_CODE_APPT] != &apos;M10&apos; THEN &apos;MSP - Senior Professionals&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;PSS&apos; and [Calculation_946318925060980737] != &apos;4&apos; THEN &apos;PSS - Non Students&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;UNK&apos; THEN &apos;PSS - Non Students&apos;&#13;&#10;END' />
            <calculation column='[Calculation_946318925060980737]' formula='// This code is used if the data has been extracted&#13;&#10;IF [APPT_TYPE_CODE] = &apos; &apos; THEN [APPT_TYPE_CODE_PRI]&#13;&#10;ELSE [APPT_TYPE_CODE]&#13;&#10;END&#13;&#10;&#13;&#10;//    This code is used if the connection to the server is live&#13;&#10;//    IF ISNULL([appt_type_code]) THEN [appt_type_code_pri]&#13;&#10;//    Else [appt_type_code]&#13;&#10;//    END' />
            <calculation column='[Funding Groups (More Granular) (copy)]' formula='// This categorizes funds into core and non-core&#13;&#10;&#13;&#10;IF [FUND] = &apos;69085&apos; THEN &apos;Systemwide Assessment&apos;&#13;&#10;&#13;&#10;ELSEIF    ([FUND_GROUP_CODE] = &apos;401   &apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;402   &apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;40411 &apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;40311 &apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;40312 &apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;403141&apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;403142&apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;403143&apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;403144&apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;403145&apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;403146&apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;403147&apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;403148&apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;403149&apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;40315 &apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;403151&apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;403152&apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;403153&apos;&#13;&#10;    OR [FUND_GROUP_CODE] = &apos;4032  &apos;) THEN &apos;Core Funds&apos;&#13;&#10;ELSE &apos;Non-Core Funds&apos;&#13;&#10;END' />
            <calculation column='[Job Family - original (copy)]' formula='// This categorizes employees into different job families which were put together by Charles Masten for our&#13;&#10;// &apos;9-pager&apos; report.&#13;&#10;&#13;&#10;IF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and (      [CLASS_TTL_OUTL_CODE_APPT] = &apos;A10&apos; &#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A15&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A20&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A25&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A30&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A35&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;C10&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;C15&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;C20&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;C30&apos;&#13;&#10;) THEN &quot;Student Services (including Health, Housing, and Dining)&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;       and(    [CLASS_TTL_OUTL_CODE_APPT] = &apos;H10&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H15&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H20&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H25&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H30&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H35&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H40&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H45&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H50&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H55&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H60&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H65&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H70&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H75&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H80&apos;&#13;&#10;) THEN &quot;UC Health&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and [CLASS_TTL_OUTL_CODE_APPT] = &apos;F20&apos; &#13;&#10;    THEN &quot;Administrative Analysis&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and &#13;&#10;        ([CLASS_TTL_OUTL_CODE_APPT] = &apos;B15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;B20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;B40&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;B30&apos;)&#13;&#10;    THEN &quot;Clerical &amp; Allied Services&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and [CLASS_TTL_OUTL_CODE_APPT] = &apos;F15&apos;&#13;&#10;    THEN &quot;Computer Programming and Analysis&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and ([CLASS_TTL_OUTL_CODE_APPT] = &apos;E10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;E15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;E20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G23&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G25&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G33&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G35&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G40&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G45&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G55&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G65&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G75&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G80&apos;)&#13;&#10;    THEN &quot;Arch./Engineering/Maint &amp; Plant Operations&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and ([CLASS_TTL_OUTL_CODE_APPT] = &apos;D10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;D15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;D25&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F30&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F35&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F40&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F45&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;I10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;I15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;I20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;I25&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;J10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;J15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;M20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;Z10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;Z20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;Z25&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;   &apos;)&#13;&#10;    THEN &quot;All Others (Laboratory, Comm. &amp; Fiscal Serv)&quot;&#13;&#10;ELSE &apos;Uncategorized&apos;&#13;&#10;END' />
            <calculation column='[Number of Records]' formula='1' />
            <calculation column='[Personnel Program Split (group)]' formula='CASE [Calculation_946318925060562944]&#10;  WHEN &quot;MSP - Managers&quot; THEN &quot;MSP - Managers&quot;&#10;  WHEN &quot;MSP - Senior Professionals&quot; THEN &quot;MSP - Managers&quot;&#10;  WHEN &quot;PSS - Non Students&quot; THEN &quot;MSP - Managers&quot;&#10;  WHEN &quot;SMG&quot; THEN &quot;MSP - Managers&quot;&#10;  WHEN &quot;Student Staff&quot; THEN &quot;MSP - Managers&quot;&#10;  ELSE [Calculation_946318925060562944]&#10;END' />
            <calculation column='[appt type use (group)]' formula='CASE [Calculation_946318925060980737]&#10;  WHEN &quot; &quot; THEN &quot; &quot;&#10;  WHEN &quot;1&quot; THEN &quot; &quot;&#10;  WHEN &quot;3&quot; THEN &quot; &quot;&#10;  WHEN &quot;4&quot; THEN &quot; &quot;&#10;  WHEN &quot;5&quot; THEN &quot; &quot;&#10;  WHEN &quot;6&quot; THEN &quot; &quot;&#10;  WHEN &quot;8&quot; THEN &quot; &quot;&#10;  WHEN &quot;2&quot; THEN &quot;2&quot;&#10;  WHEN &quot;7&quot; THEN &quot;2&quot;&#10;  ELSE [Calculation_946318925060980737]&#10;END' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='3547554' timestamp-start='2016-10-04 22:13:25.286' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>ACTIVE_THIS_MONTH_EMPL</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ACTIVE_THIS_MONTH_EMPL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ACTIVE_THIS_MONTH_EMPL</remote-alias>
              <ordinal>0</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;N&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Y&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>APPT_TYPE_CODE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[APPT_TYPE_CODE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>APPT_TYPE_CODE</remote-alias>
              <ordinal>1</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <scale>1</scale>
              <width>1</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot; &quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;8&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>APPT_TYPE_CODE_PRI</remote-name>
              <remote-type>129</remote-type>
              <local-name>[APPT_TYPE_CODE_PRI]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>APPT_TYPE_CODE_PRI</remote-alias>
              <ordinal>2</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <scale>1</scale>
              <width>1</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot; &quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;8&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CAMPUS_NAME_ABR</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CAMPUS_NAME_ABR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CAMPUS_NAME_ABR</remote-alias>
              <ordinal>3</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <scale>1</scale>
              <width>2</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;BK&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;SF&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CHECK_DATE</remote-name>
              <remote-type>133</remote-type>
              <local-name>[CHECK_DATE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CHECK_DATE</remote-alias>
              <ordinal>4</ordinal>
              <family>Custom SQL Query</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>149</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#1915-11-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2015-12-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>2009022</statistic>
                <statistic aggregation='Median' datatype='date'>#2014-04-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CLASS_TTL_OUTL_CODE_APPT1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CLASS_TTL_OUTL_CODE_APPT1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CLASS_TTL_OUTL_CODE_APPT1</remote-alias>
              <ordinal>5</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>24</approx-count>
              <scale>1</scale>
              <width>1</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot; &quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Z&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CLASS_TTL_OUTL_CODE_APPT</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CLASS_TTL_OUTL_CODE_APPT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CLASS_TTL_OUTL_CODE_APPT</remote-alias>
              <ordinal>6</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>128</approx-count>
              <scale>1</scale>
              <width>3</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;   &quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Z25&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>12</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>19</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CLASS_TTL_OUTL_NAME_APPT</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CLASS_TTL_OUTL_NAME_APPT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CLASS_TTL_OUTL_NAME_APPT</remote-alias>
              <ordinal>7</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>128</approx-count>
              <scale>1</scale>
              <width>30</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WORD PROCESSING&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>120</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>20</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CLASS_TTL_OUTL_NAME_PRI</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CLASS_TTL_OUTL_NAME_PRI]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CLASS_TTL_OUTL_NAME_PRI</remote-alias>
              <ordinal>8</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>126</approx-count>
              <scale>1</scale>
              <width>30</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WORD PROCESSING&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>120</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>18</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CTO_FIX</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CTO_FIX]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CTO_FIX</remote-alias>
              <ordinal>9</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>128</approx-count>
              <scale>1</scale>
              <width>3</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;   &quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Z25&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>12</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>21</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_752382666467852288</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Calculation_752382666467852288]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_752382666467852288</remote-alias>
              <ordinal>10</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14058</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-13.382999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>5.5701000000000001</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>34</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DOS_CODE_CPS</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DOS_CODE_CPS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DOS_CODE_CPS</remote-alias>
              <ordinal>11</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>2</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AM&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;HY&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>EFF_DATE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[EFF_DATE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>EFF_DATE</remote-alias>
              <ordinal>12</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <scale>1</scale>
              <width>7</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;OCT2007&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;OCT2015&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;OCT2012&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>28</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>EMPLOYEE_NAME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[EMPLOYEE_NAME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>EMPLOYEE_NAME</remote-alias>
              <ordinal>13</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>540808</approx-count>
              <scale>1</scale>
              <width>50</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZYZIK,EVE C&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>200</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>33</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>EMPLOYEE_NUMBER</remote-name>
              <remote-type>129</remote-type>
              <local-name>[EMPLOYEE_NUMBER]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>EMPLOYEE_NUMBER</remote-alias>
              <ordinal>14</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>523000</approx-count>
              <scale>1</scale>
              <width>9</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;000000051&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;999996572&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>36</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>32</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FUNCTION_CODE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[FUNCTION_CODE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FUNCTION_CODE</remote-alias>
              <ordinal>15</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15</approx-count>
              <scale>1</scale>
              <width>2</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;  &quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;80&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FUNCTION_NAME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[FUNCTION_NAME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FUNCTION_NAME</remote-alias>
              <ordinal>16</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15</approx-count>
              <scale>1</scale>
              <width>30</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ACADEMIC SUPPORT&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;TEACHING HOSPITALS&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>120</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FUND</remote-name>
              <remote-type>129</remote-type>
              <local-name>[FUND]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FUND</remote-alias>
              <ordinal>17</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>52557</approx-count>
              <scale>1</scale>
              <width>5</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;00000&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;B6654&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>20</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>31</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FUND_GROUP_CODE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[FUND_GROUP_CODE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FUND_GROUP_CODE</remote-alias>
              <ordinal>18</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>65</approx-count>
              <scale>1</scale>
              <width>6</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;999999&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>24</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GROSS_EARNINGS_PAY_PER</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GROSS_EARNINGS_PAY_PER]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GROSS_EARNINGS_PAY_PER</remote-alias>
              <ordinal>19</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>543307</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>7657281914.4520864</statistic>
                <statistic aggregation='Avg' datatype='real'>2158.4680358500777</statistic>
                <statistic aggregation='Min' datatype='real'>-54627.830000000002</statistic>
                <statistic aggregation='Max' datatype='real'>137220.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>2771.8158625316114</statistic>
                <statistic aggregation='StdevP' datatype='real'>2771.8154718658093</statistic>
                <statistic aggregation='Var' datatype='real'>7682963.1757818619</statistic>
                <statistic aggregation='VarP' datatype='real'>7682961.0100746797</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>43783717316972.188</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>36</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LOCATION_1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[LOCATION_1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LOCATION_1</remote-alias>
              <ordinal>20</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <scale>1</scale>
              <width>2</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;01&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;10&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LOCATION_2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[LOCATION_2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LOCATION_2</remote-alias>
              <ordinal>21</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;2&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LOCATION_3</remote-name>
              <remote-type>129</remote-type>
              <local-name>[LOCATION_3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LOCATION_3</remote-alias>
              <ordinal>22</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <scale>1</scale>
              <width>1</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;9&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>23</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ORG_1_CODE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ORG_1_CODE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ORG_1_CODE</remote-alias>
              <ordinal>24</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>296</approx-count>
              <scale>1</scale>
              <width>7</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;9MEDC&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>28</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>22</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ORG_1_TITLE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ORG_1_TITLE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ORG_1_TITLE</remote-alias>
              <ordinal>25</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>321</approx-count>
              <scale>1</scale>
              <width>30</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Water Resources&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>120</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>23</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ORG_2_CODE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ORG_2_CODE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ORG_2_CODE</remote-alias>
              <ordinal>26</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1697</approx-count>
              <scale>1</scale>
              <width>7</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;99701&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>28</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>24</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ORG_2_TITLE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ORG_2_TITLE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ORG_2_TITLE</remote-alias>
              <ordinal>27</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1745</approx-count>
              <scale>1</scale>
              <width>30</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;YOUTH, FAMILIES &amp; COMMUNITIES&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>120</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>25</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ORG_3_CODE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ORG_3_CODE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ORG_3_CODE</remote-alias>
              <ordinal>28</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7035</approx-count>
              <scale>1</scale>
              <width>7</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;99042&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>28</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>29</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ORG_3_TITLE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ORG_3_TITLE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ORG_3_TITLE</remote-alias>
              <ordinal>29</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7336</approx-count>
              <scale>1</scale>
              <width>30</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;YOUNG WOMENS PROGRAM MZ&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>120</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>30</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PERS_PGM</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PERS_PGM]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PERS_PGM</remote-alias>
              <ordinal>30</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>3</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ACA&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;UNK&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>12</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SAU_CODE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SAU_CODE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SAU_CODE</remote-alias>
              <ordinal>31</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <scale>1</scale>
              <width>1</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;9&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TIME_DISTRIB_ACTUAL</remote-name>
              <remote-type>5</remote-type>
              <local-name>[TIME_DISTRIB_ACTUAL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TIME_DISTRIB_ACTUAL</remote-alias>
              <ordinal>32</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14126</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-13.382999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>5.5701000000000001</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>35</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TITLE_CODE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TITLE_CODE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TITLE_CODE</remote-alias>
              <ordinal>33</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3654</approx-count>
              <scale>1</scale>
              <width>6</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;00  22&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;009999&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>24</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>27</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TITLE_CODE_PRI_APPT</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TITLE_CODE_PRI_APPT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TITLE_CODE_PRI_APPT</remote-alias>
              <ordinal>34</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3597</approx-count>
              <scale>1</scale>
              <width>6</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;      &quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;009999&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>24</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>26</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TITLE_NAME_PRI_APPT</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TITLE_NAME_PRI_APPT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TITLE_NAME_PRI_APPT</remote-alias>
              <ordinal>35</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6063</approx-count>
              <scale>1</scale>
              <width>30</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZONE LD&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>120</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>28</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>UAS_DISCIPLINE_CODE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[UAS_DISCIPLINE_CODE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>UAS_DISCIPLINE_CODE</remote-alias>
              <ordinal>36</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>34</approx-count>
              <scale>1</scale>
              <width>3</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;   &quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;880&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>12</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>UAS_DISCIPLINE_NAME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[UAS_DISCIPLINE_NAME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>UAS_DISCIPLINE_NAME</remote-alias>
              <ordinal>37</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>34</approx-count>
              <scale>1</scale>
              <width>30</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;VETERINARY MEDICINE&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>120</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1016687669559242752</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_1016687669559242752]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1016687669559242752</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>9</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ANR&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;UCOP&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>36</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1016687669560307714</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_1016687669560307714]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1016687669560307714</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>9</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Base FTE&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Other FTE&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Base FTE&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>36</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1172906285524258816</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_1172906285524258816]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1172906285524258816</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>14</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;General Campus&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;UC Health&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>56</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1172906285534130177</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_1172906285534130177]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1172906285534130177</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>32</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Health Sciences&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Med Center&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1800483</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>128</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1198239034499338240</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_1198239034499338240]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1198239034499338240</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>56</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Administrative Analysis&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Uncategorized&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>224</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_145804093765197824</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_145804093765197824]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_145804093765197824</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <scale>1</scale>
              <width>3</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ANR&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;SF&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>12</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_145804093768806401</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_145804093768806401]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_145804093768806401</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>20</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;General Funds (Core)&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Other Core Funds&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>80</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_869757736329613312</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_869757736329613312]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_869757736329613312</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>18</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Academic Personnel&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Non-Career Staff&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>72</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_946318925060562944</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_946318925060562944]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_946318925060562944</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <scale>1</scale>
              <width>32</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Academics&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Student Staff&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>128</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_946318925060980737</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_946318925060980737]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_946318925060980737</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <scale>1</scale>
              <width>1</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot; &quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;8&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Funding Groups (More Granular) (copy)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Funding Groups (More Granular) (copy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Funding Groups (More Granular) (copy)</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>21</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Core Funds&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Systemwide Assessment&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>84</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Job Family - original (copy)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Job Family - original (copy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Job Family - original (copy)</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <scale>1</scale>
              <width>56</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Administrative Analysis&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Uncategorized&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>224</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Personnel Program Split (group)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Personnel Program Split (group)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Personnel Program Split (group)</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <scale>1</scale>
              <width>32</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Academics&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Student Staff&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>128</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>appt type use (group)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[appt type use (group)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>appt type use (group)</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot; &quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;2&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3547554</statistic>
                <statistic aggregation='Median' datatype='string'>&quot; &quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.853606' measure-ordering='alphabetic' measure-percentage='0.109795' parameter-percentage='0.0365985' show-aliased-fields='true' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[mn:CHECK_DATE:ok]' type='palette'>
            <map to='#7f7f7f'>
              <bucket>1</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>2</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>4</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>5</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>6</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>7</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>8</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>9</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>10</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>11</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>%all%</bucket>
            </map>
            <map to='#d62728'>
              <bucket>12</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column alias='(All)' caption='Service Focus' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
          <calculation class='tableau' formula='&quot;All&quot;' />
          <aliases>
            <alias key='&quot;All&quot;' value='(All)' />
            <alias key='&quot;Health Sciences&quot;' value='--- Health Sciences' />
            <alias key='&quot;Med Center&quot;' value='--- Med Center' />
          </aliases>
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='CTO Pri'>
      <layout-options>
        <title>
          <formatted-text>
            <run>CTO Occupation Group</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (PERSONNEL)' name='db2.1phqijc054rhev1266iad0956og9' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='(All)' caption='Service Focus' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='(All)' />
                <alias key='&quot;Health Sciences&quot;' value='--- Health Sciences' />
                <alias key='&quot;Med Center&quot;' value='--- Med Center' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='db2.1phqijc054rhev1266iad0956og9'>
            <column datatype='string' name='[APPT_TYPE_CODE]' role='dimension' type='nominal' />
            <column datatype='string' name='[APPT_TYPE_CODE_PRI]' role='dimension' type='nominal' />
            <column datatype='string' name='[CAMPUS_NAME_ABR]' role='dimension' type='nominal' />
            <column datatype='date' name='[CHECK_DATE]' role='dimension' type='ordinal' />
            <column datatype='string' name='[CLASS_TTL_OUTL_CODE_APPT1]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot; &quot;' value='Non Classified' />
                <alias key='&quot;0&quot;' value='0 - Faculty  - Ladder Ranks' />
                <alias key='&quot;1&quot;' value='1 - Faculty - Acting Ranks' />
                <alias key='&quot;2&quot;' value='2 - Lecturers' />
                <alias key='&quot;3&quot;' value='3 - Additional Faculty' />
                <alias key='&quot;4&quot;' value='4 - Student Assistants' />
                <alias key='&quot;5&quot;' value='5 - Researchers' />
                <alias key='&quot;6&quot;' value='6 - Librarians' />
                <alias key='&quot;7&quot;' value='7 - Cooperative Extension' />
                <alias key='&quot;8&quot;' value='8 - University Extension' />
                <alias key='&quot;9&quot;' value='9 - Other Academic Personnel' />
                <alias key='&quot;A&quot;' value='A - Student Services' />
                <alias key='&quot;B&quot;' value='B - Clerical and Allied Services' />
                <alias key='&quot;C&quot;' value='C - Food and Linen Services' />
                <alias key='&quot;D&quot;' value='D - Communication, Arts and Graphics' />
                <alias key='&quot;E&quot;' value='E - Architechture, Engineering and Allied Services' />
                <alias key='&quot;F&quot;' value='F - Fiscal Management and Staff Services' />
                <alias key='&quot;G&quot;' value='G - Maintenance, Fabrication and Operations' />
                <alias key='&quot;H&quot;' value='H - Health Care and Allied Services' />
                <alias key='&quot;I&quot;' value='I - Sciences, Laboratory and Allied Services' />
                <alias key='&quot;J&quot;' value='J - Protective Services' />
                <alias key='&quot;M&quot;' value='M - Management' />
                <alias key='&quot;S&quot;' value='S - Academic Administrative Officers' />
                <alias key='&quot;Z&quot;' value='Z - Other' />
              </aliases>
            </column>
            <column datatype='string' name='[CLASS_TTL_OUTL_CODE_APPT]' role='dimension' type='nominal' />
            <column datatype='string' name='[CTO_FIX]' role='dimension' type='nominal' />
            <column caption='OP ANR Flag' datatype='string' name='[Calculation_1016687669559242752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Pull out OP and ANR employees&#13;&#10;&#13;&#10;IF [LOCATION_2] = &apos;2&apos; AND [SAU_CODE] != &apos;4&apos; THEN &apos;UCOP&apos;&#13;&#10;ELSEIF [LOCATION_2] = &apos;2&apos; and [SAU_CODE] = &apos;4&apos; THEN &apos;ANR&apos;&#13;&#10;ELSE &apos;Other loc&apos;&#13;&#10;END' />
            </column>
            <column caption='Base FTE flag' datatype='string' name='[Calculation_1016687669560307714]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Filters out non-base FTE using description of service (DOS) codes.&#13;&#10;&#13;&#10;IF [DOS_CODE_CPS] = &apos;AV&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;AW&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;AX&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;AM&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;HR&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;HD&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;HY&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSE &apos;Other FTE&apos;&#13;&#10;END' />
            </column>
            <column caption='General Campus/Health Sci' datatype='string' name='[Calculation_1172906285524258816]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// There are sometimes issues with how the campuses encode their data for location_3, which is what we use&#13;&#10;// to track those in the UC health umberella. To remedy this, one can look at the org_1_code and org_1_title &#13;&#10;//fields to see if there were errors. In the cases below, we could tell location_3 was not correct by looking &#13;&#10;//at the org_1 titles. If an org title indicated a medical school or some other health science area and it was &#13;&#10;// categorized into general campus, we capture that and make sure it correctly categorized into health&#13;&#10;&#13;&#10;// Fixes for Irvine&#13;&#10;&#13;&#10;IF  [LOCATION_3] = &apos;2&apos; THEN &apos;UC Health&apos;&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;09&apos;) &#13;&#10;    AND ((RTRIM([ORG_1_CODE]) = &apos;99030&apos;) &#13;&#10;    OR (RTRIM([ORG_1_CODE]) = &apos;9MEDC&apos;) &#13;&#10;    OR (RTRIM([ORG_1_CODE]) = &apos;92000&apos;))&#13;&#10;THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;// Fixes for Riverside&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;05&apos; AND RTRIM([ORG_1_CODE]) = &apos;5ORG40&apos;) THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;// Fixes for Los Angeles&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;04&apos;) &#13;&#10;    AND ((RTRIM([ORG_1_CODE]) = &apos;44000&apos;) &#13;&#10;    OR (RTRIM([ORG_1_CODE]) = &apos;42200&apos;)&#13;&#10;    OR (RTRIM([ORG_1_CODE]) = &apos;43200&apos;))&#13;&#10;THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;// Fixes for San Diego&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;06&apos;) AND &#13;&#10;    ((RTRIM([ORG_1_CODE]) = &apos;6000003&apos;) &#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;6     3&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;6000005&apos;) &#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;6     5&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;60003&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;60008&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;6000008&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;60005&apos;)&#13;&#10;)&#13;&#10;THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;ELSE &apos;General Campus&apos;&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Health Breakout' datatype='string' name='[Calculation_1172906285534130177]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Breaks out medical centers and health sciences from overal UC health&#13;&#10;&#13;&#10;IF [Calculation_1172906285524258816] = &apos;UC Health&apos; AND [FUNCTION_CODE] = &apos;42&apos; THEN &apos;Med Center&apos;&#13;&#10;ELSEIF [Calculation_1172906285524258816] = &apos;UC Health&apos; AND [FUNCTION_CODE] != &apos;42&apos; THEN &apos;Health Sciences&apos;&#13;&#10;END' />
            </column>
            <column caption='Service Focus Filter' datatype='string' name='[Calculation_1172906285535813634]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Used to facilitate the filtering of the health sciences breakout.&#13;&#10;&#13;&#10;IF &#13;&#10;    [Parameters].[Parameter 2] = [Calculation_1172906285534130177] &#13;&#10;THEN &#13;&#10;    &quot;Show&quot;&#13;&#10;ELSEIF &#13;&#10;    [Parameters].[Parameter 2] = [Calculation_1172906285524258816] &#13;&#10;THEN &#13;&#10;    &quot;Show&quot;&#13;&#10;ELSEIF &#13;&#10;    [Parameters].[Parameter 2] = &apos;All&apos; THEN &apos;Show&apos;&#13;&#10;END' />
            </column>
            <column caption='CTO 1 Fix' datatype='string' name='[Calculation_1338132104735383555]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [CTO_FIX] = &apos;M10&apos; THEN &apos;M&apos;&#13;&#10;ELSE [CLASS_TTL_OUTL_CODE_APPT1]&#13;&#10;END' />
            </column>
            <column caption='Location - Full List' datatype='string' name='[Calculation_145804093765197824]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Location list that includes OP and ANR&#13;&#10;&#13;&#10;IF [Calculation_1016687669559242752] = &apos;UCOP&apos; THEN &apos;OP&apos;&#13;&#10;ELSEIF [Calculation_1016687669559242752] = &apos;ANR&apos; THEN &apos;ANR&apos;&#13;&#10;ELSE [CAMPUS_NAME_ABR]&#13;&#10;END' />
              <aliases>
                <alias key='&quot;ANR&quot;' value='Ag &amp; Nat Resources (ANR)' />
                <alias key='&quot;BK&quot;' value='Berkeley' />
                <alias key='&quot;DV&quot;' value='Davis' />
                <alias key='&quot;IR&quot;' value='Irvine' />
                <alias key='&quot;LA&quot;' value='Los Angeles' />
                <alias key='&quot;MC&quot;' value='Merced' />
                <alias key='&quot;OP&quot;' value='Office of the President &amp; SWP*' />
                <alias key='&quot;RV&quot;' value='Riverside' />
                <alias key='&quot;SB&quot;' value='Santa Barbara' />
                <alias key='&quot;SC&quot;' value='Santa Cruz' />
                <alias key='&quot;SD&quot;' value='San Diego' />
                <alias key='&quot;SF&quot;' value='San Francisco' />
              </aliases>
            </column>
            <column caption='Base FTE' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_752382666467852288]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Filters for only &apos;base FTE&apos;&#13;&#10;&#13;&#10;&#13;&#10;//Applies fix for those at Irvine who received retro-active pay adjustments that were encoded with 1.0 FTE&#13;&#10;// when they should have had 0.0 FTE. We foudn all of the check dates were on the same day and so this allows&#13;&#10;// us to remove the FTE from those lines while retaining the associated pay.&#13;&#10;IF [LOCATION_1] = &apos;09&apos; AND [CHECK_DATE] = DATE(&apos;12/1/2015&apos;) THEN 0&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [Calculation_1016687669560307714] = &apos;Base FTE&apos; THEN [TIME_DISTRIB_ACTUAL]&#13;&#10;END' />
            </column>
            <column caption='Career Status' datatype='string' name='[Calculation_869757736329613312]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [PERS_PGM] = &apos;ACA&apos; THEN &apos;Academic Personnel&apos;&#13;&#10;ELSEIF ([Calculation_946318925060980737] = &apos;2&apos; OR [Calculation_946318925060980737] = &apos;7&apos;) THEN &apos;Career Staff&apos;&#13;&#10;ELSE &apos;Non-Career Staff&apos;&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Personnel Program Split' datatype='string' name='[Calculation_946318925060562944]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// This categorizes employees into a more ganular version of personnel program. Particularly, it breaks&#13;&#10;// managers out from senior professionals in the MSP personnel program. It also breaks students out from the&#13;&#10;// large PSS personnel program. &#13;&#10;// For several years some employees were miscategorized with the CTO of M05, which is used for those in the&#13;&#10;// SMG personnel program when they should have been in the &apos;Managers&apos; CTO of M10, line 5 below fixes this.&#13;&#10;&#13;&#10;IF [PERS_PGM] = &apos;ACA&apos; THEN &apos;Academics&apos;&#13;&#10;ELSEIF [Calculation_946318925060980737] = &apos;4&apos; THEN &apos;Student Staff&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;SMG&apos; THEN &apos;SMG&apos;&#13;&#10;ELSEIF [CTO_FIX] = &apos;M10&apos; THEN &apos;MSP - Managers&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;MSP&apos; AND [CTO_FIX] = &apos;M05&apos; THEN &apos;MSP - Managers&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;MSP&apos; and [CTO_FIX] != &apos;M10&apos; THEN &apos;MSP - Senior Professionals&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;PSS&apos; and [Calculation_946318925060980737] != &apos;4&apos; THEN &apos;PSS - Non Students&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;UNK&apos; THEN &apos;PSS - Non Students&apos;&#13;&#10;END' />
              <aliases>
                <alias key='&quot;MSP - Managers&quot;' value='Managers (M)' />
                <alias key='&quot;MSP - Senior Professionals&quot;' value='Senior Professionals (SP)' />
                <alias key='&quot;PSS - Non Students&quot;' value='Professional &amp; Support Staff (PSS)  - Non Students' />
                <alias key='&quot;SMG&quot;' value='Senior Management Group (SMG)' />
              </aliases>
            </column>
            <column caption='appt type use' datatype='string' name='[Calculation_946318925060980737]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// This code is used if the data has been extracted&#13;&#10;IF [APPT_TYPE_CODE] = &apos; &apos; THEN [APPT_TYPE_CODE_PRI]&#13;&#10;ELSE [APPT_TYPE_CODE]&#13;&#10;END&#13;&#10;&#13;&#10;//    This code is used if the connection to the server is live&#13;&#10;//    IF ISNULL([appt_type_code]) THEN [appt_type_code_pri]&#13;&#10;//    Else [appt_type_code]&#13;&#10;//    END' />
              <aliases>
                <alias key='&quot;1&quot;' value='Contract' />
                <alias key='&quot;2&quot;' value='Career' />
                <alias key='&quot;3&quot;' value='Limited' />
                <alias key='&quot;4&quot;' value='Casual/Restricted (student)' />
                <alias key='&quot;5&quot;' value='Academic' />
                <alias key='&quot;6&quot;' value='Per diem' />
                <alias key='&quot;7&quot;' value='Partial year career' />
                <alias key='&quot;8&quot;' value='Floater' />
              </aliases>
            </column>
            <column datatype='string' name='[DOS_CODE_CPS]' role='dimension' type='nominal' />
            <column datatype='string' name='[EFF_DATE]' role='dimension' type='nominal' />
            <column datatype='string' name='[FUNCTION_CODE]' role='dimension' type='nominal' />
            <column datatype='string' name='[FUND]' role='dimension' type='nominal' />
            <column datatype='string' name='[FUND_GROUP_CODE]' role='dimension' type='nominal' />
            <column caption='Funding Source' datatype='string' name='[Funding Groups (More Granular) (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// This categorizes funds into core and non-core&#13;&#10;&#13;&#10;IF [FUND] = &apos;69085&apos; THEN &apos;Systemwide Assessment&apos;&#13;&#10;&#13;&#10;ELSEIF    (RTRIM([FUND_GROUP_CODE]) = &apos;401&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;402&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40411&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40311&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40312&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403141&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403142&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403143&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403144&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403145&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403146&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403147&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403148&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403149&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40315&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403151&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403152&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403153&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;4032&apos;) THEN &apos;Core Funds&apos;&#13;&#10;ELSE &apos;Non-Core Funds&apos;&#13;&#10;END' />
            </column>
            <column caption='Job Family' datatype='string' name='[Job Family - original (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// This categorizes employees into different job families which were put together by Charles Masten for our&#13;&#10;// &apos;9-pager&apos; report.&#13;&#10;&#13;&#10;IF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and (      [CLASS_TTL_OUTL_CODE_APPT] = &apos;A10&apos; &#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A15&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A20&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A25&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A30&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A35&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;C10&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;C15&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;C20&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;C30&apos;&#13;&#10;) THEN &quot;Student Services (including Health, Housing, and Dining)&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;       and(    [CLASS_TTL_OUTL_CODE_APPT] = &apos;H10&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H15&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H20&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H25&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H30&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H35&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H40&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H45&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H50&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H55&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H60&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H65&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H70&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H75&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H80&apos;&#13;&#10;) THEN &quot;UC Health&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and [CLASS_TTL_OUTL_CODE_APPT] = &apos;F20&apos; &#13;&#10;    THEN &quot;Administrative Analysis&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and &#13;&#10;        ([CLASS_TTL_OUTL_CODE_APPT] = &apos;B15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;B20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;B40&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;B30&apos;)&#13;&#10;    THEN &quot;Clerical &amp; Allied Services&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and [CLASS_TTL_OUTL_CODE_APPT] = &apos;F15&apos;&#13;&#10;    THEN &quot;Computer Programming and Analysis&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and ([CLASS_TTL_OUTL_CODE_APPT] = &apos;E10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;E15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;E20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G23&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G25&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G33&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G35&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G40&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G45&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G55&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G65&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G75&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G80&apos;)&#13;&#10;    THEN &quot;Arch./Engineering/Maint &amp; Plant Operations&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and ([CLASS_TTL_OUTL_CODE_APPT] = &apos;D10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;D15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;D25&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F30&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F35&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F40&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F45&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;I10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;I15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;I20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;I25&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;J10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;J15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;M20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;Z10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;Z20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;Z25&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;   &apos;)&#13;&#10;    THEN &quot;All Others (Laboratory, Comm. &amp; Fiscal Serv)&quot;&#13;&#10;ELSE &apos;Uncategorized&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[LOCATION_1]' role='dimension' type='nominal' />
            <column datatype='string' name='[LOCATION_2]' role='dimension' type='nominal' />
            <column datatype='string' name='[LOCATION_3]' role='dimension' type='nominal' />
            <column datatype='string' name='[ORG_1_CODE]' role='dimension' type='nominal' />
            <column datatype='string' name='[PERS_PGM]' role='dimension' type='nominal' />
            <column datatype='string' name='[Personnel Program Split (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_946318925060562944]'>
                <bin value='&quot;MSP - Managers&quot;'>
                  <value>&quot;MSP - Managers&quot;</value>
                  <value>&quot;MSP - Senior Professionals&quot;</value>
                  <value>&quot;PSS - Non Students&quot;</value>
                  <value>&quot;SMG&quot;</value>
                  <value>&quot;Student Staff&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;Academics&quot;' value='Academic Personnel' />
                <alias key='&quot;MSP - Managers&quot;' value='Non-Academic Personnel' />
              </aliases>
            </column>
            <column datatype='string' name='[SAU_CODE]' role='dimension' type='nominal' />
            <column datatype='real' name='[TIME_DISTRIB_ACTUAL]' role='measure' type='quantitative' />
            <column-instance column='[CLASS_TTL_OUTL_CODE_APPT1]' derivation='None' name='[none:CLASS_TTL_OUTL_CODE_APPT1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1172906285535813634]' derivation='None' name='[none:Calculation_1172906285535813634:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1338132104735383555]' derivation='None' name='[none:Calculation_1338132104735383555:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_145804093765197824]' derivation='None' name='[none:Calculation_145804093765197824:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_869757736329613312]' derivation='None' name='[none:Calculation_869757736329613312:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_946318925060562944]' derivation='None' name='[none:Calculation_946318925060562944:nk]' pivot='key' type='nominal' />
            <column-instance column='[EFF_DATE]' derivation='None' name='[none:EFF_DATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[Funding Groups (More Granular) (copy)]' derivation='None' name='[none:Funding Groups (More Granular) (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Job Family - original (copy)]' derivation='None' name='[none:Job Family - original (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_752382666467852288]' derivation='Sum' name='[sum:Calculation_752382666467852288:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:CLASS_TTL_OUTL_CODE_APPT1:nk]'>
            <groupfilter function='level-members' level='[none:CLASS_TTL_OUTL_CODE_APPT1:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1172906285535813634:nk]'>
            <groupfilter function='member' level='[none:Calculation_1172906285535813634:nk]' member='&quot;Show&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]'>
            <groupfilter function='member' level='[none:Calculation_145804093765197824:nk]' member='&quot;BK&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_869757736329613312:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_869757736329613312:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;Academics&quot;</bucket>
              <bucket>&quot;SMG&quot;</bucket>
              <bucket>&quot;MSP - Managers&quot;</bucket>
              <bucket>&quot;MSP - Senior Professionals&quot;</bucket>
              <bucket>&quot;PSS - Non Students&quot;</bucket>
              <bucket>&quot;Student Staff&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:Funding Groups (More Granular) (copy):nk]'>
            <groupfilter function='level-members' level='[none:Funding Groups (More Granular) (copy):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:Job Family - original (copy):nk]'>
            <groupfilter function='level-members' level='[none:Job Family - original (copy):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]</column>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_869757736329613312:nk]</column>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:Funding Groups (More Granular) (copy):nk]</column>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1172906285535813634:nk]</column>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:Job Family - original (copy):nk]</column>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:CLASS_TTL_OUTL_CODE_APPT1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]' value='88' />
            <format attr='width' field='[db2.1phqijc054rhev1266iad0956og9].[Personnel Program Split (group)]' value='76' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[db2.1phqijc054rhev1266iad0956og9].[Personnel Program Split (group)]' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-size' value='10' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]' value='Location' />
            <format attr='title' field='[db2.1phqijc054rhev1266iad0956og9].[none:CLASS_TTL_OUTL_CODE_APPT1:nk]' value='CTO-OSC'>
              <formatted-text>
                <run>CTO-OSC</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[db2.1phqijc054rhev1266iad0956og9].[sum:Calculation_752382666467852288:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Personnel Program:&#9;</run>
                <run bold='true'>&lt;[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Date:&#9;</run>
                <run bold='true'>&lt;[db2.1phqijc054rhev1266iad0956og9].[none:EFF_DATE:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;FTE:&#9;</run>
                <run bold='true'>&lt;[db2.1phqijc054rhev1266iad0956og9].[sum:Calculation_752382666467852288:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([db2.1phqijc054rhev1266iad0956og9].[Personnel Program Split (group)] / ([db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk] / [db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1338132104735383555:nk]))</rows>
        <cols>[db2.1phqijc054rhev1266iad0956og9].[none:EFF_DATE:nk]</cols>
        <subtotals>
          <column>[db2.1phqijc054rhev1266iad0956og9].[Personnel Program Split (group)]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Double check'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='16'>Staff FTE Data Table</run>
            <run>&#10;October CPS Snapshot Data</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (PERSONNEL)' name='db2.1phqijc054rhev1266iad0956og9' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='(All)' caption='Service Focus' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='(All)' />
                <alias key='&quot;Health Sciences&quot;' value='--- Health Sciences' />
                <alias key='&quot;Med Center&quot;' value='--- Med Center' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='db2.1phqijc054rhev1266iad0956og9'>
            <column datatype='string' name='[APPT_TYPE_CODE]' role='dimension' type='nominal' />
            <column datatype='string' name='[APPT_TYPE_CODE_PRI]' role='dimension' type='nominal' />
            <column datatype='string' name='[CAMPUS_NAME_ABR]' role='dimension' type='nominal' />
            <column datatype='string' name='[CTO_FIX]' role='dimension' type='nominal' />
            <column caption='OP ANR Flag' datatype='string' name='[Calculation_1016687669559242752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Pull out OP and ANR employees&#13;&#10;&#13;&#10;IF [LOCATION_2] = &apos;2&apos; AND [SAU_CODE] != &apos;4&apos; THEN &apos;UCOP&apos;&#13;&#10;ELSEIF [LOCATION_2] = &apos;2&apos; and [SAU_CODE] = &apos;4&apos; THEN &apos;ANR&apos;&#13;&#10;ELSE &apos;Other loc&apos;&#13;&#10;END' />
            </column>
            <column caption='General Campus/Health Sci' datatype='string' name='[Calculation_1172906285524258816]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// There are sometimes issues with how the campuses encode their data for location_3, which is what we use&#13;&#10;// to track those in the UC health umberella. To remedy this, one can look at the org_1_code and org_1_title &#13;&#10;//fields to see if there were errors. In the cases below, we could tell location_3 was not correct by looking &#13;&#10;//at the org_1 titles. If an org title indicated a medical school or some other health science area and it was &#13;&#10;// categorized into general campus, we capture that and make sure it correctly categorized into health&#13;&#10;&#13;&#10;// Fixes for Irvine&#13;&#10;&#13;&#10;IF  [LOCATION_3] = &apos;2&apos; THEN &apos;UC Health&apos;&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;09&apos;) &#13;&#10;    AND ((RTRIM([ORG_1_CODE]) = &apos;99030&apos;) &#13;&#10;    OR (RTRIM([ORG_1_CODE]) = &apos;9MEDC&apos;) &#13;&#10;    OR (RTRIM([ORG_1_CODE]) = &apos;92000&apos;))&#13;&#10;THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;// Fixes for Riverside&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;05&apos; AND RTRIM([ORG_1_CODE]) = &apos;5ORG40&apos;) THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;// Fixes for Los Angeles&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;04&apos;) &#13;&#10;    AND ((RTRIM([ORG_1_CODE]) = &apos;44000&apos;) &#13;&#10;    OR (RTRIM([ORG_1_CODE]) = &apos;42200&apos;)&#13;&#10;    OR (RTRIM([ORG_1_CODE]) = &apos;43200&apos;))&#13;&#10;THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;// Fixes for San Diego&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;06&apos;) AND &#13;&#10;    ((RTRIM([ORG_1_CODE]) = &apos;6000003&apos;) &#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;6     3&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;6000005&apos;) &#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;6     5&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;60003&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;60008&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;6000008&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;60005&apos;)&#13;&#10;)&#13;&#10;THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;ELSE &apos;General Campus&apos;&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Health Breakout' datatype='string' name='[Calculation_1172906285534130177]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Breaks out medical centers and health sciences from overal UC health&#13;&#10;&#13;&#10;IF [Calculation_1172906285524258816] = &apos;UC Health&apos; AND [FUNCTION_CODE] = &apos;42&apos; THEN &apos;Med Center&apos;&#13;&#10;ELSEIF [Calculation_1172906285524258816] = &apos;UC Health&apos; AND [FUNCTION_CODE] != &apos;42&apos; THEN &apos;Health Sciences&apos;&#13;&#10;END' />
            </column>
            <column caption='Service Focus Filter' datatype='string' name='[Calculation_1172906285535813634]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Used to facilitate the filtering of the health sciences breakout.&#13;&#10;&#13;&#10;IF &#13;&#10;    [Parameters].[Parameter 2] = [Calculation_1172906285534130177] &#13;&#10;THEN &#13;&#10;    &quot;Show&quot;&#13;&#10;ELSEIF &#13;&#10;    [Parameters].[Parameter 2] = [Calculation_1172906285524258816] &#13;&#10;THEN &#13;&#10;    &quot;Show&quot;&#13;&#10;ELSEIF &#13;&#10;    [Parameters].[Parameter 2] = &apos;All&apos; THEN &apos;Show&apos;&#13;&#10;END' />
            </column>
            <column caption='Location - Full List' datatype='string' name='[Calculation_145804093765197824]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Location list that includes OP and ANR&#13;&#10;&#13;&#10;IF [Calculation_1016687669559242752] = &apos;UCOP&apos; THEN &apos;OP&apos;&#13;&#10;ELSEIF [Calculation_1016687669559242752] = &apos;ANR&apos; THEN &apos;ANR&apos;&#13;&#10;ELSE [CAMPUS_NAME_ABR]&#13;&#10;END' />
              <aliases>
                <alias key='&quot;ANR&quot;' value='Ag &amp; Nat Resources (ANR)' />
                <alias key='&quot;BK&quot;' value='Berkeley' />
                <alias key='&quot;DV&quot;' value='Davis' />
                <alias key='&quot;IR&quot;' value='Irvine' />
                <alias key='&quot;LA&quot;' value='Los Angeles' />
                <alias key='&quot;MC&quot;' value='Merced' />
                <alias key='&quot;OP&quot;' value='Office of the President &amp; SWP*' />
                <alias key='&quot;RV&quot;' value='Riverside' />
                <alias key='&quot;SB&quot;' value='Santa Barbara' />
                <alias key='&quot;SC&quot;' value='Santa Cruz' />
                <alias key='&quot;SD&quot;' value='San Diego' />
                <alias key='&quot;SF&quot;' value='San Francisco' />
              </aliases>
            </column>
            <column caption='Funding Source (More Granular)' datatype='string' name='[Calculation_145804093768806401]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// This categorizes funds into core and non-core in a more granular way&#13;&#10;&#13;&#10;IF (RTRIM([FUND_GROUP_CODE]) = &apos;401&apos;&#13;&#10;OR RTRIM([FUND_GROUP_CODE]) = &apos;402&apos;&#13;&#10;OR RTRIM([FUND_GROUP_CODE]) = &apos;40411&apos;) THEN &apos;General Funds (Core)&apos;&#13;&#10;ELSEIF (RTRIM([FUND_GROUP_CODE]) = &apos;40311&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40312&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403141&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403142&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403143&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403144&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403145&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403146&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403147&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403148&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403149&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40315&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403151&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403152&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403153&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;4032&apos;) THEN &apos;Other Core Funds&apos;&#13;&#10;ELSE &apos;Non-Core Funds&apos;&#13;&#10;END' />
            </column>
            <column caption='Personnel Program Split' datatype='string' name='[Calculation_946318925060562944]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// This categorizes employees into a more ganular version of personnel program. Particularly, it breaks&#13;&#10;// managers out from senior professionals in the MSP personnel program. It also breaks students out from the&#13;&#10;// large PSS personnel program. &#13;&#10;// For several years some employees were miscategorized with the CTO of M05, which is used for those in the&#13;&#10;// SMG personnel program when they should have been in the &apos;Managers&apos; CTO of M10, line 5 below fixes this.&#13;&#10;&#13;&#10;IF [PERS_PGM] = &apos;ACA&apos; THEN &apos;Academics&apos;&#13;&#10;ELSEIF [Calculation_946318925060980737] = &apos;4&apos; THEN &apos;Student Staff&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;SMG&apos; THEN &apos;SMG&apos;&#13;&#10;ELSEIF [CTO_FIX] = &apos;M10&apos; THEN &apos;MSP - Managers&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;MSP&apos; AND [CTO_FIX] = &apos;M05&apos; THEN &apos;MSP - Managers&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;MSP&apos; and [CTO_FIX] != &apos;M10&apos; THEN &apos;MSP - Senior Professionals&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;PSS&apos; and [Calculation_946318925060980737] != &apos;4&apos; THEN &apos;PSS - Non Students&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;UNK&apos; THEN &apos;PSS - Non Students&apos;&#13;&#10;END' />
              <aliases>
                <alias key='&quot;MSP - Managers&quot;' value='Managers (M)' />
                <alias key='&quot;MSP - Senior Professionals&quot;' value='Senior Professionals (SP)' />
                <alias key='&quot;PSS - Non Students&quot;' value='Professional &amp; Support Staff (PSS)  - Non Students' />
                <alias key='&quot;SMG&quot;' value='Senior Management Group (SMG)' />
              </aliases>
            </column>
            <column caption='appt type use' datatype='string' name='[Calculation_946318925060980737]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// This code is used if the data has been extracted&#13;&#10;IF [APPT_TYPE_CODE] = &apos; &apos; THEN [APPT_TYPE_CODE_PRI]&#13;&#10;ELSE [APPT_TYPE_CODE]&#13;&#10;END&#13;&#10;&#13;&#10;//    This code is used if the connection to the server is live&#13;&#10;//    IF ISNULL([appt_type_code]) THEN [appt_type_code_pri]&#13;&#10;//    Else [appt_type_code]&#13;&#10;//    END' />
              <aliases>
                <alias key='&quot;1&quot;' value='Contract' />
                <alias key='&quot;2&quot;' value='Career' />
                <alias key='&quot;3&quot;' value='Limited' />
                <alias key='&quot;4&quot;' value='Casual/Restricted (student)' />
                <alias key='&quot;5&quot;' value='Academic' />
                <alias key='&quot;6&quot;' value='Per diem' />
                <alias key='&quot;7&quot;' value='Partial year career' />
                <alias key='&quot;8&quot;' value='Floater' />
              </aliases>
            </column>
            <column datatype='string' name='[EFF_DATE]' role='dimension' type='nominal' />
            <column datatype='string' name='[FUNCTION_CODE]' role='dimension' type='nominal' />
            <column datatype='string' name='[FUND_GROUP_CODE]' role='dimension' type='nominal' />
            <column datatype='real' name='[GROSS_EARNINGS_PAY_PER]' role='measure' type='quantitative' />
            <column datatype='string' name='[LOCATION_1]' role='dimension' type='nominal' />
            <column datatype='string' name='[LOCATION_2]' role='dimension' type='nominal' />
            <column datatype='string' name='[LOCATION_3]' role='dimension' type='nominal' />
            <column datatype='string' name='[ORG_1_CODE]' role='dimension' type='nominal' />
            <column datatype='string' name='[PERS_PGM]' role='dimension' type='nominal' />
            <column datatype='string' name='[SAU_CODE]' role='dimension' type='nominal' />
            <column datatype='string' name='[appt type use (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_946318925060980737]'>
                <bin value='&quot; &quot;'>
                  <value>&quot; &quot;</value>
                  <value>&quot;1&quot;</value>
                  <value>&quot;3&quot;</value>
                  <value>&quot;4&quot;</value>
                  <value>&quot;5&quot;</value>
                  <value>&quot;6&quot;</value>
                  <value>&quot;8&quot;</value>
                </bin>
                <bin value='&quot;2&quot;'>
                  <value>&quot;2&quot;</value>
                  <value>&quot;7&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot; &quot;' value='Non-Career' />
                <alias key='&quot;2&quot;' value='Career' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1172906285535813634]' derivation='None' name='[none:Calculation_1172906285535813634:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_145804093765197824]' derivation='None' name='[none:Calculation_145804093765197824:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_145804093768806401]' derivation='None' name='[none:Calculation_145804093768806401:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_946318925060562944]' derivation='None' name='[none:Calculation_946318925060562944:nk]' pivot='key' type='nominal' />
            <column-instance column='[EFF_DATE]' derivation='None' name='[none:EFF_DATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[GROSS_EARNINGS_PAY_PER]' derivation='Sum' name='[sum:GROSS_EARNINGS_PAY_PER:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[appt type use (group)]'>
            <groupfilter function='level-members' level='[appt type use (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1172906285535813634:nk]'>
            <groupfilter function='member' level='[none:Calculation_1172906285535813634:nk]' member='&quot;Show&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_145804093765197824:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093768806401:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_145804093768806401:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;SMG&quot;</bucket>
              <bucket>&quot;MSP - Managers&quot;</bucket>
              <bucket>&quot;MSP - Senior Professionals&quot;</bucket>
              <bucket>&quot;PSS - Non Students&quot;</bucket>
              <bucket>&quot;Student Staff&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]</column>
            <column>[db2.1phqijc054rhev1266iad0956og9].[appt type use (group)]</column>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093768806401:nk]</column>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1172906285535813634:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]' value='132' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-size' value='10' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[db2.1phqijc054rhev1266iad0956og9].[appt type use (group)]' value='Career Status' />
            <format attr='title' field='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]' value='Location' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[db2.1phqijc054rhev1266iad0956og9].[sum:GROSS_EARNINGS_PAY_PER:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Personnel Program:&#9;</run>
                <run bold='true'>&lt;[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Date:&#9;</run>
                <run bold='true'>&lt;[db2.1phqijc054rhev1266iad0956og9].[none:EFF_DATE:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Dollars or FTE:&#9;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]</rows>
        <cols>[db2.1phqijc054rhev1266iad0956og9].[none:EFF_DATE:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Fo updating 9 pager funds'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='16'>Staff FTE Data Table</run>
            <run>&#10;October CPS Snapshot Data</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (PERSONNEL)' name='db2.1phqijc054rhev1266iad0956og9' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='(All)' caption='Service Focus' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='(All)' />
                <alias key='&quot;Health Sciences&quot;' value='--- Health Sciences' />
                <alias key='&quot;Med Center&quot;' value='--- Med Center' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='db2.1phqijc054rhev1266iad0956og9'>
            <column datatype='string' name='[APPT_TYPE_CODE]' role='dimension' type='nominal' />
            <column datatype='string' name='[APPT_TYPE_CODE_PRI]' role='dimension' type='nominal' />
            <column datatype='string' name='[CAMPUS_NAME_ABR]' role='dimension' type='nominal' />
            <column datatype='date' name='[CHECK_DATE]' role='dimension' type='ordinal' />
            <column datatype='string' name='[CTO_FIX]' role='dimension' type='nominal' />
            <column caption='OP ANR Flag' datatype='string' name='[Calculation_1016687669559242752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Pull out OP and ANR employees&#13;&#10;&#13;&#10;IF [LOCATION_2] = &apos;2&apos; AND [SAU_CODE] != &apos;4&apos; THEN &apos;UCOP&apos;&#13;&#10;ELSEIF [LOCATION_2] = &apos;2&apos; and [SAU_CODE] = &apos;4&apos; THEN &apos;ANR&apos;&#13;&#10;ELSE &apos;Other loc&apos;&#13;&#10;END' />
            </column>
            <column caption='Base FTE flag' datatype='string' name='[Calculation_1016687669560307714]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Filters out non-base FTE using description of service (DOS) codes.&#13;&#10;&#13;&#10;IF [DOS_CODE_CPS] = &apos;AV&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;AW&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;AX&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;AM&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;HR&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;HD&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;HY&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSE &apos;Other FTE&apos;&#13;&#10;END' />
            </column>
            <column caption='General Campus/Health Sci' datatype='string' name='[Calculation_1172906285524258816]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// There are sometimes issues with how the campuses encode their data for location_3, which is what we use&#13;&#10;// to track those in the UC health umberella. To remedy this, one can look at the org_1_code and org_1_title &#13;&#10;//fields to see if there were errors. In the cases below, we could tell location_3 was not correct by looking &#13;&#10;//at the org_1 titles. If an org title indicated a medical school or some other health science area and it was &#13;&#10;// categorized into general campus, we capture that and make sure it correctly categorized into health&#13;&#10;&#13;&#10;// Fixes for Irvine&#13;&#10;&#13;&#10;IF  [LOCATION_3] = &apos;2&apos; THEN &apos;UC Health&apos;&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;09&apos;) &#13;&#10;    AND ((RTRIM([ORG_1_CODE]) = &apos;99030&apos;) &#13;&#10;    OR (RTRIM([ORG_1_CODE]) = &apos;9MEDC&apos;) &#13;&#10;    OR (RTRIM([ORG_1_CODE]) = &apos;92000&apos;))&#13;&#10;THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;// Fixes for Riverside&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;05&apos; AND RTRIM([ORG_1_CODE]) = &apos;5ORG40&apos;) THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;// Fixes for Los Angeles&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;04&apos;) &#13;&#10;    AND ((RTRIM([ORG_1_CODE]) = &apos;44000&apos;) &#13;&#10;    OR (RTRIM([ORG_1_CODE]) = &apos;42200&apos;)&#13;&#10;    OR (RTRIM([ORG_1_CODE]) = &apos;43200&apos;))&#13;&#10;THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;// Fixes for San Diego&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;06&apos;) AND &#13;&#10;    ((RTRIM([ORG_1_CODE]) = &apos;6000003&apos;) &#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;6     3&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;6000005&apos;) &#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;6     5&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;60003&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;60008&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;6000008&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;60005&apos;)&#13;&#10;)&#13;&#10;THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;ELSE &apos;General Campus&apos;&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Health Breakout' datatype='string' name='[Calculation_1172906285534130177]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Breaks out medical centers and health sciences from overal UC health&#13;&#10;&#13;&#10;IF [Calculation_1172906285524258816] = &apos;UC Health&apos; AND [FUNCTION_CODE] = &apos;42&apos; THEN &apos;Med Center&apos;&#13;&#10;ELSEIF [Calculation_1172906285524258816] = &apos;UC Health&apos; AND [FUNCTION_CODE] != &apos;42&apos; THEN &apos;Health Sciences&apos;&#13;&#10;END' />
            </column>
            <column caption='Service Focus Filter' datatype='string' name='[Calculation_1172906285535813634]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Used to facilitate the filtering of the health sciences breakout.&#13;&#10;&#13;&#10;IF &#13;&#10;    [Parameters].[Parameter 2] = [Calculation_1172906285534130177] &#13;&#10;THEN &#13;&#10;    &quot;Show&quot;&#13;&#10;ELSEIF &#13;&#10;    [Parameters].[Parameter 2] = [Calculation_1172906285524258816] &#13;&#10;THEN &#13;&#10;    &quot;Show&quot;&#13;&#10;ELSEIF &#13;&#10;    [Parameters].[Parameter 2] = &apos;All&apos; THEN &apos;Show&apos;&#13;&#10;END' />
            </column>
            <column caption='Location - Full List' datatype='string' name='[Calculation_145804093765197824]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Location list that includes OP and ANR&#13;&#10;&#13;&#10;IF [Calculation_1016687669559242752] = &apos;UCOP&apos; THEN &apos;OP&apos;&#13;&#10;ELSEIF [Calculation_1016687669559242752] = &apos;ANR&apos; THEN &apos;ANR&apos;&#13;&#10;ELSE [CAMPUS_NAME_ABR]&#13;&#10;END' />
              <aliases>
                <alias key='&quot;ANR&quot;' value='Ag &amp; Nat Resources (ANR)' />
                <alias key='&quot;BK&quot;' value='Berkeley' />
                <alias key='&quot;DV&quot;' value='Davis' />
                <alias key='&quot;IR&quot;' value='Irvine' />
                <alias key='&quot;LA&quot;' value='Los Angeles' />
                <alias key='&quot;MC&quot;' value='Merced' />
                <alias key='&quot;OP&quot;' value='Office of the President &amp; SWP*' />
                <alias key='&quot;RV&quot;' value='Riverside' />
                <alias key='&quot;SB&quot;' value='Santa Barbara' />
                <alias key='&quot;SC&quot;' value='Santa Cruz' />
                <alias key='&quot;SD&quot;' value='San Diego' />
                <alias key='&quot;SF&quot;' value='San Francisco' />
              </aliases>
            </column>
            <column caption='Funding Source (More Granular)' datatype='string' name='[Calculation_145804093768806401]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// This categorizes funds into core and non-core in a more granular way&#13;&#10;&#13;&#10;IF (RTRIM([FUND_GROUP_CODE]) = &apos;401&apos;&#13;&#10;OR RTRIM([FUND_GROUP_CODE]) = &apos;402&apos;&#13;&#10;OR RTRIM([FUND_GROUP_CODE]) = &apos;40411&apos;) THEN &apos;General Funds (Core)&apos;&#13;&#10;ELSEIF (RTRIM([FUND_GROUP_CODE]) = &apos;40311&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40312&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403141&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403142&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403143&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403144&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403145&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403146&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403147&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403148&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403149&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40315&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403151&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403152&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403153&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;4032&apos;) THEN &apos;Other Core Funds&apos;&#13;&#10;ELSE &apos;Non-Core Funds&apos;&#13;&#10;END' />
            </column>
            <column caption='Base FTE' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_752382666467852288]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Filters for only &apos;base FTE&apos;&#13;&#10;&#13;&#10;&#13;&#10;//Applies fix for those at Irvine who received retro-active pay adjustments that were encoded with 1.0 FTE&#13;&#10;// when they should have had 0.0 FTE. We foudn all of the check dates were on the same day and so this allows&#13;&#10;// us to remove the FTE from those lines while retaining the associated pay.&#13;&#10;IF [LOCATION_1] = &apos;09&apos; AND [CHECK_DATE] = DATE(&apos;12/1/2015&apos;) THEN 0&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [Calculation_1016687669560307714] = &apos;Base FTE&apos; THEN [TIME_DISTRIB_ACTUAL]&#13;&#10;END' />
            </column>
            <column caption='Career Status' datatype='string' name='[Calculation_869757736329613312]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [PERS_PGM] = &apos;ACA&apos; THEN &apos;Academic Personnel&apos;&#13;&#10;ELSEIF ([Calculation_946318925060980737] = &apos;2&apos; OR [Calculation_946318925060980737] = &apos;7&apos;) THEN &apos;Career Staff&apos;&#13;&#10;ELSE &apos;Non-Career Staff&apos;&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Personnel Program Split' datatype='string' name='[Calculation_946318925060562944]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// This categorizes employees into a more ganular version of personnel program. Particularly, it breaks&#13;&#10;// managers out from senior professionals in the MSP personnel program. It also breaks students out from the&#13;&#10;// large PSS personnel program. &#13;&#10;// For several years some employees were miscategorized with the CTO of M05, which is used for those in the&#13;&#10;// SMG personnel program when they should have been in the &apos;Managers&apos; CTO of M10, line 5 below fixes this.&#13;&#10;&#13;&#10;IF [PERS_PGM] = &apos;ACA&apos; THEN &apos;Academics&apos;&#13;&#10;ELSEIF [Calculation_946318925060980737] = &apos;4&apos; THEN &apos;Student Staff&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;SMG&apos; THEN &apos;SMG&apos;&#13;&#10;ELSEIF [CTO_FIX] = &apos;M10&apos; THEN &apos;MSP - Managers&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;MSP&apos; AND [CTO_FIX] = &apos;M05&apos; THEN &apos;MSP - Managers&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;MSP&apos; and [CTO_FIX] != &apos;M10&apos; THEN &apos;MSP - Senior Professionals&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;PSS&apos; and [Calculation_946318925060980737] != &apos;4&apos; THEN &apos;PSS - Non Students&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;UNK&apos; THEN &apos;PSS - Non Students&apos;&#13;&#10;END' />
              <aliases>
                <alias key='&quot;MSP - Managers&quot;' value='Managers (M)' />
                <alias key='&quot;MSP - Senior Professionals&quot;' value='Senior Professionals (SP)' />
                <alias key='&quot;PSS - Non Students&quot;' value='Professional &amp; Support Staff (PSS)  - Non Students' />
                <alias key='&quot;SMG&quot;' value='Senior Management Group (SMG)' />
              </aliases>
            </column>
            <column caption='appt type use' datatype='string' name='[Calculation_946318925060980737]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// This code is used if the data has been extracted&#13;&#10;IF [APPT_TYPE_CODE] = &apos; &apos; THEN [APPT_TYPE_CODE_PRI]&#13;&#10;ELSE [APPT_TYPE_CODE]&#13;&#10;END&#13;&#10;&#13;&#10;//    This code is used if the connection to the server is live&#13;&#10;//    IF ISNULL([appt_type_code]) THEN [appt_type_code_pri]&#13;&#10;//    Else [appt_type_code]&#13;&#10;//    END' />
              <aliases>
                <alias key='&quot;1&quot;' value='Contract' />
                <alias key='&quot;2&quot;' value='Career' />
                <alias key='&quot;3&quot;' value='Limited' />
                <alias key='&quot;4&quot;' value='Casual/Restricted (student)' />
                <alias key='&quot;5&quot;' value='Academic' />
                <alias key='&quot;6&quot;' value='Per diem' />
                <alias key='&quot;7&quot;' value='Partial year career' />
                <alias key='&quot;8&quot;' value='Floater' />
              </aliases>
            </column>
            <column datatype='string' name='[DOS_CODE_CPS]' role='dimension' type='nominal' />
            <column datatype='string' name='[EFF_DATE]' role='dimension' type='nominal' />
            <column datatype='string' name='[FUNCTION_CODE]' role='dimension' type='nominal' />
            <column datatype='string' name='[FUND_GROUP_CODE]' role='dimension' type='nominal' />
            <column datatype='string' name='[LOCATION_1]' role='dimension' type='nominal' />
            <column datatype='string' name='[LOCATION_2]' role='dimension' type='nominal' />
            <column datatype='string' name='[LOCATION_3]' role='dimension' type='nominal' />
            <column datatype='string' name='[ORG_1_CODE]' role='dimension' type='nominal' />
            <column datatype='string' name='[PERS_PGM]' role='dimension' type='nominal' />
            <column datatype='string' name='[SAU_CODE]' role='dimension' type='nominal' />
            <column datatype='real' name='[TIME_DISTRIB_ACTUAL]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1172906285535813634]' derivation='None' name='[none:Calculation_1172906285535813634:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_145804093765197824]' derivation='None' name='[none:Calculation_145804093765197824:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_145804093768806401]' derivation='None' name='[none:Calculation_145804093768806401:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_869757736329613312]' derivation='None' name='[none:Calculation_869757736329613312:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_946318925060562944]' derivation='None' name='[none:Calculation_946318925060562944:nk]' pivot='key' type='nominal' />
            <column-instance column='[EFF_DATE]' derivation='None' name='[none:EFF_DATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_752382666467852288]' derivation='Sum' name='[sum:Calculation_752382666467852288:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1172906285535813634:nk]'>
            <groupfilter function='member' level='[none:Calculation_1172906285535813634:nk]' member='&quot;Show&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_145804093765197824:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093768806401:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;General Funds (Core)&quot;</bucket>
              <bucket>&quot;Other Core Funds&quot;</bucket>
              <bucket>&quot;Non-Core Funds&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_869757736329613312:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_869757736329613312:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_946318925060562944:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;SMG&quot;</bucket>
              <bucket>&quot;MSP - Managers&quot;</bucket>
              <bucket>&quot;MSP - Senior Professionals&quot;</bucket>
              <bucket>&quot;PSS - Non Students&quot;</bucket>
              <bucket>&quot;Academics&quot;</bucket>
              <bucket>&quot;Student Staff&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:EFF_DATE:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:EFF_DATE:nk]' />
              <groupfilter from='&quot;OCT2008&quot;' function='range' level='[none:EFF_DATE:nk]' to='&quot;OCT2014&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]</column>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_869757736329613312:nk]</column>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1172906285535813634:nk]</column>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]</column>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:EFF_DATE:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]' value='176' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-size' value='10' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]' value='Location' />
            <format attr='title' field='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093768806401:nk]' value='Funding Source'>
              <formatted-text>
                <run>Funding Source</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[db2.1phqijc054rhev1266iad0956og9].[sum:Calculation_752382666467852288:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Personnel Program:&#9;</run>
                <run bold='true'>&lt;[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Date:&#9;</run>
                <run bold='true'>&lt;[db2.1phqijc054rhev1266iad0956og9].[none:EFF_DATE:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Dollars or FTE:&#9;</run>
                <run bold='true'>&lt;[db2.1phqijc054rhev1266iad0956og9].[sum:Calculation_752382666467852288:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093768806401:nk]</rows>
        <cols>([db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk] / [db2.1phqijc054rhev1266iad0956og9].[none:EFF_DATE:nk])</cols>
        <subtotals>
          <column>[db2.1phqijc054rhev1266iad0956og9].[Personnel Program Split (group)]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Job Family Sheet'>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (PERSONNEL)' name='db2.1phqijc054rhev1266iad0956og9' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='(All)' caption='Service Focus' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='(All)' />
                <alias key='&quot;Health Sciences&quot;' value='--- Health Sciences' />
                <alias key='&quot;Med Center&quot;' value='--- Med Center' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='db2.1phqijc054rhev1266iad0956og9'>
            <column datatype='string' name='[APPT_TYPE_CODE]' role='dimension' type='nominal' />
            <column datatype='string' name='[APPT_TYPE_CODE_PRI]' role='dimension' type='nominal' />
            <column datatype='string' name='[CAMPUS_NAME_ABR]' role='dimension' type='nominal' />
            <column datatype='date' name='[CHECK_DATE]' role='dimension' type='ordinal' />
            <column datatype='string' name='[CLASS_TTL_OUTL_CODE_APPT]' role='dimension' type='nominal' />
            <column datatype='string' name='[CTO_FIX]' role='dimension' type='nominal' />
            <column caption='OP ANR Flag' datatype='string' name='[Calculation_1016687669559242752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Pull out OP and ANR employees&#13;&#10;&#13;&#10;IF [LOCATION_2] = &apos;2&apos; AND [SAU_CODE] != &apos;4&apos; THEN &apos;UCOP&apos;&#13;&#10;ELSEIF [LOCATION_2] = &apos;2&apos; and [SAU_CODE] = &apos;4&apos; THEN &apos;ANR&apos;&#13;&#10;ELSE &apos;Other loc&apos;&#13;&#10;END' />
            </column>
            <column caption='Base FTE flag' datatype='string' name='[Calculation_1016687669560307714]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Filters out non-base FTE using description of service (DOS) codes.&#13;&#10;&#13;&#10;IF [DOS_CODE_CPS] = &apos;AV&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;AW&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;AX&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;AM&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;HR&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;HD&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;HY&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSE &apos;Other FTE&apos;&#13;&#10;END' />
            </column>
            <column caption='General Campus/Health Sci' datatype='string' name='[Calculation_1172906285524258816]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// There are sometimes issues with how the campuses encode their data for location_3, which is what we use&#13;&#10;// to track those in the UC health umberella. To remedy this, one can look at the org_1_code and org_1_title &#13;&#10;//fields to see if there were errors. In the cases below, we could tell location_3 was not correct by looking &#13;&#10;//at the org_1 titles. If an org title indicated a medical school or some other health science area and it was &#13;&#10;// categorized into general campus, we capture that and make sure it correctly categorized into health&#13;&#10;&#13;&#10;// Fixes for Irvine&#13;&#10;&#13;&#10;IF  [LOCATION_3] = &apos;2&apos; THEN &apos;UC Health&apos;&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;09&apos;) &#13;&#10;    AND ((RTRIM([ORG_1_CODE]) = &apos;99030&apos;) &#13;&#10;    OR (RTRIM([ORG_1_CODE]) = &apos;9MEDC&apos;) &#13;&#10;    OR (RTRIM([ORG_1_CODE]) = &apos;92000&apos;))&#13;&#10;THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;// Fixes for Riverside&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;05&apos; AND RTRIM([ORG_1_CODE]) = &apos;5ORG40&apos;) THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;// Fixes for Los Angeles&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;04&apos;) &#13;&#10;    AND ((RTRIM([ORG_1_CODE]) = &apos;44000&apos;) &#13;&#10;    OR (RTRIM([ORG_1_CODE]) = &apos;42200&apos;)&#13;&#10;    OR (RTRIM([ORG_1_CODE]) = &apos;43200&apos;))&#13;&#10;THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;// Fixes for San Diego&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;06&apos;) AND &#13;&#10;    ((RTRIM([ORG_1_CODE]) = &apos;6000003&apos;) &#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;6     3&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;6000005&apos;) &#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;6     5&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;60003&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;60008&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;6000008&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;60005&apos;)&#13;&#10;)&#13;&#10;THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;ELSE &apos;General Campus&apos;&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Health Breakout' datatype='string' name='[Calculation_1172906285534130177]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Breaks out medical centers and health sciences from overal UC health&#13;&#10;&#13;&#10;IF [Calculation_1172906285524258816] = &apos;UC Health&apos; AND [FUNCTION_CODE] = &apos;42&apos; THEN &apos;Med Center&apos;&#13;&#10;ELSEIF [Calculation_1172906285524258816] = &apos;UC Health&apos; AND [FUNCTION_CODE] != &apos;42&apos; THEN &apos;Health Sciences&apos;&#13;&#10;END' />
            </column>
            <column caption='Service Focus Filter' datatype='string' name='[Calculation_1172906285535813634]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Used to facilitate the filtering of the health sciences breakout.&#13;&#10;&#13;&#10;IF &#13;&#10;    [Parameters].[Parameter 2] = [Calculation_1172906285534130177] &#13;&#10;THEN &#13;&#10;    &quot;Show&quot;&#13;&#10;ELSEIF &#13;&#10;    [Parameters].[Parameter 2] = [Calculation_1172906285524258816] &#13;&#10;THEN &#13;&#10;    &quot;Show&quot;&#13;&#10;ELSEIF &#13;&#10;    [Parameters].[Parameter 2] = &apos;All&apos; THEN &apos;Show&apos;&#13;&#10;END' />
            </column>
            <column caption='Job Family - original' datatype='string' name='[Calculation_1198239034499338240]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// This categorizes employees into different job families which were put together by Charles Masten for our&#13;&#10;// &apos;9-pager&apos; report.&#13;&#10;&#13;&#10;IF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and (      [CLASS_TTL_OUTL_CODE_APPT] = &apos;A10&apos; &#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A15&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A20&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A25&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A30&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A35&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;C10&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;C15&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;C20&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;C30&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H10&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H15&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H20&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H25&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H30&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H35&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H40&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H45&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H50&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H55&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H60&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H65&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H70&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H75&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H80&apos;&#13;&#10;) THEN &quot;Student Services (including Health, Housing, and Dining)&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and [CLASS_TTL_OUTL_CODE_APPT] = &apos;F20&apos; &#13;&#10;    THEN &quot;Administrative Analysis&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and &#13;&#10;        ([CLASS_TTL_OUTL_CODE_APPT] = &apos;B15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;B20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;B40&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;B30&apos;)&#13;&#10;    THEN &quot;Clerical &amp; Allied Services&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and [CLASS_TTL_OUTL_CODE_APPT] = &apos;F15&apos;&#13;&#10;    THEN &quot;Computer Programming and Analysis&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and ([CLASS_TTL_OUTL_CODE_APPT] = &apos;E10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;E15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;E20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G23&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G25&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G33&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G35&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G40&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G45&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G55&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G65&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G75&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G80&apos;)&#13;&#10;    THEN &quot;Arch./Engineering/Maint &amp; Plant Operations&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and ([CLASS_TTL_OUTL_CODE_APPT] = &apos;D10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;D15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;D25&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F30&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F35&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F40&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F45&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;I10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;I15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;I20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;I25&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;J10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;J15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;M20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;Z10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;Z20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;Z25&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;   &apos;)&#13;&#10;    THEN &quot;All Others (Laboratory, Comm. &amp; Fiscal Serv)&quot;&#13;&#10;ELSE &apos;Uncategorized&apos;&#13;&#10;END' />
            </column>
            <column caption='Location - Full List' datatype='string' name='[Calculation_145804093765197824]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Location list that includes OP and ANR&#13;&#10;&#13;&#10;IF [Calculation_1016687669559242752] = &apos;UCOP&apos; THEN &apos;OP&apos;&#13;&#10;ELSEIF [Calculation_1016687669559242752] = &apos;ANR&apos; THEN &apos;ANR&apos;&#13;&#10;ELSE [CAMPUS_NAME_ABR]&#13;&#10;END' />
              <aliases>
                <alias key='&quot;ANR&quot;' value='Ag &amp; Nat Resources (ANR)' />
                <alias key='&quot;BK&quot;' value='Berkeley' />
                <alias key='&quot;DV&quot;' value='Davis' />
                <alias key='&quot;IR&quot;' value='Irvine' />
                <alias key='&quot;LA&quot;' value='Los Angeles' />
                <alias key='&quot;MC&quot;' value='Merced' />
                <alias key='&quot;OP&quot;' value='Office of the President &amp; SWP*' />
                <alias key='&quot;RV&quot;' value='Riverside' />
                <alias key='&quot;SB&quot;' value='Santa Barbara' />
                <alias key='&quot;SC&quot;' value='Santa Cruz' />
                <alias key='&quot;SD&quot;' value='San Diego' />
                <alias key='&quot;SF&quot;' value='San Francisco' />
              </aliases>
            </column>
            <column caption='Base FTE' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_752382666467852288]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Filters for only &apos;base FTE&apos;&#13;&#10;&#13;&#10;&#13;&#10;//Applies fix for those at Irvine who received retro-active pay adjustments that were encoded with 1.0 FTE&#13;&#10;// when they should have had 0.0 FTE. We foudn all of the check dates were on the same day and so this allows&#13;&#10;// us to remove the FTE from those lines while retaining the associated pay.&#13;&#10;IF [LOCATION_1] = &apos;09&apos; AND [CHECK_DATE] = DATE(&apos;12/1/2015&apos;) THEN 0&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [Calculation_1016687669560307714] = &apos;Base FTE&apos; THEN [TIME_DISTRIB_ACTUAL]&#13;&#10;END' />
            </column>
            <column caption='Career Status' datatype='string' name='[Calculation_869757736329613312]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [PERS_PGM] = &apos;ACA&apos; THEN &apos;Academic Personnel&apos;&#13;&#10;ELSEIF ([Calculation_946318925060980737] = &apos;2&apos; OR [Calculation_946318925060980737] = &apos;7&apos;) THEN &apos;Career Staff&apos;&#13;&#10;ELSE &apos;Non-Career Staff&apos;&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Personnel Program Split' datatype='string' name='[Calculation_946318925060562944]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// This categorizes employees into a more ganular version of personnel program. Particularly, it breaks&#13;&#10;// managers out from senior professionals in the MSP personnel program. It also breaks students out from the&#13;&#10;// large PSS personnel program. &#13;&#10;// For several years some employees were miscategorized with the CTO of M05, which is used for those in the&#13;&#10;// SMG personnel program when they should have been in the &apos;Managers&apos; CTO of M10, line 5 below fixes this.&#13;&#10;&#13;&#10;IF [PERS_PGM] = &apos;ACA&apos; THEN &apos;Academics&apos;&#13;&#10;ELSEIF [Calculation_946318925060980737] = &apos;4&apos; THEN &apos;Student Staff&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;SMG&apos; THEN &apos;SMG&apos;&#13;&#10;ELSEIF [CTO_FIX] = &apos;M10&apos; THEN &apos;MSP - Managers&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;MSP&apos; AND [CTO_FIX] = &apos;M05&apos; THEN &apos;MSP - Managers&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;MSP&apos; and [CTO_FIX] != &apos;M10&apos; THEN &apos;MSP - Senior Professionals&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;PSS&apos; and [Calculation_946318925060980737] != &apos;4&apos; THEN &apos;PSS - Non Students&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;UNK&apos; THEN &apos;PSS - Non Students&apos;&#13;&#10;END' />
              <aliases>
                <alias key='&quot;MSP - Managers&quot;' value='Managers (M)' />
                <alias key='&quot;MSP - Senior Professionals&quot;' value='Senior Professionals (SP)' />
                <alias key='&quot;PSS - Non Students&quot;' value='Professional &amp; Support Staff (PSS)  - Non Students' />
                <alias key='&quot;SMG&quot;' value='Senior Management Group (SMG)' />
              </aliases>
            </column>
            <column caption='appt type use' datatype='string' name='[Calculation_946318925060980737]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// This code is used if the data has been extracted&#13;&#10;IF [APPT_TYPE_CODE] = &apos; &apos; THEN [APPT_TYPE_CODE_PRI]&#13;&#10;ELSE [APPT_TYPE_CODE]&#13;&#10;END&#13;&#10;&#13;&#10;//    This code is used if the connection to the server is live&#13;&#10;//    IF ISNULL([appt_type_code]) THEN [appt_type_code_pri]&#13;&#10;//    Else [appt_type_code]&#13;&#10;//    END' />
              <aliases>
                <alias key='&quot;1&quot;' value='Contract' />
                <alias key='&quot;2&quot;' value='Career' />
                <alias key='&quot;3&quot;' value='Limited' />
                <alias key='&quot;4&quot;' value='Casual/Restricted (student)' />
                <alias key='&quot;5&quot;' value='Academic' />
                <alias key='&quot;6&quot;' value='Per diem' />
                <alias key='&quot;7&quot;' value='Partial year career' />
                <alias key='&quot;8&quot;' value='Floater' />
              </aliases>
            </column>
            <column datatype='string' name='[DOS_CODE_CPS]' role='dimension' type='nominal' />
            <column datatype='string' name='[EFF_DATE]' role='dimension' type='nominal' />
            <column datatype='string' name='[FUNCTION_CODE]' role='dimension' type='nominal' />
            <column datatype='string' name='[FUND]' role='dimension' type='nominal' />
            <column datatype='string' name='[FUND_GROUP_CODE]' role='dimension' type='nominal' />
            <column caption='Funding Source' datatype='string' name='[Funding Groups (More Granular) (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// This categorizes funds into core and non-core&#13;&#10;&#13;&#10;IF [FUND] = &apos;69085&apos; THEN &apos;Systemwide Assessment&apos;&#13;&#10;&#13;&#10;ELSEIF    (RTRIM([FUND_GROUP_CODE]) = &apos;401&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;402&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40411&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40311&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40312&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403141&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403142&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403143&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403144&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403145&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403146&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403147&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403148&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403149&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40315&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403151&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403152&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403153&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;4032&apos;) THEN &apos;Core Funds&apos;&#13;&#10;ELSE &apos;Non-Core Funds&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[LOCATION_1]' role='dimension' type='nominal' />
            <column datatype='string' name='[LOCATION_2]' role='dimension' type='nominal' />
            <column datatype='string' name='[LOCATION_3]' role='dimension' type='nominal' />
            <column datatype='string' name='[ORG_1_CODE]' role='dimension' type='nominal' />
            <column datatype='string' name='[PERS_PGM]' role='dimension' type='nominal' />
            <column datatype='string' name='[SAU_CODE]' role='dimension' type='nominal' />
            <column datatype='real' name='[TIME_DISTRIB_ACTUAL]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1172906285535813634]' derivation='None' name='[none:Calculation_1172906285535813634:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1198239034499338240]' derivation='None' name='[none:Calculation_1198239034499338240:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_145804093765197824]' derivation='None' name='[none:Calculation_145804093765197824:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_869757736329613312]' derivation='None' name='[none:Calculation_869757736329613312:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_946318925060562944]' derivation='None' name='[none:Calculation_946318925060562944:nk]' pivot='key' type='nominal' />
            <column-instance column='[EFF_DATE]' derivation='None' name='[none:EFF_DATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[Funding Groups (More Granular) (copy)]' derivation='None' name='[none:Funding Groups (More Granular) (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[PERS_PGM]' derivation='None' name='[none:PERS_PGM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_752382666467852288]' derivation='Sum' name='[sum:Calculation_752382666467852288:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1172906285535813634:nk]'>
            <groupfilter function='member' level='[none:Calculation_1172906285535813634:nk]' member='&quot;Show&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1198239034499338240:nk]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Uncategorized&quot;</bucket>
              <bucket>&quot;Student Services (including Health, Housing, and Dining)&quot;</bucket>
              <bucket>&quot;Administrative Analysis&quot;</bucket>
              <bucket>&quot;Clerical &amp; Allied Services&quot;</bucket>
              <bucket>&quot;Computer Programming and Analysis&quot;</bucket>
              <bucket>&quot;Arch./Engineering/Maint &amp; Plant Operations&quot;</bucket>
              <bucket>&quot;All Others (Laboratory, Comm. &amp; Fiscal Serv)&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_145804093765197824:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_869757736329613312:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_869757736329613312:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;SMG&quot;</bucket>
              <bucket>&quot;MSP - Managers&quot;</bucket>
              <bucket>&quot;MSP - Senior Professionals&quot;</bucket>
              <bucket>&quot;PSS - Non Students&quot;</bucket>
              <bucket>&quot;Student Staff&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:Funding Groups (More Granular) (copy):nk]'>
            <groupfilter function='level-members' level='[none:Funding Groups (More Granular) (copy):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:PERS_PGM:nk]'>
            <groupfilter from='&quot;MSP&quot;' function='range' level='[none:PERS_PGM:nk]' to='&quot;UNK&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:PERS_PGM:nk]</column>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]</column>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1172906285535813634:nk]</column>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_869757736329613312:nk]</column>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:Funding Groups (More Granular) (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]' value='196' />
            <format attr='width' field='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1198239034499338240:nk]' value='152' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1198239034499338240:nk]' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#000000' />
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]' value='Location'>
              <formatted-text>
                <run>Location</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[db2.1phqijc054rhev1266iad0956og9].[sum:Calculation_752382666467852288:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1198239034499338240:nk] / [db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk])</rows>
        <cols>[db2.1phqijc054rhev1266iad0956og9].[none:EFF_DATE:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Main sheet'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='16'>Staff FTE Data Table</run>
            <run>&#10;October CPS Snapshot Data</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (PERSONNEL)' name='db2.1phqijc054rhev1266iad0956og9' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='(All)' caption='Service Focus' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='(All)' />
                <alias key='&quot;Health Sciences&quot;' value='--- Health Sciences' />
                <alias key='&quot;Med Center&quot;' value='--- Med Center' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='db2.1phqijc054rhev1266iad0956og9'>
            <column datatype='string' name='[APPT_TYPE_CODE]' role='dimension' type='nominal' />
            <column datatype='string' name='[APPT_TYPE_CODE_PRI]' role='dimension' type='nominal' />
            <column datatype='string' name='[CAMPUS_NAME_ABR]' role='dimension' type='nominal' />
            <column datatype='date' name='[CHECK_DATE]' role='dimension' type='ordinal' />
            <column datatype='string' name='[CTO_FIX]' role='dimension' type='nominal' />
            <column caption='OP ANR Flag' datatype='string' name='[Calculation_1016687669559242752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Pull out OP and ANR employees&#13;&#10;&#13;&#10;IF [LOCATION_2] = &apos;2&apos; AND [SAU_CODE] != &apos;4&apos; THEN &apos;UCOP&apos;&#13;&#10;ELSEIF [LOCATION_2] = &apos;2&apos; and [SAU_CODE] = &apos;4&apos; THEN &apos;ANR&apos;&#13;&#10;ELSE &apos;Other loc&apos;&#13;&#10;END' />
            </column>
            <column caption='Base FTE flag' datatype='string' name='[Calculation_1016687669560307714]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Filters out non-base FTE using description of service (DOS) codes.&#13;&#10;&#13;&#10;IF [DOS_CODE_CPS] = &apos;AV&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;AW&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;AX&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;AM&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;HR&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;HD&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;HY&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSE &apos;Other FTE&apos;&#13;&#10;END' />
            </column>
            <column caption='General Campus/Health Sci' datatype='string' name='[Calculation_1172906285524258816]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// There are sometimes issues with how the campuses encode their data for location_3, which is what we use&#13;&#10;// to track those in the UC health umberella. To remedy this, one can look at the org_1_code and org_1_title &#13;&#10;//fields to see if there were errors. In the cases below, we could tell location_3 was not correct by looking &#13;&#10;//at the org_1 titles. If an org title indicated a medical school or some other health science area and it was &#13;&#10;// categorized into general campus, we capture that and make sure it correctly categorized into health&#13;&#10;&#13;&#10;// Fixes for Irvine&#13;&#10;&#13;&#10;IF  [LOCATION_3] = &apos;2&apos; THEN &apos;UC Health&apos;&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;09&apos;) &#13;&#10;    AND ((RTRIM([ORG_1_CODE]) = &apos;99030&apos;) &#13;&#10;    OR (RTRIM([ORG_1_CODE]) = &apos;9MEDC&apos;) &#13;&#10;    OR (RTRIM([ORG_1_CODE]) = &apos;92000&apos;))&#13;&#10;THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;// Fixes for Riverside&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;05&apos; AND RTRIM([ORG_1_CODE]) = &apos;5ORG40&apos;) THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;// Fixes for Los Angeles&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;04&apos;) &#13;&#10;    AND ((RTRIM([ORG_1_CODE]) = &apos;44000&apos;) &#13;&#10;    OR (RTRIM([ORG_1_CODE]) = &apos;42200&apos;)&#13;&#10;    OR (RTRIM([ORG_1_CODE]) = &apos;43200&apos;))&#13;&#10;THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;// Fixes for San Diego&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;06&apos;) AND &#13;&#10;    ((RTRIM([ORG_1_CODE]) = &apos;6000003&apos;) &#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;6     3&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;6000005&apos;) &#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;6     5&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;60003&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;60008&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;6000008&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;60005&apos;)&#13;&#10;)&#13;&#10;THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;ELSE &apos;General Campus&apos;&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Health Breakout' datatype='string' name='[Calculation_1172906285534130177]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Breaks out medical centers and health sciences from overal UC health&#13;&#10;&#13;&#10;IF [Calculation_1172906285524258816] = &apos;UC Health&apos; AND [FUNCTION_CODE] = &apos;42&apos; THEN &apos;Med Center&apos;&#13;&#10;ELSEIF [Calculation_1172906285524258816] = &apos;UC Health&apos; AND [FUNCTION_CODE] != &apos;42&apos; THEN &apos;Health Sciences&apos;&#13;&#10;END' />
            </column>
            <column caption='Service Focus Filter' datatype='string' name='[Calculation_1172906285535813634]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Used to facilitate the filtering of the health sciences breakout.&#13;&#10;&#13;&#10;IF &#13;&#10;    [Parameters].[Parameter 2] = [Calculation_1172906285534130177] &#13;&#10;THEN &#13;&#10;    &quot;Show&quot;&#13;&#10;ELSEIF &#13;&#10;    [Parameters].[Parameter 2] = [Calculation_1172906285524258816] &#13;&#10;THEN &#13;&#10;    &quot;Show&quot;&#13;&#10;ELSEIF &#13;&#10;    [Parameters].[Parameter 2] = &apos;All&apos; THEN &apos;Show&apos;&#13;&#10;END' />
            </column>
            <column caption='Location - Full List' datatype='string' name='[Calculation_145804093765197824]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Location list that includes OP and ANR&#13;&#10;&#13;&#10;IF [Calculation_1016687669559242752] = &apos;UCOP&apos; THEN &apos;OP&apos;&#13;&#10;ELSEIF [Calculation_1016687669559242752] = &apos;ANR&apos; THEN &apos;ANR&apos;&#13;&#10;ELSE [CAMPUS_NAME_ABR]&#13;&#10;END' />
              <aliases>
                <alias key='&quot;ANR&quot;' value='Ag &amp; Nat Resources (ANR)' />
                <alias key='&quot;BK&quot;' value='Berkeley' />
                <alias key='&quot;DV&quot;' value='Davis' />
                <alias key='&quot;IR&quot;' value='Irvine' />
                <alias key='&quot;LA&quot;' value='Los Angeles' />
                <alias key='&quot;MC&quot;' value='Merced' />
                <alias key='&quot;OP&quot;' value='Office of the President &amp; SWP*' />
                <alias key='&quot;RV&quot;' value='Riverside' />
                <alias key='&quot;SB&quot;' value='Santa Barbara' />
                <alias key='&quot;SC&quot;' value='Santa Cruz' />
                <alias key='&quot;SD&quot;' value='San Diego' />
                <alias key='&quot;SF&quot;' value='San Francisco' />
              </aliases>
            </column>
            <column caption='Base FTE' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_752382666467852288]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Filters for only &apos;base FTE&apos;&#13;&#10;&#13;&#10;&#13;&#10;//Applies fix for those at Irvine who received retro-active pay adjustments that were encoded with 1.0 FTE&#13;&#10;// when they should have had 0.0 FTE. We foudn all of the check dates were on the same day and so this allows&#13;&#10;// us to remove the FTE from those lines while retaining the associated pay.&#13;&#10;IF [LOCATION_1] = &apos;09&apos; AND [CHECK_DATE] = DATE(&apos;12/1/2015&apos;) THEN 0&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [Calculation_1016687669560307714] = &apos;Base FTE&apos; THEN [TIME_DISTRIB_ACTUAL]&#13;&#10;END' />
            </column>
            <column caption='Career Status' datatype='string' name='[Calculation_869757736329613312]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [PERS_PGM] = &apos;ACA&apos; THEN &apos;Academic Personnel&apos;&#13;&#10;ELSEIF ([Calculation_946318925060980737] = &apos;2&apos; OR [Calculation_946318925060980737] = &apos;7&apos;) THEN &apos;Career Staff&apos;&#13;&#10;ELSE &apos;Non-Career Staff&apos;&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Personnel Program Split' datatype='string' name='[Calculation_946318925060562944]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// This categorizes employees into a more ganular version of personnel program. Particularly, it breaks&#13;&#10;// managers out from senior professionals in the MSP personnel program. It also breaks students out from the&#13;&#10;// large PSS personnel program. &#13;&#10;// For several years some employees were miscategorized with the CTO of M05, which is used for those in the&#13;&#10;// SMG personnel program when they should have been in the &apos;Managers&apos; CTO of M10, line 5 below fixes this.&#13;&#10;&#13;&#10;IF [PERS_PGM] = &apos;ACA&apos; THEN &apos;Academics&apos;&#13;&#10;ELSEIF [Calculation_946318925060980737] = &apos;4&apos; THEN &apos;Student Staff&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;SMG&apos; THEN &apos;SMG&apos;&#13;&#10;ELSEIF [CTO_FIX] = &apos;M10&apos; THEN &apos;MSP - Managers&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;MSP&apos; AND [CTO_FIX] = &apos;M05&apos; THEN &apos;MSP - Managers&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;MSP&apos; and [CTO_FIX] != &apos;M10&apos; THEN &apos;MSP - Senior Professionals&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;PSS&apos; and [Calculation_946318925060980737] != &apos;4&apos; THEN &apos;PSS - Non Students&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;UNK&apos; THEN &apos;PSS - Non Students&apos;&#13;&#10;END' />
              <aliases>
                <alias key='&quot;MSP - Managers&quot;' value='Managers (M)' />
                <alias key='&quot;MSP - Senior Professionals&quot;' value='Senior Professionals (SP)' />
                <alias key='&quot;PSS - Non Students&quot;' value='Professional &amp; Support Staff (PSS)  - Non Students' />
                <alias key='&quot;SMG&quot;' value='Senior Management Group (SMG)' />
              </aliases>
            </column>
            <column caption='appt type use' datatype='string' name='[Calculation_946318925060980737]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// This code is used if the data has been extracted&#13;&#10;IF [APPT_TYPE_CODE] = &apos; &apos; THEN [APPT_TYPE_CODE_PRI]&#13;&#10;ELSE [APPT_TYPE_CODE]&#13;&#10;END&#13;&#10;&#13;&#10;//    This code is used if the connection to the server is live&#13;&#10;//    IF ISNULL([appt_type_code]) THEN [appt_type_code_pri]&#13;&#10;//    Else [appt_type_code]&#13;&#10;//    END' />
              <aliases>
                <alias key='&quot;1&quot;' value='Contract' />
                <alias key='&quot;2&quot;' value='Career' />
                <alias key='&quot;3&quot;' value='Limited' />
                <alias key='&quot;4&quot;' value='Casual/Restricted (student)' />
                <alias key='&quot;5&quot;' value='Academic' />
                <alias key='&quot;6&quot;' value='Per diem' />
                <alias key='&quot;7&quot;' value='Partial year career' />
                <alias key='&quot;8&quot;' value='Floater' />
              </aliases>
            </column>
            <column datatype='string' name='[DOS_CODE_CPS]' role='dimension' type='nominal' />
            <column datatype='string' name='[EFF_DATE]' role='dimension' type='nominal' />
            <column datatype='string' name='[FUNCTION_CODE]' role='dimension' type='nominal' />
            <column datatype='string' name='[FUND]' role='dimension' type='nominal' />
            <column datatype='string' name='[FUND_GROUP_CODE]' role='dimension' type='nominal' />
            <column caption='Funding Source' datatype='string' name='[Funding Groups (More Granular) (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// This categorizes funds into core and non-core&#13;&#10;&#13;&#10;IF [FUND] = &apos;69085&apos; THEN &apos;Systemwide Assessment&apos;&#13;&#10;&#13;&#10;ELSEIF    (RTRIM([FUND_GROUP_CODE]) = &apos;401&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;402&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40411&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40311&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40312&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403141&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403142&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403143&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403144&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403145&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403146&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403147&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403148&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403149&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40315&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403151&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403152&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403153&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;4032&apos;) THEN &apos;Core Funds&apos;&#13;&#10;ELSE &apos;Non-Core Funds&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[LOCATION_1]' role='dimension' type='nominal' />
            <column datatype='string' name='[LOCATION_2]' role='dimension' type='nominal' />
            <column datatype='string' name='[LOCATION_3]' role='dimension' type='nominal' />
            <column datatype='string' name='[ORG_1_CODE]' role='dimension' type='nominal' />
            <column datatype='string' name='[PERS_PGM]' role='dimension' type='nominal' />
            <column datatype='string' name='[Personnel Program Split (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_946318925060562944]'>
                <bin value='&quot;MSP - Managers&quot;'>
                  <value>&quot;MSP - Managers&quot;</value>
                  <value>&quot;MSP - Senior Professionals&quot;</value>
                  <value>&quot;PSS - Non Students&quot;</value>
                  <value>&quot;SMG&quot;</value>
                  <value>&quot;Student Staff&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;Academics&quot;' value='Academic Personnel' />
                <alias key='&quot;MSP - Managers&quot;' value='Non-Academic Personnel' />
              </aliases>
            </column>
            <column datatype='string' name='[SAU_CODE]' role='dimension' type='nominal' />
            <column datatype='real' name='[TIME_DISTRIB_ACTUAL]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1172906285535813634]' derivation='None' name='[none:Calculation_1172906285535813634:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_145804093765197824]' derivation='None' name='[none:Calculation_145804093765197824:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_869757736329613312]' derivation='None' name='[none:Calculation_869757736329613312:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_946318925060562944]' derivation='None' name='[none:Calculation_946318925060562944:nk]' pivot='key' type='nominal' />
            <column-instance column='[EFF_DATE]' derivation='None' name='[none:EFF_DATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[Funding Groups (More Granular) (copy)]' derivation='None' name='[none:Funding Groups (More Granular) (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_752382666467852288]' derivation='Sum' name='[sum:Calculation_752382666467852288:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1172906285535813634:nk]'>
            <groupfilter function='member' level='[none:Calculation_1172906285535813634:nk]' member='&quot;Show&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_145804093765197824:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_869757736329613312:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_869757736329613312:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;Academics&quot;</bucket>
              <bucket>&quot;SMG&quot;</bucket>
              <bucket>&quot;MSP - Managers&quot;</bucket>
              <bucket>&quot;MSP - Senior Professionals&quot;</bucket>
              <bucket>&quot;PSS - Non Students&quot;</bucket>
              <bucket>&quot;Student Staff&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:Funding Groups (More Granular) (copy):nk]'>
            <groupfilter function='level-members' level='[none:Funding Groups (More Granular) (copy):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]</column>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_869757736329613312:nk]</column>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:Funding Groups (More Granular) (copy):nk]</column>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1172906285535813634:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]' value='176' />
            <format attr='width' field='[db2.1phqijc054rhev1266iad0956og9].[Personnel Program Split (group)]' value='132' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[db2.1phqijc054rhev1266iad0956og9].[Personnel Program Split (group)]' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-size' value='10' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]' value='Location' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[db2.1phqijc054rhev1266iad0956og9].[sum:Calculation_752382666467852288:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Personnel Program:&#9;</run>
                <run bold='true'>&lt;[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Date:&#9;</run>
                <run bold='true'>&lt;[db2.1phqijc054rhev1266iad0956og9].[none:EFF_DATE:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;FTE:&#9;</run>
                <run bold='true'>&lt;[db2.1phqijc054rhev1266iad0956og9].[sum:Calculation_752382666467852288:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([db2.1phqijc054rhev1266iad0956og9].[Personnel Program Split (group)] / [db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk])</rows>
        <cols>[db2.1phqijc054rhev1266iad0956og9].[none:EFF_DATE:nk]</cols>
        <subtotals>
          <column>[db2.1phqijc054rhev1266iad0956og9].[Personnel Program Split (group)]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Sheet 11'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='16'>Staff FTE Data Table</run>
            <run>&#10;October CPS Snapshot Data</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (PERSONNEL)' name='db2.1phqijc054rhev1266iad0956og9' />
          </datasources>
          <datasource-dependencies datasource='db2.1phqijc054rhev1266iad0956og9'>
            <column datatype='string' name='[APPT_TYPE_CODE]' role='dimension' type='nominal' />
            <column datatype='string' name='[APPT_TYPE_CODE_PRI]' role='dimension' type='nominal' />
            <column datatype='string' name='[CAMPUS_NAME_ABR]' role='dimension' type='nominal' />
            <column datatype='date' name='[CHECK_DATE]' role='dimension' type='ordinal' />
            <column datatype='string' name='[CTO_FIX]' role='dimension' type='nominal' />
            <column caption='OP ANR Flag' datatype='string' name='[Calculation_1016687669559242752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Pull out OP and ANR employees&#13;&#10;&#13;&#10;IF [LOCATION_2] = &apos;2&apos; AND [SAU_CODE] != &apos;4&apos; THEN &apos;UCOP&apos;&#13;&#10;ELSEIF [LOCATION_2] = &apos;2&apos; and [SAU_CODE] = &apos;4&apos; THEN &apos;ANR&apos;&#13;&#10;ELSE &apos;Other loc&apos;&#13;&#10;END' />
            </column>
            <column caption='Base FTE flag' datatype='string' name='[Calculation_1016687669560307714]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Filters out non-base FTE using description of service (DOS) codes.&#13;&#10;&#13;&#10;IF [DOS_CODE_CPS] = &apos;AV&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;AW&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;AX&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;AM&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;HR&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;HD&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;HY&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSE &apos;Other FTE&apos;&#13;&#10;END' />
            </column>
            <column caption='General Campus/Health Sci' datatype='string' name='[Calculation_1172906285524258816]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// There are sometimes issues with how the campuses encode their data for location_3, which is what we use&#13;&#10;// to track those in the UC health umberella. To remedy this, one can look at the org_1_code and org_1_title &#13;&#10;//fields to see if there were errors. In the cases below, we could tell location_3 was not correct by looking &#13;&#10;//at the org_1 titles. If an org title indicated a medical school or some other health science area and it was &#13;&#10;// categorized into general campus, we capture that and make sure it correctly categorized into health&#13;&#10;&#13;&#10;// Fixes for Irvine&#13;&#10;&#13;&#10;IF  [LOCATION_3] = &apos;2&apos; THEN &apos;UC Health&apos;&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;09&apos;) &#13;&#10;    AND ((RTRIM([ORG_1_CODE]) = &apos;99030&apos;) &#13;&#10;    OR (RTRIM([ORG_1_CODE]) = &apos;9MEDC&apos;) &#13;&#10;    OR (RTRIM([ORG_1_CODE]) = &apos;92000&apos;))&#13;&#10;THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;// Fixes for Riverside&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;05&apos; AND RTRIM([ORG_1_CODE]) = &apos;5ORG40&apos;) THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;// Fixes for Los Angeles&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;04&apos;) &#13;&#10;    AND ((RTRIM([ORG_1_CODE]) = &apos;44000&apos;) &#13;&#10;    OR (RTRIM([ORG_1_CODE]) = &apos;42200&apos;)&#13;&#10;    OR (RTRIM([ORG_1_CODE]) = &apos;43200&apos;))&#13;&#10;THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;// Fixes for San Diego&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;06&apos;) AND &#13;&#10;    ((RTRIM([ORG_1_CODE]) = &apos;6000003&apos;) &#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;6     3&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;6000005&apos;) &#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;6     5&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;60003&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;60008&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;6000008&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;60005&apos;)&#13;&#10;)&#13;&#10;THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;ELSE &apos;General Campus&apos;&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Health Breakout' datatype='string' name='[Calculation_1172906285534130177]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Breaks out medical centers and health sciences from overal UC health&#13;&#10;&#13;&#10;IF [Calculation_1172906285524258816] = &apos;UC Health&apos; AND [FUNCTION_CODE] = &apos;42&apos; THEN &apos;Med Center&apos;&#13;&#10;ELSEIF [Calculation_1172906285524258816] = &apos;UC Health&apos; AND [FUNCTION_CODE] != &apos;42&apos; THEN &apos;Health Sciences&apos;&#13;&#10;END' />
            </column>
            <column caption='Location - Full List' datatype='string' name='[Calculation_145804093765197824]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Location list that includes OP and ANR&#13;&#10;&#13;&#10;IF [Calculation_1016687669559242752] = &apos;UCOP&apos; THEN &apos;OP&apos;&#13;&#10;ELSEIF [Calculation_1016687669559242752] = &apos;ANR&apos; THEN &apos;ANR&apos;&#13;&#10;ELSE [CAMPUS_NAME_ABR]&#13;&#10;END' />
              <aliases>
                <alias key='&quot;ANR&quot;' value='Ag &amp; Nat Resources (ANR)' />
                <alias key='&quot;BK&quot;' value='Berkeley' />
                <alias key='&quot;DV&quot;' value='Davis' />
                <alias key='&quot;IR&quot;' value='Irvine' />
                <alias key='&quot;LA&quot;' value='Los Angeles' />
                <alias key='&quot;MC&quot;' value='Merced' />
                <alias key='&quot;OP&quot;' value='Office of the President &amp; SWP*' />
                <alias key='&quot;RV&quot;' value='Riverside' />
                <alias key='&quot;SB&quot;' value='Santa Barbara' />
                <alias key='&quot;SC&quot;' value='Santa Cruz' />
                <alias key='&quot;SD&quot;' value='San Diego' />
                <alias key='&quot;SF&quot;' value='San Francisco' />
              </aliases>
            </column>
            <column caption='Base FTE' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_752382666467852288]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Filters for only &apos;base FTE&apos;&#13;&#10;&#13;&#10;&#13;&#10;//Applies fix for those at Irvine who received retro-active pay adjustments that were encoded with 1.0 FTE&#13;&#10;// when they should have had 0.0 FTE. We foudn all of the check dates were on the same day and so this allows&#13;&#10;// us to remove the FTE from those lines while retaining the associated pay.&#13;&#10;IF [LOCATION_1] = &apos;09&apos; AND [CHECK_DATE] = DATE(&apos;12/1/2015&apos;) THEN 0&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [Calculation_1016687669560307714] = &apos;Base FTE&apos; THEN [TIME_DISTRIB_ACTUAL]&#13;&#10;END' />
            </column>
            <column caption='Career Status' datatype='string' name='[Calculation_869757736329613312]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [PERS_PGM] = &apos;ACA&apos; THEN &apos;Academic Personnel&apos;&#13;&#10;ELSEIF ([Calculation_946318925060980737] = &apos;2&apos; OR [Calculation_946318925060980737] = &apos;7&apos;) THEN &apos;Career Staff&apos;&#13;&#10;ELSE &apos;Non-Career Staff&apos;&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Personnel Program Split' datatype='string' name='[Calculation_946318925060562944]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// This categorizes employees into a more ganular version of personnel program. Particularly, it breaks&#13;&#10;// managers out from senior professionals in the MSP personnel program. It also breaks students out from the&#13;&#10;// large PSS personnel program. &#13;&#10;// For several years some employees were miscategorized with the CTO of M05, which is used for those in the&#13;&#10;// SMG personnel program when they should have been in the &apos;Managers&apos; CTO of M10, line 5 below fixes this.&#13;&#10;&#13;&#10;IF [PERS_PGM] = &apos;ACA&apos; THEN &apos;Academics&apos;&#13;&#10;ELSEIF [Calculation_946318925060980737] = &apos;4&apos; THEN &apos;Student Staff&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;SMG&apos; THEN &apos;SMG&apos;&#13;&#10;ELSEIF [CTO_FIX] = &apos;M10&apos; THEN &apos;MSP - Managers&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;MSP&apos; AND [CTO_FIX] = &apos;M05&apos; THEN &apos;MSP - Managers&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;MSP&apos; and [CTO_FIX] != &apos;M10&apos; THEN &apos;MSP - Senior Professionals&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;PSS&apos; and [Calculation_946318925060980737] != &apos;4&apos; THEN &apos;PSS - Non Students&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;UNK&apos; THEN &apos;PSS - Non Students&apos;&#13;&#10;END' />
              <aliases>
                <alias key='&quot;MSP - Managers&quot;' value='Managers (M)' />
                <alias key='&quot;MSP - Senior Professionals&quot;' value='Senior Professionals (SP)' />
                <alias key='&quot;PSS - Non Students&quot;' value='Professional &amp; Support Staff (PSS)  - Non Students' />
                <alias key='&quot;SMG&quot;' value='Senior Management Group (SMG)' />
              </aliases>
            </column>
            <column caption='appt type use' datatype='string' name='[Calculation_946318925060980737]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// This code is used if the data has been extracted&#13;&#10;IF [APPT_TYPE_CODE] = &apos; &apos; THEN [APPT_TYPE_CODE_PRI]&#13;&#10;ELSE [APPT_TYPE_CODE]&#13;&#10;END&#13;&#10;&#13;&#10;//    This code is used if the connection to the server is live&#13;&#10;//    IF ISNULL([appt_type_code]) THEN [appt_type_code_pri]&#13;&#10;//    Else [appt_type_code]&#13;&#10;//    END' />
              <aliases>
                <alias key='&quot;1&quot;' value='Contract' />
                <alias key='&quot;2&quot;' value='Career' />
                <alias key='&quot;3&quot;' value='Limited' />
                <alias key='&quot;4&quot;' value='Casual/Restricted (student)' />
                <alias key='&quot;5&quot;' value='Academic' />
                <alias key='&quot;6&quot;' value='Per diem' />
                <alias key='&quot;7&quot;' value='Partial year career' />
                <alias key='&quot;8&quot;' value='Floater' />
              </aliases>
            </column>
            <column datatype='string' name='[DOS_CODE_CPS]' role='dimension' type='nominal' />
            <column datatype='string' name='[EFF_DATE]' role='dimension' type='nominal' />
            <column datatype='string' name='[FUNCTION_CODE]' role='dimension' type='nominal' />
            <column datatype='string' name='[FUND]' role='dimension' type='nominal' />
            <column datatype='string' name='[FUND_GROUP_CODE]' role='dimension' type='nominal' />
            <column caption='Funding Source' datatype='string' name='[Funding Groups (More Granular) (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// This categorizes funds into core and non-core&#13;&#10;&#13;&#10;IF [FUND] = &apos;69085&apos; THEN &apos;Systemwide Assessment&apos;&#13;&#10;&#13;&#10;ELSEIF    (RTRIM([FUND_GROUP_CODE]) = &apos;401&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;402&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40411&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40311&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40312&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403141&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403142&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403143&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403144&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403145&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403146&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403147&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403148&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403149&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40315&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403151&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403152&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403153&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;4032&apos;) THEN &apos;Core Funds&apos;&#13;&#10;ELSE &apos;Non-Core Funds&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[LOCATION_1]' role='dimension' type='nominal' />
            <column datatype='string' name='[LOCATION_2]' role='dimension' type='nominal' />
            <column datatype='string' name='[LOCATION_3]' role='dimension' type='nominal' />
            <column datatype='string' name='[ORG_1_CODE]' role='dimension' type='nominal' />
            <column datatype='string' name='[PERS_PGM]' role='dimension' type='nominal' />
            <column datatype='string' name='[Personnel Program Split (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_946318925060562944]'>
                <bin value='&quot;MSP - Managers&quot;'>
                  <value>&quot;MSP - Managers&quot;</value>
                  <value>&quot;MSP - Senior Professionals&quot;</value>
                  <value>&quot;PSS - Non Students&quot;</value>
                  <value>&quot;SMG&quot;</value>
                  <value>&quot;Student Staff&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;Academics&quot;' value='Academic Personnel' />
                <alias key='&quot;MSP - Managers&quot;' value='Non-Academic Personnel' />
              </aliases>
            </column>
            <column datatype='string' name='[SAU_CODE]' role='dimension' type='nominal' />
            <column datatype='real' name='[TIME_DISTRIB_ACTUAL]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1172906285534130177]' derivation='None' name='[none:Calculation_1172906285534130177:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_145804093765197824]' derivation='None' name='[none:Calculation_145804093765197824:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_869757736329613312]' derivation='None' name='[none:Calculation_869757736329613312:nk]' pivot='key' type='nominal' />
            <column-instance column='[EFF_DATE]' derivation='None' name='[none:EFF_DATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[Funding Groups (More Granular) (copy)]' derivation='None' name='[none:Funding Groups (More Granular) (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_752382666467852288]' derivation='Sum' name='[sum:Calculation_752382666467852288:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[Personnel Program Split (group)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Personnel Program Split (group)]' />
              <groupfilter function='member' level='[Personnel Program Split (group)]' member='&quot;Academics&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ANR&quot;</bucket>
              <bucket>&quot;OP&quot;</bucket>
              <bucket>&quot;MC&quot;</bucket>
              <bucket>&quot;SC&quot;</bucket>
              <bucket>&quot;RV&quot;</bucket>
              <bucket>&quot;SB&quot;</bucket>
              <bucket>&quot;IR&quot;</bucket>
              <bucket>&quot;BK&quot;</bucket>
              <bucket>&quot;SF&quot;</bucket>
              <bucket>&quot;SD&quot;</bucket>
              <bucket>&quot;DV&quot;</bucket>
              <bucket>&quot;LA&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_869757736329613312:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_869757736329613312:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:EFF_DATE:nk]'>
            <groupfilter function='member' level='[none:EFF_DATE:nk]' member='&quot;OCT2015&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:Funding Groups (More Granular) (copy):nk]'>
            <groupfilter function='level-members' level='[none:Funding Groups (More Granular) (copy):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:EFF_DATE:nk]</column>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_869757736329613312:nk]</column>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:Funding Groups (More Granular) (copy):nk]</column>
            <column>[db2.1phqijc054rhev1266iad0956og9].[Personnel Program Split (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[db2.1phqijc054rhev1266iad0956og9].[Personnel Program Split (group)]' value='132' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[db2.1phqijc054rhev1266iad0956og9].[Personnel Program Split (group)]' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-size' value='10' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]' value='Location' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[db2.1phqijc054rhev1266iad0956og9].[sum:Calculation_752382666467852288:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Personnel Program:&#9;</run>
                <run bold='true'>&lt;[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Date:&#9;</run>
                <run bold='true'>&lt;[db2.1phqijc054rhev1266iad0956og9].[none:EFF_DATE:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;FTE:&#9;</run>
                <run bold='true'>&lt;[db2.1phqijc054rhev1266iad0956og9].[sum:Calculation_752382666467852288:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1172906285534130177:nk]</rows>
        <cols>([db2.1phqijc054rhev1266iad0956og9].[none:EFF_DATE:nk] / [db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 12'>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (PERSONNEL)' name='db2.1phqijc054rhev1266iad0956og9' />
          </datasources>
          <datasource-dependencies datasource='db2.1phqijc054rhev1266iad0956og9'>
            <column datatype='string' name='[APPT_TYPE_CODE]' role='dimension' type='nominal' />
            <column datatype='string' name='[APPT_TYPE_CODE_PRI]' role='dimension' type='nominal' />
            <column datatype='string' name='[CAMPUS_NAME_ABR]' role='dimension' type='nominal' />
            <column datatype='string' name='[CTO_FIX]' role='dimension' type='nominal' />
            <column caption='OP ANR Flag' datatype='string' name='[Calculation_1016687669559242752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Pull out OP and ANR employees&#13;&#10;&#13;&#10;IF [LOCATION_2] = &apos;2&apos; AND [SAU_CODE] != &apos;4&apos; THEN &apos;UCOP&apos;&#13;&#10;ELSEIF [LOCATION_2] = &apos;2&apos; and [SAU_CODE] = &apos;4&apos; THEN &apos;ANR&apos;&#13;&#10;ELSE &apos;Other loc&apos;&#13;&#10;END' />
            </column>
            <column caption='Location - Full List' datatype='string' name='[Calculation_145804093765197824]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Location list that includes OP and ANR&#13;&#10;&#13;&#10;IF [Calculation_1016687669559242752] = &apos;UCOP&apos; THEN &apos;OP&apos;&#13;&#10;ELSEIF [Calculation_1016687669559242752] = &apos;ANR&apos; THEN &apos;ANR&apos;&#13;&#10;ELSE [CAMPUS_NAME_ABR]&#13;&#10;END' />
              <aliases>
                <alias key='&quot;ANR&quot;' value='Ag &amp; Nat Resources (ANR)' />
                <alias key='&quot;BK&quot;' value='Berkeley' />
                <alias key='&quot;DV&quot;' value='Davis' />
                <alias key='&quot;IR&quot;' value='Irvine' />
                <alias key='&quot;LA&quot;' value='Los Angeles' />
                <alias key='&quot;MC&quot;' value='Merced' />
                <alias key='&quot;OP&quot;' value='Office of the President &amp; SWP*' />
                <alias key='&quot;RV&quot;' value='Riverside' />
                <alias key='&quot;SB&quot;' value='Santa Barbara' />
                <alias key='&quot;SC&quot;' value='Santa Cruz' />
                <alias key='&quot;SD&quot;' value='San Diego' />
                <alias key='&quot;SF&quot;' value='San Francisco' />
              </aliases>
            </column>
            <column caption='Personnel Program Split' datatype='string' name='[Calculation_946318925060562944]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// This categorizes employees into a more ganular version of personnel program. Particularly, it breaks&#13;&#10;// managers out from senior professionals in the MSP personnel program. It also breaks students out from the&#13;&#10;// large PSS personnel program. &#13;&#10;// For several years some employees were miscategorized with the CTO of M05, which is used for those in the&#13;&#10;// SMG personnel program when they should have been in the &apos;Managers&apos; CTO of M10, line 5 below fixes this.&#13;&#10;&#13;&#10;IF [PERS_PGM] = &apos;ACA&apos; THEN &apos;Academics&apos;&#13;&#10;ELSEIF [Calculation_946318925060980737] = &apos;4&apos; THEN &apos;Student Staff&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;SMG&apos; THEN &apos;SMG&apos;&#13;&#10;ELSEIF [CTO_FIX] = &apos;M10&apos; THEN &apos;MSP - Managers&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;MSP&apos; AND [CTO_FIX] = &apos;M05&apos; THEN &apos;MSP - Managers&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;MSP&apos; and [CTO_FIX] != &apos;M10&apos; THEN &apos;MSP - Senior Professionals&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;PSS&apos; and [Calculation_946318925060980737] != &apos;4&apos; THEN &apos;PSS - Non Students&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;UNK&apos; THEN &apos;PSS - Non Students&apos;&#13;&#10;END' />
              <aliases>
                <alias key='&quot;MSP - Managers&quot;' value='Managers (M)' />
                <alias key='&quot;MSP - Senior Professionals&quot;' value='Senior Professionals (SP)' />
                <alias key='&quot;PSS - Non Students&quot;' value='Professional &amp; Support Staff (PSS)  - Non Students' />
                <alias key='&quot;SMG&quot;' value='Senior Management Group (SMG)' />
              </aliases>
            </column>
            <column caption='appt type use' datatype='string' name='[Calculation_946318925060980737]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// This code is used if the data has been extracted&#13;&#10;IF [APPT_TYPE_CODE] = &apos; &apos; THEN [APPT_TYPE_CODE_PRI]&#13;&#10;ELSE [APPT_TYPE_CODE]&#13;&#10;END&#13;&#10;&#13;&#10;//    This code is used if the connection to the server is live&#13;&#10;//    IF ISNULL([appt_type_code]) THEN [appt_type_code_pri]&#13;&#10;//    Else [appt_type_code]&#13;&#10;//    END' />
              <aliases>
                <alias key='&quot;1&quot;' value='Contract' />
                <alias key='&quot;2&quot;' value='Career' />
                <alias key='&quot;3&quot;' value='Limited' />
                <alias key='&quot;4&quot;' value='Casual/Restricted (student)' />
                <alias key='&quot;5&quot;' value='Academic' />
                <alias key='&quot;6&quot;' value='Per diem' />
                <alias key='&quot;7&quot;' value='Partial year career' />
                <alias key='&quot;8&quot;' value='Floater' />
              </aliases>
            </column>
            <column datatype='string' name='[EFF_DATE]' role='dimension' type='nominal' />
            <column datatype='string' name='[LOCATION_2]' role='dimension' type='nominal' />
            <column datatype='string' name='[PERS_PGM]' role='dimension' type='nominal' />
            <column datatype='string' name='[SAU_CODE]' role='dimension' type='nominal' />
            <column datatype='real' name='[TIME_DISTRIB_ACTUAL]' role='measure' type='quantitative' />
            <column datatype='string' name='[TITLE_CODE]' role='dimension' type='nominal' />
            <column-instance column='[CTO_FIX]' derivation='None' name='[none:CTO_FIX:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_145804093765197824]' derivation='None' name='[none:Calculation_145804093765197824:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_946318925060562944]' derivation='None' name='[none:Calculation_946318925060562944:nk]' pivot='key' type='nominal' />
            <column-instance column='[EFF_DATE]' derivation='None' name='[none:EFF_DATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[PERS_PGM]' derivation='None' name='[none:PERS_PGM:nk]' pivot='key' type='nominal' />
            <column-instance column='[TITLE_CODE]' derivation='None' name='[none:TITLE_CODE:nk]' pivot='key' type='nominal' />
            <column-instance column='[TIME_DISTRIB_ACTUAL]' derivation='Sum' name='[sum:TIME_DISTRIB_ACTUAL:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]'>
            <groupfilter function='member' level='[none:Calculation_145804093765197824:nk]' member='&quot;BK&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_946318925060562944:nk]' member='&quot;MSP - Managers&quot;' />
              <groupfilter function='member' level='[none:Calculation_946318925060562944:nk]' member='&quot;MSP - Senior Professionals&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:EFF_DATE:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:EFF_DATE:nk]' member='&quot;OCT2008&quot;' />
              <groupfilter function='member' level='[none:EFF_DATE:nk]' member='&quot;OCT2009&quot;' />
              <groupfilter function='member' level='[none:EFF_DATE:nk]' member='&quot;OCT2010&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:PERS_PGM:nk]'>
            <groupfilter from='&quot;MSP&quot;' function='range' level='[none:PERS_PGM:nk]' to='&quot;UNK&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:TITLE_CODE:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000212&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000213&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000214&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000215&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000218&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000219&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000220&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000221&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000276&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000277&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000278&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000297&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000298&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000299&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000300&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000301&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000302&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000303&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000304&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000305&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000307&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000308&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000309&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000310&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000311&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000312&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000313&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000314&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000315&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000316&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000317&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000318&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000319&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000320&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000321&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000322&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000323&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000324&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000325&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000327&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000328&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000329&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000330&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000334&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000335&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000336&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000337&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000344&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000349&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000350&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000351&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000352&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000359&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000360&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000361&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000371&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000372&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000373&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000375&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000376&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000377&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000380&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000381&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000382&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000383&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000384&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000385&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000386&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000388&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000389&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000390&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000391&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000392&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000393&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000394&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000395&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000396&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000398&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000403&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000404&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000405&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000408&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000409&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000410&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000411&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000412&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000413&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000414&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000415&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000417&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000418&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000419&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000421&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000422&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000423&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000424&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000426&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000427&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000429&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000430&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000431&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000436&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000437&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000439&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000440&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000441&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000444&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000445&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000457&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000458&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000459&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000460&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000464&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000465&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000466&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000467&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000468&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000471&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000472&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000473&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000474&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000475&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000478&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000479&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000481&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000482&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000483&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000485&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000487&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000493&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000494&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000496&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000498&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000515&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000517&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000518&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000519&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000524&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000525&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000535&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000538&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000541&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000542&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000543&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000547&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000548&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000549&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000550&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000552&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000553&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000556&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000559&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000561&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000564&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000565&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000567&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000568&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000569&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000570&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000572&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000573&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000574&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000575&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000576&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000578&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000580&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000581&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000582&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000586&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000587&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000588&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000590&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000591&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000592&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000594&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000595&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000596&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000605&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000606&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000607&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000608&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000609&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000610&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000614&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000616&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000617&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000618&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000621&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000622&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000624&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000625&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000626&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000627&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000629&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000630&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000631&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000649&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000650&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000651&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000656&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000666&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000667&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000668&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000669&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000670&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000671&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000672&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000673&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000675&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000676&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000677&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000678&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000679&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000680&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000681&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000682&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000685&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000686&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000687&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000688&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;000798&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;005906&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;005946&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;005950&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;005951&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;005952&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;005954&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;005957&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;005958&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;005959&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;005960&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;005963&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;005965&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;005966&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;005967&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;005977&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;005978&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;005979&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;005991&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;006029&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;006030&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;006031&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;006057&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;006058&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;006059&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;006083&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;006085&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;006563&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;006564&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;006565&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;006566&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;006613&quot;' />
              <groupfilter function='member' level='[none:TITLE_CODE:nk]' member='&quot;006614&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:EFF_DATE:nk]</column>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]</column>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:PERS_PGM:nk]</column>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]</column>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:TITLE_CODE:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[db2.1phqijc054rhev1266iad0956og9].[sum:TIME_DISTRIB_ACTUAL:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[db2.1phqijc054rhev1266iad0956og9].[none:CTO_FIX:nk]</rows>
        <cols>[db2.1phqijc054rhev1266iad0956og9].[none:EFF_DATE:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 13'>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (PERSONNEL)' name='db2.1phqijc054rhev1266iad0956og9' />
          </datasources>
          <datasource-dependencies datasource='db2.1phqijc054rhev1266iad0956og9'>
            <column datatype='string' name='[CAMPUS_NAME_ABR]' role='dimension' type='nominal' />
            <column datatype='date' name='[CHECK_DATE]' role='dimension' type='ordinal' />
            <column caption='OP ANR Flag' datatype='string' name='[Calculation_1016687669559242752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Pull out OP and ANR employees&#13;&#10;&#13;&#10;IF [LOCATION_2] = &apos;2&apos; AND [SAU_CODE] != &apos;4&apos; THEN &apos;UCOP&apos;&#13;&#10;ELSEIF [LOCATION_2] = &apos;2&apos; and [SAU_CODE] = &apos;4&apos; THEN &apos;ANR&apos;&#13;&#10;ELSE &apos;Other loc&apos;&#13;&#10;END' />
            </column>
            <column caption='Base FTE flag' datatype='string' name='[Calculation_1016687669560307714]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Filters out non-base FTE using description of service (DOS) codes.&#13;&#10;&#13;&#10;IF [DOS_CODE_CPS] = &apos;AV&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;AW&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;AX&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;AM&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;HR&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;HD&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSEIF [DOS_CODE_CPS] = &apos;HY&apos; THEN &apos;Base FTE&apos;&#13;&#10;ELSE &apos;Other FTE&apos;&#13;&#10;END' />
            </column>
            <column caption='Location - Full List' datatype='string' name='[Calculation_145804093765197824]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Location list that includes OP and ANR&#13;&#10;&#13;&#10;IF [Calculation_1016687669559242752] = &apos;UCOP&apos; THEN &apos;OP&apos;&#13;&#10;ELSEIF [Calculation_1016687669559242752] = &apos;ANR&apos; THEN &apos;ANR&apos;&#13;&#10;ELSE [CAMPUS_NAME_ABR]&#13;&#10;END' />
              <aliases>
                <alias key='&quot;ANR&quot;' value='Ag &amp; Nat Resources (ANR)' />
                <alias key='&quot;BK&quot;' value='Berkeley' />
                <alias key='&quot;DV&quot;' value='Davis' />
                <alias key='&quot;IR&quot;' value='Irvine' />
                <alias key='&quot;LA&quot;' value='Los Angeles' />
                <alias key='&quot;MC&quot;' value='Merced' />
                <alias key='&quot;OP&quot;' value='Office of the President &amp; SWP*' />
                <alias key='&quot;RV&quot;' value='Riverside' />
                <alias key='&quot;SB&quot;' value='Santa Barbara' />
                <alias key='&quot;SC&quot;' value='Santa Cruz' />
                <alias key='&quot;SD&quot;' value='San Diego' />
                <alias key='&quot;SF&quot;' value='San Francisco' />
              </aliases>
            </column>
            <column caption='Base FTE' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_752382666467852288]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Filters for only &apos;base FTE&apos;&#13;&#10;&#13;&#10;&#13;&#10;//Applies fix for those at Irvine who received retro-active pay adjustments that were encoded with 1.0 FTE&#13;&#10;// when they should have had 0.0 FTE. We foudn all of the check dates were on the same day and so this allows&#13;&#10;// us to remove the FTE from those lines while retaining the associated pay.&#13;&#10;IF [LOCATION_1] = &apos;09&apos; AND [CHECK_DATE] = DATE(&apos;12/1/2015&apos;) THEN 0&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [Calculation_1016687669560307714] = &apos;Base FTE&apos; THEN [TIME_DISTRIB_ACTUAL]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[DOS_CODE_CPS]' role='dimension' type='nominal' />
            <column datatype='string' name='[EFF_DATE]' role='dimension' type='nominal' />
            <column datatype='string' name='[LOCATION_1]' role='dimension' type='nominal' />
            <column datatype='string' name='[LOCATION_2]' role='dimension' type='nominal' />
            <column datatype='string' name='[ORG_2_CODE]' role='dimension' type='nominal' />
            <column datatype='string' name='[ORG_2_TITLE]' role='dimension' type='nominal' />
            <column datatype='string' name='[SAU_CODE]' role='dimension' type='nominal' />
            <column datatype='real' name='[TIME_DISTRIB_ACTUAL]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_145804093765197824]' derivation='None' name='[none:Calculation_145804093765197824:nk]' pivot='key' type='nominal' />
            <column-instance column='[EFF_DATE]' derivation='None' name='[none:EFF_DATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[ORG_2_CODE]' derivation='None' name='[none:ORG_2_CODE:nk]' pivot='key' type='nominal' />
            <column-instance column='[ORG_2_TITLE]' derivation='None' name='[none:ORG_2_TITLE:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_752382666467852288]' derivation='Sum' name='[sum:Calculation_752382666467852288:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]'>
            <groupfilter function='member' level='[none:Calculation_145804093765197824:nk]' member='&quot;OP&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:EFF_DATE:nk]'>
            <groupfilter function='member' level='[none:EFF_DATE:nk]' member='&quot;OCT2015&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[db2.1phqijc054rhev1266iad0956og9].[none:ORG_2_CODE:nk]' direction='ASC' />
          <slices>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]</column>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:EFF_DATE:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[db2.1phqijc054rhev1266iad0956og9].[sum:Calculation_752382666467852288:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([db2.1phqijc054rhev1266iad0956og9].[none:ORG_2_CODE:nk] / [db2.1phqijc054rhev1266iad0956og9].[none:ORG_2_TITLE:nk])</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='16'>Staff FTE Data Table</run>
            <run>&#10;October CPS Snapshot Data</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>This table shows all earnings divided by all FTE averaged and then annualized from October snapshot data</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (PERSONNEL)' name='db2.1phqijc054rhev1266iad0956og9' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='(All)' caption='Service Focus' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='(All)' />
                <alias key='&quot;Health Sciences&quot;' value='--- Health Sciences' />
                <alias key='&quot;Med Center&quot;' value='--- Med Center' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='db2.1phqijc054rhev1266iad0956og9'>
            <column datatype='string' name='[APPT_TYPE_CODE]' role='dimension' type='nominal' />
            <column datatype='string' name='[APPT_TYPE_CODE_PRI]' role='dimension' type='nominal' />
            <column datatype='string' name='[CAMPUS_NAME_ABR]' role='dimension' type='nominal' />
            <column datatype='string' name='[CTO_FIX]' role='dimension' type='nominal' />
            <column caption='OP ANR Flag' datatype='string' name='[Calculation_1016687669559242752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Pull out OP and ANR employees&#13;&#10;&#13;&#10;IF [LOCATION_2] = &apos;2&apos; AND [SAU_CODE] != &apos;4&apos; THEN &apos;UCOP&apos;&#13;&#10;ELSEIF [LOCATION_2] = &apos;2&apos; and [SAU_CODE] = &apos;4&apos; THEN &apos;ANR&apos;&#13;&#10;ELSE &apos;Other loc&apos;&#13;&#10;END' />
            </column>
            <column caption='Calculation3' datatype='real' name='[Calculation_1110137365823213568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([GROSS_EARNINGS_PAY_PER])/sum([TIME_DISTRIB_ACTUAL])) *12' />
            </column>
            <column caption='General Campus/Health Sci' datatype='string' name='[Calculation_1172906285524258816]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// There are sometimes issues with how the campuses encode their data for location_3, which is what we use&#13;&#10;// to track those in the UC health umberella. To remedy this, one can look at the org_1_code and org_1_title &#13;&#10;//fields to see if there were errors. In the cases below, we could tell location_3 was not correct by looking &#13;&#10;//at the org_1 titles. If an org title indicated a medical school or some other health science area and it was &#13;&#10;// categorized into general campus, we capture that and make sure it correctly categorized into health&#13;&#10;&#13;&#10;// Fixes for Irvine&#13;&#10;&#13;&#10;IF  [LOCATION_3] = &apos;2&apos; THEN &apos;UC Health&apos;&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;09&apos;) &#13;&#10;    AND ((RTRIM([ORG_1_CODE]) = &apos;99030&apos;) &#13;&#10;    OR (RTRIM([ORG_1_CODE]) = &apos;9MEDC&apos;) &#13;&#10;    OR (RTRIM([ORG_1_CODE]) = &apos;92000&apos;))&#13;&#10;THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;// Fixes for Riverside&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;05&apos; AND RTRIM([ORG_1_CODE]) = &apos;5ORG40&apos;) THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;// Fixes for Los Angeles&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;04&apos;) &#13;&#10;    AND ((RTRIM([ORG_1_CODE]) = &apos;44000&apos;) &#13;&#10;    OR (RTRIM([ORG_1_CODE]) = &apos;42200&apos;)&#13;&#10;    OR (RTRIM([ORG_1_CODE]) = &apos;43200&apos;))&#13;&#10;THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;// Fixes for San Diego&#13;&#10;ELSEIF ([LOCATION_3] = &apos;1&apos; AND [LOCATION_1] = &apos;06&apos;) AND &#13;&#10;    ((RTRIM([ORG_1_CODE]) = &apos;6000003&apos;) &#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;6     3&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;6000005&apos;) &#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;6     5&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;60003&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;60008&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;6000008&apos;)&#13;&#10;        OR (RTRIM([ORG_1_CODE]) = &apos;60005&apos;)&#13;&#10;)&#13;&#10;THEN &apos;UC Health&apos;&#13;&#10;&#13;&#10;ELSE &apos;General Campus&apos;&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Health Breakout' datatype='string' name='[Calculation_1172906285534130177]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Breaks out medical centers and health sciences from overal UC health&#13;&#10;&#13;&#10;IF [Calculation_1172906285524258816] = &apos;UC Health&apos; AND [FUNCTION_CODE] = &apos;42&apos; THEN &apos;Med Center&apos;&#13;&#10;ELSEIF [Calculation_1172906285524258816] = &apos;UC Health&apos; AND [FUNCTION_CODE] != &apos;42&apos; THEN &apos;Health Sciences&apos;&#13;&#10;END' />
            </column>
            <column caption='Service Focus Filter' datatype='string' name='[Calculation_1172906285535813634]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Used to facilitate the filtering of the health sciences breakout.&#13;&#10;&#13;&#10;IF &#13;&#10;    [Parameters].[Parameter 2] = [Calculation_1172906285534130177] &#13;&#10;THEN &#13;&#10;    &quot;Show&quot;&#13;&#10;ELSEIF &#13;&#10;    [Parameters].[Parameter 2] = [Calculation_1172906285524258816] &#13;&#10;THEN &#13;&#10;    &quot;Show&quot;&#13;&#10;ELSEIF &#13;&#10;    [Parameters].[Parameter 2] = &apos;All&apos; THEN &apos;Show&apos;&#13;&#10;END' />
            </column>
            <column caption='Location - Full List' datatype='string' name='[Calculation_145804093765197824]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Location list that includes OP and ANR&#13;&#10;&#13;&#10;IF [Calculation_1016687669559242752] = &apos;UCOP&apos; THEN &apos;OP&apos;&#13;&#10;ELSEIF [Calculation_1016687669559242752] = &apos;ANR&apos; THEN &apos;ANR&apos;&#13;&#10;ELSE [CAMPUS_NAME_ABR]&#13;&#10;END' />
              <aliases>
                <alias key='&quot;ANR&quot;' value='Ag &amp; Nat Resources (ANR)' />
                <alias key='&quot;BK&quot;' value='Berkeley' />
                <alias key='&quot;DV&quot;' value='Davis' />
                <alias key='&quot;IR&quot;' value='Irvine' />
                <alias key='&quot;LA&quot;' value='Los Angeles' />
                <alias key='&quot;MC&quot;' value='Merced' />
                <alias key='&quot;OP&quot;' value='Office of the President &amp; SWP*' />
                <alias key='&quot;RV&quot;' value='Riverside' />
                <alias key='&quot;SB&quot;' value='Santa Barbara' />
                <alias key='&quot;SC&quot;' value='Santa Cruz' />
                <alias key='&quot;SD&quot;' value='San Diego' />
                <alias key='&quot;SF&quot;' value='San Francisco' />
              </aliases>
            </column>
            <column caption='Funding Source (More Granular)' datatype='string' name='[Calculation_145804093768806401]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// This categorizes funds into core and non-core in a more granular way&#13;&#10;&#13;&#10;IF (RTRIM([FUND_GROUP_CODE]) = &apos;401&apos;&#13;&#10;OR RTRIM([FUND_GROUP_CODE]) = &apos;402&apos;&#13;&#10;OR RTRIM([FUND_GROUP_CODE]) = &apos;40411&apos;) THEN &apos;General Funds (Core)&apos;&#13;&#10;ELSEIF (RTRIM([FUND_GROUP_CODE]) = &apos;40311&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40312&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403141&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403142&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403143&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403144&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403145&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403146&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403147&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403148&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403149&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40315&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403151&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403152&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403153&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;4032&apos;) THEN &apos;Other Core Funds&apos;&#13;&#10;ELSE &apos;Non-Core Funds&apos;&#13;&#10;END' />
            </column>
            <column caption='Personnel Program Split' datatype='string' name='[Calculation_946318925060562944]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// This categorizes employees into a more ganular version of personnel program. Particularly, it breaks&#13;&#10;// managers out from senior professionals in the MSP personnel program. It also breaks students out from the&#13;&#10;// large PSS personnel program. &#13;&#10;// For several years some employees were miscategorized with the CTO of M05, which is used for those in the&#13;&#10;// SMG personnel program when they should have been in the &apos;Managers&apos; CTO of M10, line 5 below fixes this.&#13;&#10;&#13;&#10;IF [PERS_PGM] = &apos;ACA&apos; THEN &apos;Academics&apos;&#13;&#10;ELSEIF [Calculation_946318925060980737] = &apos;4&apos; THEN &apos;Student Staff&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;SMG&apos; THEN &apos;SMG&apos;&#13;&#10;ELSEIF [CTO_FIX] = &apos;M10&apos; THEN &apos;MSP - Managers&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;MSP&apos; AND [CTO_FIX] = &apos;M05&apos; THEN &apos;MSP - Managers&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;MSP&apos; and [CTO_FIX] != &apos;M10&apos; THEN &apos;MSP - Senior Professionals&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;PSS&apos; and [Calculation_946318925060980737] != &apos;4&apos; THEN &apos;PSS - Non Students&apos;&#13;&#10;ELSEIF [PERS_PGM] = &apos;UNK&apos; THEN &apos;PSS - Non Students&apos;&#13;&#10;END' />
              <aliases>
                <alias key='&quot;MSP - Managers&quot;' value='Managers (M)' />
                <alias key='&quot;MSP - Senior Professionals&quot;' value='Senior Professionals (SP)' />
                <alias key='&quot;PSS - Non Students&quot;' value='Professional &amp; Support Staff (PSS)  - Non Students' />
                <alias key='&quot;SMG&quot;' value='Senior Management Group (SMG)' />
              </aliases>
            </column>
            <column caption='appt type use' datatype='string' name='[Calculation_946318925060980737]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// This code is used if the data has been extracted&#13;&#10;IF [APPT_TYPE_CODE] = &apos; &apos; THEN [APPT_TYPE_CODE_PRI]&#13;&#10;ELSE [APPT_TYPE_CODE]&#13;&#10;END&#13;&#10;&#13;&#10;//    This code is used if the connection to the server is live&#13;&#10;//    IF ISNULL([appt_type_code]) THEN [appt_type_code_pri]&#13;&#10;//    Else [appt_type_code]&#13;&#10;//    END' />
              <aliases>
                <alias key='&quot;1&quot;' value='Contract' />
                <alias key='&quot;2&quot;' value='Career' />
                <alias key='&quot;3&quot;' value='Limited' />
                <alias key='&quot;4&quot;' value='Casual/Restricted (student)' />
                <alias key='&quot;5&quot;' value='Academic' />
                <alias key='&quot;6&quot;' value='Per diem' />
                <alias key='&quot;7&quot;' value='Partial year career' />
                <alias key='&quot;8&quot;' value='Floater' />
              </aliases>
            </column>
            <column datatype='string' name='[EFF_DATE]' role='dimension' type='nominal' />
            <column datatype='string' name='[FUNCTION_CODE]' role='dimension' type='nominal' />
            <column datatype='string' name='[FUND_GROUP_CODE]' role='dimension' type='nominal' />
            <column datatype='real' name='[GROSS_EARNINGS_PAY_PER]' role='measure' type='quantitative' />
            <column datatype='string' name='[LOCATION_1]' role='dimension' type='nominal' />
            <column datatype='string' name='[LOCATION_2]' role='dimension' type='nominal' />
            <column datatype='string' name='[LOCATION_3]' role='dimension' type='nominal' />
            <column datatype='string' name='[ORG_1_CODE]' role='dimension' type='nominal' />
            <column datatype='string' name='[PERS_PGM]' role='dimension' type='nominal' />
            <column datatype='string' name='[SAU_CODE]' role='dimension' type='nominal' />
            <column datatype='real' name='[TIME_DISTRIB_ACTUAL]' role='measure' type='quantitative' />
            <column datatype='string' name='[appt type use (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_946318925060980737]'>
                <bin value='&quot; &quot;'>
                  <value>&quot; &quot;</value>
                  <value>&quot;1&quot;</value>
                  <value>&quot;3&quot;</value>
                  <value>&quot;4&quot;</value>
                  <value>&quot;5&quot;</value>
                  <value>&quot;6&quot;</value>
                  <value>&quot;8&quot;</value>
                </bin>
                <bin value='&quot;2&quot;'>
                  <value>&quot;2&quot;</value>
                  <value>&quot;7&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot; &quot;' value='Non-Career' />
                <alias key='&quot;2&quot;' value='Career' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1172906285535813634]' derivation='None' name='[none:Calculation_1172906285535813634:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_145804093765197824]' derivation='None' name='[none:Calculation_145804093765197824:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_145804093768806401]' derivation='None' name='[none:Calculation_145804093768806401:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_946318925060562944]' derivation='None' name='[none:Calculation_946318925060562944:nk]' pivot='key' type='nominal' />
            <column-instance column='[EFF_DATE]' derivation='None' name='[none:EFF_DATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1110137365823213568]' derivation='User' name='[usr:Calculation_1110137365823213568:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[appt type use (group)]'>
            <groupfilter function='level-members' level='[appt type use (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1172906285535813634:nk]'>
            <groupfilter function='member' level='[none:Calculation_1172906285535813634:nk]' member='&quot;Show&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_145804093765197824:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093768806401:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_145804093768806401:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;SMG&quot;</bucket>
              <bucket>&quot;MSP - Managers&quot;</bucket>
              <bucket>&quot;MSP - Senior Professionals&quot;</bucket>
              <bucket>&quot;PSS - Non Students&quot;</bucket>
              <bucket>&quot;Student Staff&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]</column>
            <column>[db2.1phqijc054rhev1266iad0956og9].[appt type use (group)]</column>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093768806401:nk]</column>
            <column>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1172906285535813634:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]' value='132' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-size' value='10' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[db2.1phqijc054rhev1266iad0956og9].[appt type use (group)]' value='Career Status' />
            <format attr='title' field='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]' value='Location' />
            <format attr='title' field='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093768806401:nk]' value='Funding Source'>
              <formatted-text>
                <run>Funding Source</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[db2.1phqijc054rhev1266iad0956og9].[usr:Calculation_1110137365823213568:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Personnel Program:&#9;</run>
                <run bold='true'>&lt;[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Date:&#9;</run>
                <run bold='true'>&lt;[db2.1phqijc054rhev1266iad0956og9].[none:EFF_DATE:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Dollars or FTE:&#9;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]</rows>
        <cols>[db2.1phqijc054rhev1266iad0956og9].[none:EFF_DATE:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='CTO Occupation'>
      <style />
      <size maxheight='1100' maxwidth='1000' minheight='1100' minwidth='1000' />
      <datasources>
        <datasource caption='Custom SQL Query (PERSONNEL)' name='db2.1phqijc054rhev1266iad0956og9' />
      </datasources>
      <datasource-dependencies datasource='db2.1phqijc054rhev1266iad0956og9'>
        <column datatype='string' name='[CLASS_TTL_OUTL_CODE_APPT1]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot; &quot;' value='Non Classified' />
            <alias key='&quot;0&quot;' value='0 - Faculty  - Ladder Ranks' />
            <alias key='&quot;1&quot;' value='1 - Faculty - Acting Ranks' />
            <alias key='&quot;2&quot;' value='2 - Lecturers' />
            <alias key='&quot;3&quot;' value='3 - Additional Faculty' />
            <alias key='&quot;4&quot;' value='4 - Student Assistants' />
            <alias key='&quot;5&quot;' value='5 - Researchers' />
            <alias key='&quot;6&quot;' value='6 - Librarians' />
            <alias key='&quot;7&quot;' value='7 - Cooperative Extension' />
            <alias key='&quot;8&quot;' value='8 - University Extension' />
            <alias key='&quot;9&quot;' value='9 - Other Academic Personnel' />
            <alias key='&quot;A&quot;' value='A - Student Services' />
            <alias key='&quot;B&quot;' value='B - Clerical and Allied Services' />
            <alias key='&quot;C&quot;' value='C - Food and Linen Services' />
            <alias key='&quot;D&quot;' value='D - Communication, Arts and Graphics' />
            <alias key='&quot;E&quot;' value='E - Architechture, Engineering and Allied Services' />
            <alias key='&quot;F&quot;' value='F - Fiscal Management and Staff Services' />
            <alias key='&quot;G&quot;' value='G - Maintenance, Fabrication and Operations' />
            <alias key='&quot;H&quot;' value='H - Health Care and Allied Services' />
            <alias key='&quot;I&quot;' value='I - Sciences, Laboratory and Allied Services' />
            <alias key='&quot;J&quot;' value='J - Protective Services' />
            <alias key='&quot;M&quot;' value='M - Management' />
            <alias key='&quot;S&quot;' value='S - Academic Administrative Officers' />
            <alias key='&quot;Z&quot;' value='Z - Other' />
          </aliases>
        </column>
        <column caption='Location - Full List' datatype='string' name='[Calculation_145804093765197824]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='// Location list that includes OP and ANR&#13;&#10;&#13;&#10;IF [Calculation_1016687669559242752] = &apos;UCOP&apos; THEN &apos;OP&apos;&#13;&#10;ELSEIF [Calculation_1016687669559242752] = &apos;ANR&apos; THEN &apos;ANR&apos;&#13;&#10;ELSE [CAMPUS_NAME_ABR]&#13;&#10;END' />
          <aliases>
            <alias key='&quot;ANR&quot;' value='Ag &amp; Nat Resources (ANR)' />
            <alias key='&quot;BK&quot;' value='Berkeley' />
            <alias key='&quot;DV&quot;' value='Davis' />
            <alias key='&quot;IR&quot;' value='Irvine' />
            <alias key='&quot;LA&quot;' value='Los Angeles' />
            <alias key='&quot;MC&quot;' value='Merced' />
            <alias key='&quot;OP&quot;' value='Office of the President &amp; SWP*' />
            <alias key='&quot;RV&quot;' value='Riverside' />
            <alias key='&quot;SB&quot;' value='Santa Barbara' />
            <alias key='&quot;SC&quot;' value='Santa Cruz' />
            <alias key='&quot;SD&quot;' value='San Diego' />
            <alias key='&quot;SF&quot;' value='San Francisco' />
          </aliases>
        </column>
        <column caption='Career Status' datatype='string' name='[Calculation_869757736329613312]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF [PERS_PGM] = &apos;ACA&apos; THEN &apos;Academic Personnel&apos;&#13;&#10;ELSEIF ([Calculation_946318925060980737] = &apos;2&apos; OR [Calculation_946318925060980737] = &apos;7&apos;) THEN &apos;Career Staff&apos;&#13;&#10;ELSE &apos;Non-Career Staff&apos;&#13;&#10;&#13;&#10;END' />
        </column>
        <column caption='Funding Source' datatype='string' name='[Funding Groups (More Granular) (copy)]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='// This categorizes funds into core and non-core&#13;&#10;&#13;&#10;IF [FUND] = &apos;69085&apos; THEN &apos;Systemwide Assessment&apos;&#13;&#10;&#13;&#10;ELSEIF    (RTRIM([FUND_GROUP_CODE]) = &apos;401&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;402&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40411&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40311&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40312&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403141&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403142&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403143&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403144&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403145&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403146&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403147&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403148&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403149&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40315&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403151&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403152&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403153&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;4032&apos;) THEN &apos;Core Funds&apos;&#13;&#10;ELSE &apos;Non-Core Funds&apos;&#13;&#10;END' />
        </column>
        <column caption='Job Family' datatype='string' name='[Job Family - original (copy)]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='// This categorizes employees into different job families which were put together by Charles Masten for our&#13;&#10;// &apos;9-pager&apos; report.&#13;&#10;&#13;&#10;IF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and (      [CLASS_TTL_OUTL_CODE_APPT] = &apos;A10&apos; &#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A15&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A20&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A25&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A30&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;A35&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;C10&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;C15&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;C20&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;C30&apos;&#13;&#10;) THEN &quot;Student Services (including Health, Housing, and Dining)&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;       and(    [CLASS_TTL_OUTL_CODE_APPT] = &apos;H10&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H15&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H20&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H25&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H30&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H35&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H40&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H45&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H50&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H55&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H60&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H65&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H70&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H75&apos;&#13;&#10;            OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;H80&apos;&#13;&#10;) THEN &quot;UC Health&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and [CLASS_TTL_OUTL_CODE_APPT] = &apos;F20&apos; &#13;&#10;    THEN &quot;Administrative Analysis&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and &#13;&#10;        ([CLASS_TTL_OUTL_CODE_APPT] = &apos;B15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;B20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;B40&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;B30&apos;)&#13;&#10;    THEN &quot;Clerical &amp; Allied Services&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and [CLASS_TTL_OUTL_CODE_APPT] = &apos;F15&apos;&#13;&#10;    THEN &quot;Computer Programming and Analysis&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and ([CLASS_TTL_OUTL_CODE_APPT] = &apos;E10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;E15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;E20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G23&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G25&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G33&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G35&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G40&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G45&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G55&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G65&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G75&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;G80&apos;)&#13;&#10;    THEN &quot;Arch./Engineering/Maint &amp; Plant Operations&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_946318925060562944] != &apos;Student Staff&apos; &#13;&#10;    and ([CLASS_TTL_OUTL_CODE_APPT] = &apos;D10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;D15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;D25&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F30&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F35&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F40&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;F45&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;I10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;I15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;I20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;I25&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;J10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;J15&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;M20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;Z10&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;Z20&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;Z25&apos;&#13;&#10;        OR [CLASS_TTL_OUTL_CODE_APPT] = &apos;   &apos;)&#13;&#10;    THEN &quot;All Others (Laboratory, Comm. &amp; Fiscal Serv)&quot;&#13;&#10;ELSE &apos;Uncategorized&apos;&#13;&#10;END' />
        </column>
        <column-instance column='[CLASS_TTL_OUTL_CODE_APPT1]' derivation='None' name='[none:CLASS_TTL_OUTL_CODE_APPT1:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_145804093765197824]' derivation='None' name='[none:Calculation_145804093765197824:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_869757736329613312]' derivation='None' name='[none:Calculation_869757736329613312:nk]' pivot='key' type='nominal' />
        <column-instance column='[Funding Groups (More Granular) (copy)]' derivation='None' name='[none:Funding Groups (More Granular) (copy):nk]' pivot='key' type='nominal' />
        <column-instance column='[Job Family - original (copy)]' derivation='None' name='[none:Job Family - original (copy):nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='63600' id='14' param='horz' type='layout-flow' w='100000' x='0' y='10300'>
            <zone h='63600' id='11' param='horz' type='layout-flow' w='99600' x='0' y='10300'>
              <zone h='63600' id='5' param='horz' type='layout-flow' w='99600' x='0' y='10300'>
                <zone h='63600' id='3' type='layout-basic' w='99600' x='0' y='10300'>
                  <zone h='57636' id='1' name='CTO Pri' show-title='true' w='99600' x='0' y='16264' />
                  <zone h='5964' id='6' mode='dropdown' name='CTO Pri' param='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]' type='filter' w='17300' x='0' y='10300' />
                  <zone h='5964' id='7' mode='dropdown' name='CTO Pri' param='[db2.1phqijc054rhev1266iad0956og9].[none:Funding Groups (More Granular) (copy):nk]' type='filter' w='16000' x='17300' y='10300' />
                  <zone h='5964' id='8' mode='dropdown' name='CTO Pri' param='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_869757736329613312:nk]' type='filter' w='16600' x='50000' y='10300' />
                  <zone custom-title='true' h='5964' id='9' mode='compact' param='[Parameters].[Parameter 2]' type='paramctrl' w='16700' x='33300' y='10300'>
                    <formatted-text>
                      <run fontcolor='#000000' fontsize='10'>Service Focus</run>
                    </formatted-text>
                  </zone>
                  <zone fixed-size='160' h='5964' id='13' is-fixed='true' param='vert' type='layout-flow' w='16499' x='83101' y='10300'>
                    <zone h='4546' id='15' mode='dropdown' name='CTO Pri' param='[db2.1phqijc054rhev1266iad0956og9].[none:Job Family - original (copy):nk]' type='filter' w='16499' x='83101' y='10300' />
                  </zone>
                  <zone h='5964' id='18' mode='dropdown' name='CTO Pri' param='[db2.1phqijc054rhev1266iad0956og9].[none:CLASS_TTL_OUTL_CODE_APPT1:nk]' type='filter' w='16501' x='66600' y='10300' />
                </zone>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='10300' id='16' type='text' w='100000' x='0' y='0'>
            <formatted-text>
              <run fontcolor='#000000' fontsize='11'>Changes in staffing levels at UC reflect growth in enrollment, research activity and health science services have been accompanied by a long term-trend toward increased professionalization of the workforce. Between 2007-08 and 2015-16, enrollment grew by 15%, research expenditures (through 2014-15) grew by an inflation-adjusted 9% and medical center expenditures (through 2014-15) grew by an inflation-adjusted 46%. Additional information on staffing trends at UC can be found in the Topic Brief “Employee Trends at UC: Focus on Staff” </run>
              <run auto-url='true' fontcolor='#000000' fontsize='11' hyperlink='tabdoc:load-url url=&amp;quot;http://www.ucop.edu/institutional-research-academic-planning/_files/employee_trends_at_UC.pdf&amp;quot;'>http://www.ucop.edu/institutional-research-academic-planning/_files/employee_trends_at_UC.pdf</run>
            </formatted-text>
          </zone>
          <zone forceUpdate='true' h='26100' id='17' type='text' w='100000' x='0' y='73900'>
            <formatted-text>
              <run fontcolor='#000000' fontsize='8' italic='true'>Data Source: Corporate Personnel Data Warehouse, October Snapshot Files&#10;</run>
              <run bold='true' fontcolor='#000000' fontsize='10'>&#10;Notes:</run>
              <run fontcolor='#000000' fontsize='10'>&#10;1. SWP = Systemwide Programs&#10;2. PSS = Professional and Support Staff&#10;3. ANR = Agriculture and Natural Resources&#10;4. Core funds include state &amp; UC general funds and tuition &amp; fees. Non-core funds include revenues from medical centers, auxiliary enterprises, research grants &amp; contracts, private support and other sources. Systemwide Assessment is a recent budgeting initiative to fund systemwide programs and services that are located at the Office of the President and throughout the state.&#10;5. Systemwide programs include the Education Abroad Program (EAP), UC Washington Center (UCDC), Casa de California and similar programs.&#10;6. FTE shown is “base FTE”. Base FTE is created by filtering for only those who have FTE under the following CPS description of service (DOS) codes: AV – regular pay, AM – leave with pay, AW – sabbatical leave – in residence, AX – sabbatical leave – not in residence, HD – health sciences comp plan – base pay, HR – regular pay – health sciences and HY – health sciences comp plan – negotiated component.&#10;7. In 2010, UC re-categorized some academic administrators (mostly deans) from SMG staff to academics. &#10;8. Additional information on data treatment can be found in the notes to the IRAP Topic Brief </run>
              <run auto-url='true' fontcolor='#000000' fontsize='11' hyperlink='tabdoc:load-url url=&amp;quot;http://www.ucop.edu/institutional-research-academic-planning/_files/employee_trends_at_UC.pdf&amp;quot;'>http://www.ucop.edu/institutional-research-academic-planning/_files/employee_trends_at_UC.pdf</run>
            </formatted-text>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Emp FTE'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone forceUpdate='true' h='100000' id='1' type='text' w='100000' x='0' y='0'>
            <formatted-text>
              <run fontalignment='1' fontcolor='#000000' fontsize='20'>Employee FTE data will be available shortly at this link: </run>
              <run auto-url='true' fontalignment='1' fontcolor='#000000' fontsize='20' hyperlink='tabdoc:load-url url=&amp;quot;&#10;&amp;quot;'>Æ&#10;</run>
              <run auto-url='true' fontalignment='1' fontcolor='#000000' fontsize='20' hyperlink='tabdoc:load-url url=&amp;quot;http://universityofcalifornia.edu/infocenter/employee-fte&amp;quot;' underline='true'>http://universityofcalifornia.edu/infocenter/employee-fte</run>
            </formatted-text>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Emp FTE '>
      <style>
        <style-rule element='parameter-ctrl'>
          <format attr='color' value='#000000' />
          <format attr='font-size' value='9' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Custom SQL Query (PERSONNEL)' name='db2.1phqijc054rhev1266iad0956og9' />
      </datasources>
      <datasource-dependencies datasource='db2.1phqijc054rhev1266iad0956og9'>
        <column caption='Location - Full List' datatype='string' name='[Calculation_145804093765197824]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='// Location list that includes OP and ANR&#13;&#10;&#13;&#10;IF [Calculation_1016687669559242752] = &apos;UCOP&apos; THEN &apos;OP&apos;&#13;&#10;ELSEIF [Calculation_1016687669559242752] = &apos;ANR&apos; THEN &apos;ANR&apos;&#13;&#10;ELSE [CAMPUS_NAME_ABR]&#13;&#10;END' />
          <aliases>
            <alias key='&quot;ANR&quot;' value='Ag &amp; Nat Resources (ANR)' />
            <alias key='&quot;BK&quot;' value='Berkeley' />
            <alias key='&quot;DV&quot;' value='Davis' />
            <alias key='&quot;IR&quot;' value='Irvine' />
            <alias key='&quot;LA&quot;' value='Los Angeles' />
            <alias key='&quot;MC&quot;' value='Merced' />
            <alias key='&quot;OP&quot;' value='Office of the President &amp; SWP*' />
            <alias key='&quot;RV&quot;' value='Riverside' />
            <alias key='&quot;SB&quot;' value='Santa Barbara' />
            <alias key='&quot;SC&quot;' value='Santa Cruz' />
            <alias key='&quot;SD&quot;' value='San Diego' />
            <alias key='&quot;SF&quot;' value='San Francisco' />
          </aliases>
        </column>
        <column caption='Career Status' datatype='string' name='[Calculation_869757736329613312]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF [PERS_PGM] = &apos;ACA&apos; THEN &apos;Academic Personnel&apos;&#13;&#10;ELSEIF ([Calculation_946318925060980737] = &apos;2&apos; OR [Calculation_946318925060980737] = &apos;7&apos;) THEN &apos;Career Staff&apos;&#13;&#10;ELSE &apos;Non-Career Staff&apos;&#13;&#10;&#13;&#10;END' />
        </column>
        <column caption='Funding Source' datatype='string' name='[Funding Groups (More Granular) (copy)]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='// This categorizes funds into core and non-core&#13;&#10;&#13;&#10;IF [FUND] = &apos;69085&apos; THEN &apos;Systemwide Assessment&apos;&#13;&#10;&#13;&#10;ELSEIF    (RTRIM([FUND_GROUP_CODE]) = &apos;401&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;402&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40411&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40311&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40312&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403141&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403142&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403143&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403144&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403145&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403146&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403147&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403148&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403149&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40315&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403151&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403152&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403153&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;4032&apos;) THEN &apos;Core Funds&apos;&#13;&#10;ELSE &apos;Non-Core Funds&apos;&#13;&#10;END' />
        </column>
        <column-instance column='[Calculation_145804093765197824]' derivation='None' name='[none:Calculation_145804093765197824:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_869757736329613312]' derivation='None' name='[none:Calculation_869757736329613312:nk]' pivot='key' type='nominal' />
        <column-instance column='[Funding Groups (More Granular) (copy)]' derivation='None' name='[none:Funding Groups (More Granular) (copy):nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='16' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='14' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='66500' id='1' name='Main sheet' w='99600' x='0' y='27250' />
              <zone h='9125' id='8' mode='dropdown' name='Main sheet' param='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]' type='filter' w='24600' x='75000' y='18125' />
              <zone custom-title='true' h='9125' id='10' mode='compact' param='[Parameters].[Parameter 2]' type='paramctrl' w='25000' x='0' y='18125'>
                <formatted-text>
                  <run fontcolor='#000000'>Service Focus</run>
                </formatted-text>
              </zone>
              <zone forceUpdate='true' h='18125' id='12' type='text' w='99600' x='0' y='0'>
                <formatted-text>
                  <run fontcolor='#000000' fontsize='11'>Changes in staffing levels at UC reflect growth in enrollment, research activity and health science services have been accompanied by a long term-trend toward increased professionalization of the workforce. Between 2007-08 and 2015-16, enrollment grew by 15%, research expenditures (through 2014-15) grew by an inflation-adjusted 9% and medical center expenditures (through 2014-15) grew by an inflation-adjusted 46%. Additional information on staffing trends at UC can be found in the Topic Brief “Employee Trends at UC: Focus on Staff” </run>
                  <run auto-url='true' fontcolor='#000000' fontsize='11' hyperlink='tabdoc:load-url url=&amp;quot;http://www.ucop.edu/institutional-research-academic-planning/_files/employee_trends_at_UC.pdf&amp;quot;'>http://www.ucop.edu/institutional-research-academic-planning/_files/employee_trends_at_UC.pdf</run>
                </formatted-text>
              </zone>
              <zone forceUpdate='true' h='6250' id='13' type='text' w='99600' x='0' y='93750'>
                <formatted-text>
                  <run fontcolor='#000000' fontsize='8' italic='true'>Data Source: Corporate Personnel Data Warehouse, October Snapshot Files</run>
                </formatted-text>
              </zone>
              <zone h='9125' id='17' mode='dropdown' name='Main sheet' param='[db2.1phqijc054rhev1266iad0956og9].[none:Funding Groups (More Granular) (copy):nk]' type='filter' w='25000' x='25000' y='18125' />
              <zone h='9125' id='18' mode='dropdown' name='Main sheet' param='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_869757736329613312:nk]' type='filter' w='25000' x='50000' y='18125' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Job Family FTE'>
      <style>
        <style-rule element='parameter-ctrl'>
          <format attr='color' value='#000000' />
          <format attr='font-size' value='9' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Custom SQL Query (PERSONNEL)' name='db2.1phqijc054rhev1266iad0956og9' />
      </datasources>
      <datasource-dependencies datasource='db2.1phqijc054rhev1266iad0956og9'>
        <column caption='Location - Full List' datatype='string' name='[Calculation_145804093765197824]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='// Location list that includes OP and ANR&#13;&#10;&#13;&#10;IF [Calculation_1016687669559242752] = &apos;UCOP&apos; THEN &apos;OP&apos;&#13;&#10;ELSEIF [Calculation_1016687669559242752] = &apos;ANR&apos; THEN &apos;ANR&apos;&#13;&#10;ELSE [CAMPUS_NAME_ABR]&#13;&#10;END' />
          <aliases>
            <alias key='&quot;ANR&quot;' value='Ag &amp; Nat Resources (ANR)' />
            <alias key='&quot;BK&quot;' value='Berkeley' />
            <alias key='&quot;DV&quot;' value='Davis' />
            <alias key='&quot;IR&quot;' value='Irvine' />
            <alias key='&quot;LA&quot;' value='Los Angeles' />
            <alias key='&quot;MC&quot;' value='Merced' />
            <alias key='&quot;OP&quot;' value='Office of the President &amp; SWP*' />
            <alias key='&quot;RV&quot;' value='Riverside' />
            <alias key='&quot;SB&quot;' value='Santa Barbara' />
            <alias key='&quot;SC&quot;' value='Santa Cruz' />
            <alias key='&quot;SD&quot;' value='San Diego' />
            <alias key='&quot;SF&quot;' value='San Francisco' />
          </aliases>
        </column>
        <column caption='Career Status' datatype='string' name='[Calculation_869757736329613312]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF [PERS_PGM] = &apos;ACA&apos; THEN &apos;Academic Personnel&apos;&#13;&#10;ELSEIF ([Calculation_946318925060980737] = &apos;2&apos; OR [Calculation_946318925060980737] = &apos;7&apos;) THEN &apos;Career Staff&apos;&#13;&#10;ELSE &apos;Non-Career Staff&apos;&#13;&#10;&#13;&#10;END' />
        </column>
        <column caption='Funding Source' datatype='string' name='[Funding Groups (More Granular) (copy)]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='// This categorizes funds into core and non-core&#13;&#10;&#13;&#10;IF [FUND] = &apos;69085&apos; THEN &apos;Systemwide Assessment&apos;&#13;&#10;&#13;&#10;ELSEIF    (RTRIM([FUND_GROUP_CODE]) = &apos;401&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;402&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40411&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40311&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40312&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403141&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403142&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403143&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403144&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403145&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403146&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403147&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403148&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403149&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;40315&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403151&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403152&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;403153&apos;&#13;&#10;    OR RTRIM([FUND_GROUP_CODE]) = &apos;4032&apos;) THEN &apos;Core Funds&apos;&#13;&#10;ELSE &apos;Non-Core Funds&apos;&#13;&#10;END' />
        </column>
        <column-instance column='[Calculation_145804093765197824]' derivation='None' name='[none:Calculation_145804093765197824:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_869757736329613312]' derivation='None' name='[none:Calculation_869757736329613312:nk]' pivot='key' type='nominal' />
        <column-instance column='[Funding Groups (More Granular) (copy)]' derivation='None' name='[none:Funding Groups (More Granular) (copy):nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='92875' id='5' param='horz' type='layout-flow' w='100000' x='0' y='7125'>
            <zone h='92875' id='3' type='layout-basic' w='99600' x='0' y='7125'>
              <zone h='81875' id='1' name='Job Family Sheet' w='99600' x='0' y='18125' />
              <zone h='11000' id='6' mode='dropdown' name='Job Family Sheet' param='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]' type='filter' w='25000' x='0' y='7125' />
              <zone h='11000' id='7' mode='dropdown' name='Job Family Sheet' param='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_869757736329613312:nk]' type='filter' w='25000' x='25000' y='7125' />
              <zone custom-title='true' h='11000' id='9' mode='compact' param='[Parameters].[Parameter 2]' type='paramctrl' w='25000' x='74600' y='7125'>
                <formatted-text>
                  <run fontcolor='#000000'>Service Focus</run>
                </formatted-text>
              </zone>
              <zone h='11000' id='8' mode='dropdown' name='Job Family Sheet' param='[db2.1phqijc054rhev1266iad0956og9].[none:Funding Groups (More Granular) (copy):nk]' type='filter' w='24600' x='50000' y='7125' />
            </zone>
          </zone>
          <zone h='7125' id='10' type='text' w='100000' x='0' y='0'>
            <formatted-text>
              <run bold='true' fontcolor='#000000' fontsize='14'>UC Staff Personnel Job Family Categories, Full-Time Equivalent</run>
            </formatted-text>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='26'>
    <window class='worksheet' maximized='true' name='Main sheet'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='dropdown' param='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]' type='filter' />
            <card mode='dropdown' param='[db2.1phqijc054rhev1266iad0956og9].[none:Funding Groups (More Granular) (copy):nk]' type='filter' />
            <card mode='dropdown' param='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_869757736329613312:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[db2.1phqijc054rhev1266iad0956og9].[Personnel Program Split (group)]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[appt type use (group)]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Active_This_Month_Empl:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1016687669560307714:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1016687669564325893:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1172906285524258816:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1172906285535813634:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093768806401:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_521573189786308608:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_869757736329613312:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Class_Ttl_Outl_Code_Appt1:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:EFF_DATE:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Funding Groups (More Granular) (copy):nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:eff_date:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:location_1:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:pers_pgm:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='dropdown' param='[db2.1phqijc054rhev1266iad0956og9].[none:Funding Groups (More Granular) (copy):nk]' type='filter' />
            <card mode='dropdown' param='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_869757736329613312:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[db2.1phqijc054rhev1266iad0956og9].[Personnel Program Split (group)]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[appt type use (group)]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Active_This_Month_Empl:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1016687669560307714:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1016687669564325893:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1172906285524258816:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1172906285534130177:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1172906285535813634:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093768806401:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_521573189786308608:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_869757736329613312:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Class_Ttl_Outl_Code_Appt1:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:EFF_DATE:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Funding Groups (More Granular) (copy):nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:eff_date:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:location_1:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:pers_pgm:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='CTO Pri'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='dropdown' param='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]' type='filter' />
            <card mode='dropdown' param='[db2.1phqijc054rhev1266iad0956og9].[none:Funding Groups (More Granular) (copy):nk]' type='filter' />
            <card mode='dropdown' param='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_869757736329613312:nk]' type='filter' />
            <card mode='dropdown' param='[db2.1phqijc054rhev1266iad0956og9].[none:Job Family - original (copy):nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[db2.1phqijc054rhev1266iad0956og9].[Personnel Program Split (group)]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[appt type use (group)]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:CLASS_TTL_OUTL_CODE_APPT1:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1016687669560307714:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1016687669564325893:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1172906285524258816:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1172906285535813634:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1198239034499338240:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1338132104735383555:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093768806401:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_521573189786308608:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_869757736329613312:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Class_Ttl_Outl_Code_Appt1:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Class_Ttl_Outl_Code_Appt:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:EFF_DATE:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Funding Groups (More Granular) (copy):nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Job Family - original (copy):nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:eff_date:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:location_1:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:pers_pgm:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Fo updating 9 pager funds'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='dropdown' param='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]' type='filter' />
            <card mode='dropdown' param='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_869757736329613312:nk]' type='filter' />
            <card param='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[db2.1phqijc054rhev1266iad0956og9].[Personnel Program Split (group)]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[appt type use (group)]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1016687669560307714:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1016687669564325893:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1172906285524258816:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1172906285535813634:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093768806401:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_521573189786308608:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_869757736329613312:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:EFF_DATE:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Funding Groups (More Granular) (copy):nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:eff_date:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:location_1:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:pers_pgm:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='dropdown' param='[db2.1phqijc054rhev1266iad0956og9].[appt type use (group)]' type='filter' />
            <card mode='dropdown' param='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093768806401:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='dropdown' param='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='271'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[db2.1phqijc054rhev1266iad0956og9].[appt type use (group)]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1016687669560307714:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1016687669564325893:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1172906285524258816:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1172906285535813634:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093768806401:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:EFF_DATE:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:eff_date:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:location_1:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:pers_pgm:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Double check'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='dropdown' param='[db2.1phqijc054rhev1266iad0956og9].[appt type use (group)]' type='filter' />
            <card mode='dropdown' param='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093768806401:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='dropdown' param='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[db2.1phqijc054rhev1266iad0956og9].[appt type use (group)]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1016687669560307714:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1016687669564325893:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1172906285524258816:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1172906285535813634:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093768806401:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:EFF_DATE:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:dos_code_cps:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:eff_date:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:location_1:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:pers_pgm:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Job Family Sheet'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='dropdown' param='[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_869757736329613312:nk]' type='filter' />
            <card mode='dropdown' param='[db2.1phqijc054rhev1266iad0956og9].[none:Funding Groups (More Granular) (copy):nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1172906285524258816:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1172906285535813634:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_1198239034499338240:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_869757736329613312:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:EFF_DATE:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Funding Groups (More Granular) (copy):nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:PERS_PGM:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:eff_date:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:pers_pgm:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Emp FTE '>
      <viewpoints>
        <viewpoint name='Main sheet'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Job Family FTE'>
      <viewpoints>
        <viewpoint name='Job Family Sheet'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='CTO Occupation'>
      <viewpoints>
        <viewpoint name='CTO Pri'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Emp FTE'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='worksheet' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:CLASS_TTL_OUTL_CODE_APPT1:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:CLASS_TTL_OUTL_CODE_APPT:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:CTO_FIX:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_946318925060562944:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:EFF_DATE:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:PERS_PGM:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:TITLE_CODE:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:Calculation_145804093765197824:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:EFF_DATE:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:ORG_1_CODE:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:ORG_2_CODE:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:ORG_2_TITLE:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:ORG_3_CODE:nk]</field>
            <field>[db2.1phqijc054rhev1266iad0956og9].[none:ORG_3_TITLE:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Main sheet' width='192'>
      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
    </thumbnail>
    <thumbnail height='144' name='Sheet 11' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CTO Pri' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='124' name='Fo updating 9 pager funds' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAB8CAYAAAA/1L8JAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAdRklEQVR4nO2deVRUV77vP/UerEWVI+2lgRiBRBCM0onRYIogDkhAHFGMEe0QSQtJix1M
      OvQNxJa+DrliEkggbbRbbY0mmjjhgAMmChKIxCEJJhYCMjhDBxQMxVtV7+73RxVQTFJMDq/2
      Zy3WYtXeZ+99ht/Zv7PP73e+CiGEQCKxUP7X/R6ARHI/kQYgsWikAUgsGmkAEotGGoDEopEG
      ILFopAFILBppABaORqO530O4r0gDkFg00gAkFo00AIlFIw1AYtFIA5BYNNIAJBaNNACJRSMN
      QGLRSAOQWDTSACQWjTQAiUUjDUDyEKBHszGUEQ69UCgU9HIYQWhSLlXd0LI0AMmDz6llBL7y
      Oco/n0EntKTOvsHnS6bzblbXm7bqehMSSc9SmHOcUmDCEFessGJi8nVEcve0LWcAyQNPn762
      AGwKe464w9epa16hKpek0OHYKhQobJ3wiztGhd5QVJjkjUKhYNbSJEKH26JQ2DI8dCMaYzlC
      YtFcuHDhfg+hfaqPikXOCDD89fd6Xewu0hoLr4gNQSqBwwKxu1wntHmrhBqE58ofhRBCFCSq
      BSAcFuwW5TqtyP5PdwEqseioYWs5A0gefPr4k3LuFIkhbqiAW7kfMtMzgCSNHm4eYVdaLUyb
      TbCdFTbDZ/OCGvK27OacSRPTZgdjZ2WD2ncsUMvZnwoB6QJJHhZsvYj+8mdu5u9m0QgV1GYS
      l3IcaqoNq0Hrg1AoFCgUbizJAfKvccOMZqUBSB4irOg9JJiUL1aiBmp1erCywhogIg0hhMnf
      OiaZ0aI0AMkDzk0+De6FQuHNu+frAD0VeT9SjIqg0b8Dl2DCglSw70v2VOjRa97DW6HAMfIQ
      NWa0LpdBJQ849vx+43F+UUby36OVxNaCyv4ppice5+PwgQCEbz1O9aJwwn9rzS2VPU/NXUf6
      h5PoA9xsp3WFEPLr0JaMRqPBw8Pjfg/jviFdIIlFIw1AYtFIA5BYNNIAJBaNNADJXSgkyVth
      fME0mY0mSyr1MTYKhQLvpML7N8QuIg1AYiZpHD1Rv7J+k8z0nPs6mu5CGoDEDBxwcID9X2eh
      B6g5wdE0cHd3v98D6zLSACRmMIlJk6B233G+Bfj2JPtxYNq0sSZ19JTti2aMMWtL0cuBMXEZ
      DVlbhyIVKBTP8Kf3jHWalVfl1ocrK1qGLOs1bDSGO/dyGEPcG7Oaul53CYeu7/ftj+OMY7Nl
      eGgS25JCGW6rkOHQls7dw6ELRKIaARFiw4YgAWqRWCDE2Xh3AXPE9u0RAhDqxAIhrqwT/iDU
      ay4IndCJU++4C3AQb500tJQWYQhlVq/KE1pdudg0EwG+IrlYCKE7IZY4IBwWpIpKIUTl1pkC
      EEEbbgghhPhxpacAB7Fgd7nQafPEGl9VY7/thEPX9+v5RoaoFJVi+xxVk/BoOQNIzMLR1x81
      OaRnZpFxJB+CnmdcX5MKAyNIq8lndb9dvDE3gJCUfOAGt5sE5Kh5YfZwbKzs8BmjBjLJuwBY
      jeWD4mscmHaJNa9MZcKbhwGoqq4BCvnqQB6oZjE32A4rm+FE/nFqY5NmhUOr8A30xRZbRj77
      JNAYHi0NQGIerqPwcYC0f8bwRQ6o/X2xNy0vTMHP3p3AtQU8/nIyu2PU5rddk06UxyOMij6A
      YkI8+z6aY1JYwIUc4ElXHjP+0qdvP5NtzQmHfhLXx2gVaQASM3mW8dNUkJNDDg74jHJtUlp4
      4DMya2H+yn8RHfAEva115jedtZOPS0Ed/Qkr543E0ca00I2hauCHQoqNv9RU324sluHQknuD
      FU+PHmf4VzWN8c82La3P2y2+VIq+6hCJKafNb7pPPxyA4qIS6vQaUt7fYVLoit8UT6jdxed7
      KtDXnWfd3/c3FncxHFoagMRs7H39UQNMnYBPs0B6+5feZ0OIG99EudBvaCw1M+bhCWRk56Jv
      pa0m+LzN9lgv6lL8Udo9z/4RC5isgpyTp6gCPGO+YMPcAeyZ+VvsRq3CyjfQZOOBhG89TuL4
      XMJ/a431yPfQmoRDt4cMh7ZwHspw6EORKILWsyBVx8ZpXUtpkTOA5IEnPcrwbuH5j0vRU0dO
      Zgag5ndPdD2fSxqA5IHHf3kasRMG8V2UC9YKJRM32fF66naiXNvftj2kC2ThPJQuUDciZwCJ
      RSMNQGLRSAOQWDTSACTtoKciJ4nQEQ70MkZ5jpgax55LLT5RS1Xuehb6ORmiMhW2DJ8ax76y
      hrDMhgSaln+RHMIYEVrfj60TfibRooaI0BE49DK07eQX3dh2V+iJCEPJw0N7H8e98mWocHae
      IRIzykSNTgihqxH5uxeJEf1HiNiT1Q31KtMihHP/iWJlxjWhFUII7TWREe8rVM4RIq2yWaNp
      EQJ1oigw/U13QixxcBALdhi215WnighnlZixxRARWr1znujvGy+yy3VC6MpFaoSzUNV/4bYL
      SAOwcO5qANU7xTyVp4g/q2tRVLl9jlB5rhSGoONvRayzg4hIq25W64pY568SYz662PTn1gyg
      tbGtGSWISBNCCHF0kUr4Jhc3Fp6NF+7u8eJsO220h3SBJG2iP36QbU+GM29EyxdOtrPCmF+0
      hd3ngHOH2VUxi5BJzYMPBhJx9FcyF7t1qn/trzWorK2AQn46W4vHYJfGwj79+E1+KZe76AVJ
      A5C0ScklDXi60+r7Jis3hj6Zz7UbwI1r5JuEK3cL+iw+31THohfHt17u6o4nGi6VdK0b+W1Q
      yQNIFYcWzeeLKf8gr3nUXTcjZwBJm9g7OkFePq1+9ERfwIUf3HnEAXjMjVE/XKCgFXdEX/Yt
      R3+oaD8itHELNEkzCNVEczjJv+2IzsJ88vDgcRezG24VaQCSNukTNJt5P2xk27mWl2/Vrs1s
      HfwSM0cAHgEED97H3vTmEfg1pK8MJmzzz+Z1qC9jX5QX4w4Gc/JINB4NN39Xhj2tQlNUYtL0
      bSrdnRnU1Qmiiw/Rkoec9pZBG5c3my+DuonXj7a2DGqsp70mMhJnCGeVr0huvtzT6irQFbFl
      Rn+h8k0UF1ouOonqnfOESv2OYRlUe03sjnAWDktOiFaqdghpABZO+yJ5OlGevU78YcIg0R8E
      Knvx1JRYE5E603qJYu5T9kIFAvqLQRNeF6mlrVyirRnA2XjhTqMQXsNffT3dGfHRlGGGMaAS
      9j6x4kTD+4U0EWH8YoUQRmE84/Jpe8hoUAtHRoNKJBaMNACJRSMNQGLRSAOQWDTSACQWTbur
      QBqN5l6NRSK558hlUAtHLoNKJBaMNACJRdNFAzDmi3rV54H2wmHEVOL2ld01+s+g2uFNT2qr
      1V3aQ7SfmzGHVIGtkx8L1+c0KIf0NIZ9bOUv8lAP9tezx/ReUpURh5+TQTGml8MIQpNyG/OD
      m6BHszGUEUZlGlsnP6Lbuf5M6ZIBVB1axDPecWjGrednrUDobnL4NSu2TR+KX5LGOAg9dy7u
      IXrhutbDansAvSaJAM/5ZI5M5twvAqGr4dS7jqRHevNMbFYHQnO7iprEAtH0s93rzPlot6WT
      x9rF23B89wxaIfjl2Dyuxr3FtpJWqtaksuLNq8zYU4JO6LiY4sreuQkcN7crsyKGWsMoa9My
      qq9a7JynEqhmCEM+c5qIoGk9g2xNY/BS93JFrPNH4P6OONXVUMEu0LP72H39tR8Mdx8oTha+
      qkWiMeW9Wmyfg5izvXnOsRDi6CKh8k0WxQ0/nBXx7u4i3sxk4c7PAMe/ZN0NGDUzsFnKXB+m
      vzAHavdy8MT3JHkHsR4gZwluTaboStLfHmNwUXo5ELTmXOP33O8ielavTzsrMhIXhQKXuFNN
      x3XzCKnpwFhvvO4aK66n4thKpjZ8hmM4oUk5d+9HX8a+6MYxjwhdz/mWXwcxi+YuS31/9R5S
      e6Jyes1Go6hcL4bMXs/32qbtm7oQLT4x8qBzIY/MJimWfejbD4ouX21RtfCns9R6DMbFpG6/
      3+RTamaycKcN4OblYmqBp4e1XEKzsrYGoOx6b6Kz04gAUCdSILKJbrCWfKqeXkvJr5VsDbzJ
      oZhoNpcAXGXj/PEsOe7FxnId2pOvoV3lj19CXpM+snWTOSe0aJaObtp5gYazgHro3ROx9Vmx
      POP/DqUTtlGi01G+M4DzS1q6SI39jCQr1pfpH/5fXj+lRVeylhHHIxn9h11mCTF0jtOc1v2B
      9CslbAq8SdaqvxrdgDwSXniFz38JZnf5bX5cVs3hXabbpbM0aBVfP5lIudBRssKDr1cFsXhX
      z420p3EbquZ0QXH7FXHF3RM0ZiYLd3kVSKfrrEc9ipnBw7HBltFj1MBpNAWYKXoGYwPGY4sN
      NjZtNH9XatiVsoZS5hAX74edlRV2fvHEzYHSNSmYXieN/XzLvk9LQf0Cs4fbYGUXzOxpULvt
      S9LavK5yWOJm+hDc0YfUNkTlCr/iQB44/D7ceIwiMdWNAz26WuDAEsZPXUbWs5vRil/ZOssc
      yQjLotMGYD/oMVRA3sWWZ7Rew8m2790OuDVWTVyUWnR6zBQ9g35ttf2oE0OAnAsFd+n7JtfL
      APrR2IxhmoUyrt9srZ8abt/A6MoZLuig9S3rN6X5Q7DpDNgFCi6QAzz2iEOzsdfjz5INIbip
      bvHTgVXMH/UIA4bMZqPm3j3+dzcFF3IY5WbOdycKyc8DDzOThTs/A4yfTaQDnN6ym6bOSRVp
      e/aDKohZAfZtbHwXuih6hksw8/yBjGxy2zzf9jg6AdymuuHuXUP1bUD1OINaHbYV1iqMrlz3
      X9Q1tyvNr+w2FINuXINsHKa6cWCFR/iXXLxdQ37mNhLDRkDBTl55cwtt2uqDxFBPfE1E8er3
      b/CggS2qug57GpWmiBKTurcr3XE2M1m48wZgNZalGyNwzltJWNQeLtUB+gpy/jaD8B3gu/J9
      XhoI8Bhuo4DKX6jU69G3dxPqougZDCT8o0R8L3/Aq7GHuV4H6O9wcdt8w8NsVDo19CHolUU4
      s4OV8V9RoddT8VU8K3eA86JXmd7q5DKeFxc5Q84XfHm+Dqr2Ee6oQOGd1KnlXYdH3IFifvy5
      Cupy2b0r3/yNXf0w6MZ9zp4KPXXn12GqG8fVjUzupcAxIh1bdShRa/5EIKB61JEBnRjrPcdl
      LAGDd7HhX5eoQ8+d79fx9/3+TPBp5cQ8O57g05+xIacCPXVc3/MJm24HMc7TzL46u1JloFm+
      KCph/9QUEZtaapKsrBMXkicJexUC3MSy0y2X7AoS1QIQDWmcladE4txhjTmoc9eJPG0bddtA
      W7RbvN4wLkT/QRPEH9Zli/KGgelEefoKMcWYw6qyf0rMTTwl6tNMW+1HVypSX/cx7kt/MWhC
      rEgvb32ttd1lycoTItarf0N+67p3mvbX3jHSlW4XC4f1N4xjarJYs6Bp/coTjftmOIaJ4lTz
      b3SKB3QZVAhx5eCfhI+9QdWd/sPE3A0XGq6ptIh6lXghhNCJMx9NEcP6G86zyt5HxJ5oZUfb
      QAbDWTgyGE4isWCkAUgsGmkAEotGGoDEopEGILFo2n1bUFfXyWgvyUODJZ9jOQNILBppABKL
      RhqAxKLpggEcIUqpRKkcS3JR469FyWNRKpVEHen64NqkrpjUPwcyzGkASqUSpaMbgX/cwKkK
      XQ92asKRKEO/Lf6i6JHdNvY31vRAPxTc4rvkMEYbz5OjWyDLMm+ZFH/H6hA3HJVKlI4jCduc
      T2tn8NbO3zNgbDLt7v2tg0S6dOwcdMMMkEt8/E5utV+xe9Dlkzx1FOHfPE3iqatotdX8O/O/
      cDwWxbjnlpF9j2wAwCvhPFqt1uQvhYB71/0Djy5zFbPftyHGeJ5+THLl8+AIPisHuMPeJYGc
      9D9GmVaLtvjvOH0wlRW5zRq58xXxsTupba+zW5nETnqJLR0Md+0WF6h2ZywJ9+jKu7rlTWKy
      HuVPH/2N5x1tAGt6uc1l00Ut2our8La+J8OQmIG1bwIlJeuYZTxPdpMX89rQ/WSfA7jJ5Uu1
      uLg4G8LfbUbjM+YyJ06Z3ud1fP/RXykd5nf3jvI+ZMzQOfzgGcSQDo6x6wZgb489l0l8+5PW
      pyhdBV+vntU4DY4MI/lURcNUdyRKiVLpwxuJf8bPaQDKAU74LctsY0Yp59iBr4AxPPvM3a90
      XcXXrJ41GqcBSpRKR0aGJTe6SEXJjFUqUc6JImqIEuWQZeQCt75LJmykY+N0/XVFq1NyuzR3
      Wer7q/cLjeU+byTyZz8nBigH4OS3jAbvQJfP5rCROCqVDPAMZcMPzRJ+b2WyLNDoOigdcQs0
      2faBRou2RmVMhLLniRGDKCkpNRzjulNknRzEuNGDG6sXbeCt4y/y3qsu7bTrwZ+zizn4Fy/6
      d3BEXTcA59f525JBkBtP/M7mZ0FH9rLnmBxfxrjNGqqry/hs4s/EjHuOZU1mjDOc0S3gYJGG
      9RMryE5YzvaS1jorJP8c4NWGdm1Dt9kse24y8WXj2KypprrsMyb+HNPSRTqlY1Kulqof38br
      6mYWBMaQMeoTyqqrOLZQS8LkID4435mDYh5nzuhYcLAIzfqJVGQnsNy40+c/mM+rX/zCtO1l
      3Pgujur0vU22+yo+mISM35FQpqVaE497RgLBS/Zyp+eG2i3osr/gX9pIXvAF6I3fyq2M3OhB
      X6USpW0IOWHbedurvvYtdsZ/zDN/e5XBbTdpwDOA6Y91Kje2O1wgK3xiVhGiqmVnbAJZpgkv
      d1JZm3gZQv7C0vF2WFvbMX7pXwjhMolrU01OmBchs4ZhY22Ht48XkMX5DuSHNOdO6loM3S5l
      vJ011nbjWfqXELicyNpUk8tkjD9j+4ONjQ3lx/ZyuBamzJyOnbUNw2aF4MV5Ptv3fZv95MYM
      b/IQ3NGHVK+QWQyzscbO2wcvIOt8PlDE8bTzYB9K2HQ7rG2GsTAyqMl2en0tkEZM4CxWZD/D
      P6q0/LJpBr071Ps95tYRlry8k6C1sUY3tYhPZsznRmwZ1Vot2qpcws5NZqHxJqrLTuB91X8T
      08M+bfcsg/YP4dMbX7GERF6Nbf4U0zoqKzNS1updB+Nf1BFvFi31g9x/svW7zjgnqqZ5yP36
      NFw0tdpm98/Bi8nQavkh9qk2W2v+EJyxuI17VU1NxxcJamrRtlEUkKJFq62mcPsbDP33WmYO
      VKJUBrO5vKOd9Dy6yweJVjsx+dNHee/iRZL8jEe8KI3Ps55n5nQ74zOAIwETn2XntlTKi5KZ
      6JfI91tCDG7ejA2QG8PwHlhl6773ANbexKwKQWX6W+9AXo4cBDtXs/x4BTpdBceXr2Yng4hc
      OLn9O5bxIqy/wFICYOBL75Pgc4WP/rSMo9frAB2/FnzOgiFKlEOi+eoO9A58GUO3yzleoUNX
      cZzlq3fCoEgWTm69V5ep8wlUwYHdqVTodOQnjkWpdCHqSCccC/tHGAKUntdwizq+S93DRbM3
      Hsz4oOFQu5cvUivQ1f3EP9almZRfZXPwAJQuURzr78WLr67ijxMB1UAcbDs+1B7l6mfM83qJ
      n0LT2bt4GE2clMFBzPXJ59usK/yqA+quc+TYtwTOmMhvm5137d5XwCuB8z2wytatL8L6h8QT
      72X6S2/81nzDwXgnToR50LevB2EnniAhM5dVnZ3arN1ZvP80G587y6KnbVEq+/Ifvn/l+sQU
      TnyzBr/eQG8/1nxzkHinE4R59KWvRxgnnkggM/cuq0QDw9h0OIGxp1/FqW9fvBPreCHlIO8F
      dMKxeOqPJMeM4v9sCWGw02QOPDoFr/a3amD4G7v5NHwA+150wslzGcqgENOBErZpD/Ejv2ex
      R1+UfT2IK3mBhMMrCHjAVsC+37ya/bdqyYp5yuDnN3EVB/Pql0v5nxXjce2rRPnYFI557WNT
      WMvE9xYUJTO2m2aDdlMiLTlQyhIoKSnBxcXlfg/jviFDISQWjTQAiUUjDUBi0UgDkFg00gAk
      Fk27q0D5+V14JSt54BFCoFAo7vcw7hvyy3AWjvwynERiwUgDkFg0XTYAgxxpvUyqgl4Obvgt
      XE/OvdIjpaW+lkkJSd5tyJUqFHh3u6ZofX+R9IwY6sNGFblJTSVM4zJMlMqqclk1zXjt2A4n
      dKOmVQXPqh0v0sucz9BX7SPcsWPHvosyqZF4DJ5P5kijTKrQcTMzHsf0SLyfiW0aGn1fcCU6
      2yhkUZCIGpoIb2Sbo2yhv8PFPdEsXPf/iQDvPUSfsZzpq214+9wvCKOE6bagcD69CVDDrsXj
      ORFwkgohENf/gXNCIMuaaR5Sk87Sv+xoPyWyKoMYv7lsutFexaZ03gD0Wbz72npK/RPZnxCI
      ow2AFb2HzGNriUCUJOBjnkjHg036m7jP/JCf2opNlrSJ1dgPuH59Iy842gBW2E1bQtQTe8k6
      C/UpkY897mz4OpuNGt+xpRzPMb3R6Dn3wdsUD/O/e0c/fsDox2dw7smpuHdwjJ03gG/38Wkp
      jHrel7vH7x0iUqFA8Uw4kWN7oVAE82klVOUmGWU+FSgUtgwP3Ui9hFV7EqFUZRA3xiBvajs6
      jiM3u5aPXHd+Kwvr3bheDoyJNireFCbhbRACI2eJm1ENRk/ZPuO46us/TBKk9xUtv9aosDam
      RA572pniS6UGt6cuh8wMZ8arTWblwk+I/no+H0a1pw02lP88c530uGf5TUeH1FkFjxsbgsxS
      amkQykYt1lzQCZ1WK3RGkW2HBamiUghRuXWmAETQhhuGLSIMah/qVXlCqysXm2YiwFckFwvR
      IMSNWqzK0wpdeaqIcKb9sRQkCjUImle6skEEqRCqyX8XRVohtEV/F5NVCFXQBnHFMBjDWOoV
      Sa6sE/4g1GsuCJ3QiVPvuAtwEG+dFEKIApGoRkCEaPewPCDcS4UY3cm3hLPzW+JkvdRLzbci
      9inDuYP/EGMSTgttQ+1KsX2Om3jrpM5wDloIsrdCQaJQd/DYd6NMassHziYPpe4B+HlYYWVj
      g5XVWD4ovsaBaZdY88pUJrx5GICqalMVsDYkQsni6LZaCPoD4cNtsLKbxqsLOjrxNXLunwmk
      1boTs/w1HrcBm8dfY3mMO7VpCfzzXCsbDIwgrSaf1f128cbcAEJS8oEb3H54JXjvDVWHWDT/
      C6b8Y6nRNS4kZfIcrv+1HJ0QCO2PhJ+ZyMs7DHOpPutdVqve4+0e9qM7L5M6ZBgOmMqkNj5w
      FiSqW27wm340SJzVpBPl8Qijog+gmBDPvo/mmN9xYb5BlfJRR+rFHPv06/DE18CNa/nAb+hn
      or9maC+fa609UBWm4GfvTuDaAh5/OZndMa3sq6Qpeg1JM0LRRB8myd94oAsP8FlmALOD7YzP
      AI5Met6bHVv2cFN/jpXRPxG1fBo9neTW+RnA5/cs9oTTW3Zwrtlqj17fjk+etZOPS0Ed/Qkr
      5400PkCbias7ngAm0pgdkhhthkGtsbLJHdzQnifOj7asX3jgMzJrYf7KfxEd8AS9re/hl7ge
      QvRl+4jyGsfB4JMcifZo/3PkACUZHDmTxiuPGr2JoPVGfebuX17uggvkyWurF+FWlMCchdu4
      eEdvlCNdwLRlp+++aZ9+OADFRSXU6TWkvL+jA/368Pw8FWR+xufn69BX7OOTTZ2PVxoxLwpf
      VT4JS9dyqQ7qLq1laUI+qqBowjyBx9wwqLxWotfrUfU13JOKL5WirzpEYko7+2rJXP2U2U/O
      Je+lExyKHt40J9h1CqG+GrIzL3NHD9Rd59DRbIJmBWDvGk22qRZzWoRRn9lMregO0KVnANtJ
      KfyYt5XZ/34PX3trFNZ9cI/6iv/97Ius2Hqa+PFtbOjzNttjvahL8Udp9zz7RyxgsgpyTp4y
      YzWlD7OSj7Ny0iVWeA7g0ee/Zujvu+CGuEZx5NSnhGrfZaRSgXLku2gXpnIhNdywuuU6hbBJ
      9lxeMRrrJ1Zw/aX32RDixjdRLvQbGkvNjHl4AhnZua2+xLFkzv1zJXtv1ZK5ZCjWLV5AuhK1
      97/4n789xyBrBQpHf44+e4St4WbkBBcm4d1Ns4EMhrNwZDCcRGLBSAOQWDT/D+rxLtKJgK3G
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='164' name='Sheet 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACkCAYAAADBuSFLAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2df1xUVf7/n/NZZr/M4A+IiKES/IVYgmkqLoiYokH4E3+LqaGFtuKKrVKr
      26qfkt1FC1psUwtd09QMFVQQUlPQMNDSAhMQ/I2/2EDBGHbv7Od8/5gZmIHhl2Dlzn0+HvN4
      wJx73+ece+/7nvc5c855KYQQAhkZK+V/fu4CyMj8nMgOIGPVyA4gY9XIDiBj1cgOIGPVyA4g
      Y9XIDiBj1cgOIGPVyA4gY9XIDiBj1cgOIGPVyA4g08ZUc2FPJAHuGuwUChQKB1wDXmFDTnmd
      43SUnogj1NsVB4UChcIOTd/RLNtzgWqAA3NRKBQNfOZyACjPWMXovoZ87DQMjtzLFZ3Rfjk5
      caF4OlhKM0HIyLQZkjgX6y/UuIlx60+LSkkIob0uDizpK9S4ifDUspojy1LDhVud4zJW+As1
      ahGccM3Mamo4AnxE7HmTL6tSxCv2CHyiRa5WCOn2VjFFjXBbckxIQgjp6CKhQSPCksuEdGmt
      GAHCx8yAHtkBZNqOa+vFCBCa8FRRYZbwnVjlhcBtqfhKCCGko2KRBsH4raLMoiFzLDpAPc6L
      WB8EmiXimJBEarhaQLhINU3zWCG+qXOWHALJtBmX9nzCQeCFkSNob5bixfiZ/eHyLtJOA1+l
      sP0m+AweiENbZV7yBaknakpCQW4VeDyOBoDueHgBBZe5WicMkh1Aps24dqUQ8KH30zb10mxs
      lEAB12/CrcKz3AS8PLq3Tca6fOJCF3EQUAcM5BkuUvQt8EjHOo6Yz4VL5qfKDiDTxkjoLHU2
      HxS6fOIC+rEoswrwIur3Y+s89I0jO4BMm/Gkaw/gFN8X1veAyrtlgIaO7cG5UxfUQG5BUStz
      LOfA/CDDw6/GP3Yny/raAF3o/gxQdpdKs+N70rWzuQXZAWTajM4h0xkBfLoz2fzB051m764C
      cJvBmN8AQycxVwMnjmVTd3C0JRStHcfEDZcBNf6rs0mP7Ik++OpM156YxPxFFOQC/Z+mR93o
      rPldfBmZpjAZBo3NErclIYS2WGyd7iZowTCof7z5cI/FUSDjSBIIt/DUeqNJFanhDQ+Dno8V
      PiAIT5WHQWXaGq0o3r1UjOrjLNQgwF50GvayWJ9d9xGVxO2sWDGt5ji1cO4zSizdXSy0dY60
      6ADHlggNegcw/xiHPrUid/000csegdpZ+C1MFpclw7kmDqAQQt4VQsZ6kfsAMlaN7AAyVo3s
      ADJWjewAMlaN7AAyVk39SRt1yM/P/ynKISPzsyAPg8pYNXIIJGPVyA4gY9W02gF0+RsJNVmX
      2Tc0jnrLP++Hojh8FQoUcw+0gTETewoFipEbuVWbQJyvca2pL3GtnaAog3E9bl+NHQqFAgfX
      AJZlmDwUpvfC8Km5zeUZLAswrBN28CR0Yz4Nza42e/YcXAkwWferu7KXSKMdOw19QzeSb7Je
      OGNZAK4OitZOhvtKLHVD4LNanJOE0B6MEBoQmiXHWme2znyNNsFoDwRMETuMa/ZuJojgmu+b
      WnYn0xyko4uERhMmPr2uFUJI4nZyuHBTjxMf3zQckBouCEsWUr0zb4qPx6mFT7R+gpz2+qci
      TOMmln5lKZcKkTjdXviv0E+6k24ni3A3tZj/uRBCXBPrR1BjR2hzxWp/tXAzGLr58Tih9okW
      pyulVk6GMz5UFivzC8NYVo1GaFCL8FR9iSt2TBHgITw8ZAd4cJwTq/sjjO+yi/H+ov/qc804
      Tyt2z0D4x1+0kPa5mK/2F6ZJ36zwEB4r6q761SMlhwl8YkXd29u6EKh9B/2azk2zGLQsjRvV
      lptCTwfj9hjLOFSqM28GJ7xJXKgnDgoFDp6hbMyvk25sG3WlHFo1urZZ9Qwl7kRpTfN4YK4C
      hWIAs+cOwU6hIGRLmeUyv/ACL1DF3iNfAfDVsX2gGcOYIQ2Vu25TfIC5CgWKAb9jTeRgNHYK
      7DSDTZp4HVf2RjLYUE6FnYbByzJq5r3r8jcS6umg3wZk8DJem2Aeeumu7CVysL5Zt9P0JXRD
      nn6bkJp8/8D7y/T5Khw8CY37pOb6KRwGNlAOOzR9Q9mQZ7xBTdWhrdHyY6UapWHQ/Xz+Kbp1
      eqKJc3TcO7OWuH3+TArqXD+56CzfVPWkm0lS+46PUHD5qsWQSautAqVN/XH/ZrhhI1SIz+e7
      1U5FtfcWC02ms15LCBZqNCJs920haXNFtA8Cr1XiOyFM3shhYvdtSWiz3hAeINT6NqxOCCSJ
      Y0vcBHiJ1w7dFpJ0Wxx6zUuAm1hyTP8m10+ZRfisPickSSu0dZukGnsJIiEYw9vgG7HCA8GU
      HWKHyZRb0y01hCgTW8cjIFgk3BRCiFQRbgiXonO1Qrq9SYwHgX+8uChEzc4IPqvPCUlIIvuP
      HgI0Qh8VGnZHMNY5d7XwV5u0PNIxscTNuNWHJG7vDhMa1GJ6YoVJvl7itYwyIcp2iClqBDXX
      96CI0Bh3RRBCOrZEuIHwic4VWum22B2mEaini8SKZtShjZGOLRFubkuE/lZdFPH+jwqf4X7C
      WW2Yqrz0aJ35/JJInt9JdLJHdJ7xae005nr30zj12UBquMW3vBDXREKwfb3tVqTk+W2xHqBM
      ZMdOFO5qYxytFv6x54QkbuofNJNCno/1EeAhVnwjLMT4hptirIBpesUOMQX9g1qz3Uad7/QO
      YLBtCRN7+nIEi4Rj+u+CE27Wm3OuvX5K7In9g5g9qo/+RtWk1SmnccsNk3pKlQUic8PbYsHU
      YaKTvf66hKfWlqHGyUWF2DHFxLZhjnvt/jWGvKbsEBXGv9XzxecW8zX//9gSjXlIlxouADFl
      h4kzNVKHNqMsVYS7uYn5nxvv3DGxRKMWwesv6cNmqVJkvOFV7+EUQghhcFy3+Z/X2WZFtMAB
      9It07P3jLThGm2yL4oB35Gd8f6uA3fP7oqaKzGVrOUIlFeUAGwg29PTdF53AuDNAi7h1gysA
      HTvULnhu34GOAFdumIzoPELHZqyI7t7fDw2pfBS1kxP4MMLf2Sy98mAEPR/vT+R+BcNW7OVv
      U1pQ1qK1BDh7EPTBebq+FM/uKJ/atPPnOAE8072LsRJ06Gia8V1uAicWuRtGR4LZULeOz3Sn
      C01TefcmcIJF7oYwLngDelO3Gj+xLdHlEzculPzINOJGGG+MHzE3fiQl3E0fjti0w9enP6m7
      0qlXMhsnQmbP4F+bkvmqGdkVFeRCz650Nvmu/MB8guJ6si0pAkt7ULTZ7wA27XoQsnYnq3yA
      KgkdNtgoAcJJ1W/AVfNZ/0ILjTu74Apwt6J2rWllBXcBdddOODd4YgP8Zihj1HDixAnQ+NG/
      zpU5nvg+l/Ehct0qpvdzwbYFpov2byOzCl5c9Q8iA5+mnVKqTXR/Ch/g26KLxkpQcdfkZBsl
      asAn9rzZ9RJZkRZvXmPYKNWAD7Hnza99VmQbbUXSBLore4nwfo6UkGMma3Uto9VWQXs71A0d
      0MmJR+t+170Xz6rzKb5U+1Xl3TI83DoZ8ionJy6EgQuV/O3k+7zQwAZErXKAW1tCsFMo8P2z
      vqOmK83lu4ugDh5IbzoTMisYNXv5bE8pOl0+a3wVKFzmcqCySdPmtA9mznw3+HQVKw6XotOV
      cnjFKj7FjfnzWrYNBgA2zzLwOf2f6jFD+U3d7DpqgIsUX6pGl7+Wdz5tQVE76K/0xQuX0ZUf
      IHbtqdrE7gGM8oKqXdvZU6qjOm89f99ncvLQqcx3gxM7PyOvGsr3zsZFocD3Pn6cGDp1Pm6c
      YOdneVRTzt7ZLi34ncPQSfaNowhq9ulsdjlKtjDpmWnkzjzKgUhP8xfIrS2E2PnyZ2OHXFfK
      ofSzhM8Kpj25RPe2Y+onhsENXSl7tyTRI2I6fetl8huGhpxiW8IJSnVQfWMP6zbdJfg5L0DH
      8WUDGRr3GO9lr2WMk7n75Ub3xm7qJ5TqWukAzjM2ciR2Gtr3BqJSKFB2fpXTQ2M5snU2TwBP
      zN7Kkdih5Mx+DKWyH2u001h/8D1eaPET254RcSc5+LYbX0zvjFLZmelfeBKbfZoYvybn81kq
      Of4j9KHJ6GF+9d5Ofn/YwVLvataOUOH0/D76ho1EzQmOZTc9SuI88x0SJrrzZURnOj61lMpx
      0/ECMrJy0OFF1M4EpjnuYfxjTvSPtsE/yORkGz+iM5NZ+Kv3GKhS8MisQzy99CDJES1/a9v4
      RZOZvJBfvTcQleIRZh16mqUHk7kPUy3m9EerSLpTReaip1Ca/NjlG1cEzjPYeGQyuVNdUCgU
      2D35PJ/9ZjvvvdAe8CJq/3Y0G/vhpFCgcBrKh64fkmQsdFEcvoaNcaE9Y1/7C457gnlMqUDV
      /VW+n76DN4fYQOUu1kafp+ryBoIfqb+prlfUfrZrNtLPSSFPhvu5OTBXQfCGMJKljYy5H1+2
      KqrZO3sxyo1raWkU3RDyXKCflINE2ClQKJ7n/cs6qD5BZgbg0xsLuwnK1EV3hOwOY/FrQ5Ny
      C/ATU56xjIkz/s4XV+8Aapz9XmHDJ2sY4yp7wM+B7AAyVo0cAslYNbIDyFg1TQae1dX1ZrjJ
      yPzXILcAMlaN7AAyVo3sADJWzf07QHE8Q1QqVCoVqpDN3K5NIH6I4XvVEOKL26KYv1TukR7R
      GdWoBEqA9AhjvTuzNKv2KCk9AkfjtYpIBymTqM4qhvx3XxwApIJYhgyJx2JN76Qwt3ME6TVf
      pBNhvE6mH8dIDlu0vZlZA11xVKlwdA1geeYd00Q2zxqIq6MKlcoF96DFpFw1TkyUKP1iOUHu
      Lm3UAqQdIvOe4e/bx/kip02s/vIp+ZT4hFsETRqN+fqmW6QcPVPz38mM/VSZJit9GDXZmZx3
      1pMp8V+LVLCZ6aOXYvFxuJPJ0hdm8rHZHOhA1mq1aI2fihO86akm6N0lBNQzkMPbo5djG5VN
      ibaCK/sCORoSzjbDm/heyl944/pYPsuvQFvxHXHd9zLznUx9YvE6Ji6qZGHmxTZwAGdnnEnl
      6Jf6O3kv8xBp9KBHj1Zb/sWTt3Udh/FmmN9jJt864+wMhenHDG+9MxxNuQU9elB7SZT4BIxC
      fSuBTSn3+G/k9r7f8uxza7AfNLx+Yu57DH5qCt96BdPYY1K8biFvqVewZpal5ZPerCy8xPoJ
      LtiixO6ZkYzsdpicXH1q9tG9eE4IZaCTEpROjHz5JZ48ks0ZICvhHfIGBzLcxbYNHCAwkECq
      2J9xUp/x8VRwHsnIwaYH3eFk/Cz6uRiaNJd+zNpcgN5lDM2e32vELg7A1bFucyZxNWUxAa6O
      hubQlYDlmdSkFmxmVj8XVCpHXAOWEzXFPPS6czLekK7CxT2I5V+UYnzp6kMWP+ZGjMBRpWLy
      tjKzZlXl6MrAWZspsPiWLuZIah70CGRwN9Pv3QgM7Ac5X3D8NnDpK44UQtDIkdibHKXsOwB/
      qth76Ev+KxsBx5F89N03bJjqZiGxJ4uzLpLyurfZNTFDymT9O5dZ8NY8ujV0TA3V3Ej+gI/u
      zGD0QIBivj9dhUeXzrWHtG+PfeFlSqRivv7yFsHPDUJJW3SClb74BsGtL7+mmDNkH6mCwc/y
      rFldopkUlUH/j26g1d5go//37Jz3Rk1zBcDXXyOFpVCcv4HhpVnEvLWDSwAlH/PqxPfRLcqi
      QltB5u8cyIqZSUwWQB7vvjiPnT+MYceVmxT+zZ7Th0xslmwmLCiKjP7ruFJRzqFXtMSMDObd
      PNMKfE1+t7XcrCjn40kVJETMY2fFLFIrtJR/NoFbO+fxovkJeu6dJicH6N2j3mIVT19/nMnk
      5GmJe6e+5Dg9GPCsi/lBj7nzlDNUnfmeCy274g8Fj/mO1L99LeEVyNgujS8zupf8IfFOrzLT
      vwEbNRQQP9KLgbOT6Bw2jX7tGjisWw+8yOfClUsU5znjImWwOMC1LfoAGvyGeevfeFnHSC+E
      oOH+ZotUlP4x5F/YzcgL7zJvQiCvHwIoo8J0YYz3RCb0skXp5IufN3A8jwKAJ+aw55/fEd0x
      iddnjiZ0XSFwS39u8RFS80A9bjJjnZTY9nqFucG1Jm8fSiKtCkaNH4uT0pZeEybiTR7b9p4x
      ybgHgUM9UCptsVX+B+nfwKW/Mynot3yo+y1nK7ScfN2zfrVrlmm2p941/80QRqmr2J9xgi+P
      6lvE5+qt6HDGxQ34uljv6DIm3GbXJ4l4z5yIhStfBw8WpJznSkk6w9OCmbSuqYEFHbqqSrZs
      /ZZJO4rbphPcrd8gnElj4x8SyakXE8O9w5H07jqIxQcUDFm2i9iJLTBevI5g196M+bCILi/G
      smORd21aUQE5gGfN3hjtaG+yxrayQr81SsI4Q+jlGUUOUHjdtOdlT/sab+3GjLei6G9fRWnW
      JqLG9uZR18HmowvNwaYvA/zhVsqbRO+vQj1qCANaZsG6uZfJoTRvJgY3HfzUYNuLl2b7c3zX
      QcsvlOJCculJV9fOdOvXnrBlSxnopGyjUaABQxilhpycHHAeRL865f5yz3qu4s2C+JVMe9a5
      RWtsi1O3c7wKpq34kAXPP0U75X9qE7t74A3k1SwMvUelyRrbXyl/DcCcJJORBa0W7drABvOz
      91/JsRvlXPhyH+9HDaXTnVPEzIwhq8EzLPGYvlUszCHnFvgP6EtTDbmMCdnHSbXwHDULzaM8
      Sjee7qum4OKl2u8rK7nTw40nlE/QqUslFZX6nlfbOIBS/8YDLL7t2ndwBi5z4XI1UsE64hKb
      b7p9h0cAuHTpMtKddOI/+Lo2sdtQgj2hKmknyaUS1Wc/ZH1qbXLn0S8SpIb9u5MplSQKYoeg
      UnUmIr2BkRcpi6U9VKiG/I2yp4cz+w/LmdIDcHOpv/DetSs9Ae5WYsmavlUELLSIem5x4zLg
      7dHiBe//7Vw6f5aqwc/Su7GD7iUR5jiAlScNc9Wqz/LJ1iLmvhREO2Dgc2P4ZvtmskslqL5B
      8kf/4G6gH71oR9BLM8hYs5az1W32S7DhjQc1vWtTfKM+Jqr/v1g30gHXUSk8M+MF1ORwPKfp
      0OKx0L+wLqQ7JyJ7oun9JyrHTMUTOPbVSSQ8eW3rOiY77mWqqyuDYmzwMx11e2IWm9JiGHJq
      Hq4dOuAbW83ktSmsCWygp6T0ZeW+zYSpPmS4gwqVwzh2uMwncauFkQhlL/r6Ad8VYnGpuKFV
      rD9KZOD2ec7dAudB/ZoxymFdXL9y3nLfqjieISrDD2ftxhGbNpMLET30P4T1+B3nX0lkdYD+
      rHYjf8fbj+5lnGsHVA6eLDg3jY+X+qME2gWsJjWyhN/1cGx6QczDNhs0PULFuISZJFasZ+QD
      jjvy/jqAASueZN3lPcyy9JJvjMOROI7awrSkm6wNlAOk5lFNytw3sFkfR8NBbMt4yOcCHSbS
      UYVKNYr1lyWozub4McDbk54/wTPl+eI8AkjjUGbLf8zKOpxElfMcJg+TH/5mI2WQ0340g9rQ
      5EPfAtzJXM7UORvIuKZfY+vkG8YH//gzIzv9FA/WPdIjPBl36U2K9s+hqe1ea5AyiXIP5Ps3
      i9g/p9lnyTwAHnoHkJFpDQ95CCQj0zpkB5CxauRtUWSsGrkFkLFqZAeQsWpkB5CxaqxHJ9i4
      573Zp45w331RToZRtE6hYcmxNipuXVq6R/8vBF3+GnyNOgN1Kd/LbBfjdueGr3LizLV/TQQG
      69tuWCcYqsnbYNQqtkMzOJK9xsTyHOJC+6Kxsyad4Hq6WJKoPG0QqbMorNZMLsYLfxCM31pH
      6K2NMWh8+TxEOq7SuQQxzq2B61t2VCzpqzbXJZOOikUajQj79LrQilrt33E1AsOmNKYTLERF
      arjQPP+eKKiUhJAqxeloH8GI9eKakMTRRRqhCftUXNcKK9IJrucAQtSK1BkVIO+DNnfU/w5u
      Jr0s3O3dxUvTn6/vAN++I7zt7cXwl6YIjyaE+c6t7t/AtW1MJ1gv0Nicl4X16QQ3hiHMGDB7
      LkPsFChCtlCGjtJDqxhd09R6Ehqnl+WhKA5f90WcANgQXKNAUp4TZ9ACVuDgGsCyQ7XlLM9Y
      RoCrg0F/2LyJrx9ObiRfZ162mhCoOo+trwTg6qCoaeL3XDDegCLifBUoFBN403j9zbSOG9cy
      bhMcR7O58Hs2Te9sIfEp3vj6BgeX/YZHmjCj/bEStdLCDp6N6gR/Q3aqB4FDmjHRvFnu3CAP
      kU6wxRAoWi9bGpwgrumN6Ovhs1qckySh1Uo1erterx0StyVJ3D70mvAC4bbkmL7Vq9sCXEsQ
      wWqEJmy3uC1pRW60jwAvseo7IfRvLQSjNonbQhKX1o4Q1OgAXxTx/gi6vCGyTMJJL/2JdUKg
      ayIhWC1QjxR/L9YKoS0Wfx+pFqiDhV5t1Ch7arz2WeINDxOJ1Ua1jNuYBrV7hWWpU1OkY2KJ
      W+09bvJcY14X44U/wWJ1cqyY1stegFo4+y0VRy3EqNajE1wjDm3yUTuLPtNiRbbxwhgeMo8a
      I8YQaYrYUZux+Xd16nEzIbhWF9ikHnqbxjLYi16jloqtp67XvCxqH1q1cPZ7WcSmFYhK0/tu
      6gDfrBAeZuUUdb6rr/tbVwe5QS3jtua+HaBMpIa7WdYIbuhcY17nY4UPauH+0lZRrBVCCK24
      vmmKsDe+6EywPp1gn1jOG2VDf7zJ6W2ReNeR0HykxsgtbugzpkNtxgZt3ytYktyt1FeaDcGG
      kSZDiFRw/SYwgkUJE3FX3+Hs/mhe7P84jj0mGcK+7sz681K87au4dfwjFgV50N5pIMsyLAQm
      N69TYFZOoH1HHqnJpwka0zL+RaAjP24cofmRpMWNaLYKaI1OcOeu9OQ53vjLdLraAtjiMiGE
      wNRdpJvcM11+nJXqBDc/Y1z0GZvsYGHQ9lV3pZOFjG30lSY81bzOYv0LgA09Z39G4d1KCjI/
      IXZWXzifyJzff8wtwGHIKrLLtVw/lc6GpQG43ckheuqfOV43E83jeABld0221ai8Sxng5fZk
      k7VqVMv450Z3hb0R3jyXEsKx9Eh6NrSBf2M6wTadcPMoN991pOpHKmmPnRr0faAIvJ9LsVKd
      4OZnTPCc+bjxKatWHKZUp6P08ApWfQpu8+cx1kLGnUNmEayGvZ/toVSnI3+NLwqFC3MPVELJ
      RkbaKXAJP4iDTygRq39HEKB+0gVH3XGiOitQ+MbyQ6/neeXNt5jmAXR5HE3dTPpOJ8JfTUHM
      m3xwoRqqL/DBmzEUqIOJnOXVdK0a0zLGOKBg1BSuoxn8QClhy6RnmJY7k6MHIvFsdPeExnSC
      +zI9QsnfV+/VD1ZQzY0Dn5M1JYTn20PJlkk8My2XmUcPtLYTXCayY6eJPs5qyzG1Ib2XvSG2
      7TNNrM/VmsRwzewDCCGEdFscfHuUIS+9rdjajOrFuPWxNAxa9xBLY+2SuH3wbTGqj7NQg1A7
      9xHTYrNrx/wtDIOWZRs7X4bj1+fWxPplR2tt1b1e0rnt4uVhnYS9oZ/QadhCkXxZslw2ba7Y
      8rIxfq9zbFN9AOmcSJjoXlufhdOFFwiPP2YLqd61bMZ1a4yW9AEM/Rjqfsyeidrjpa//JkYZ
      rjNqZ+G39KjJbzGmz5696FVznb8RKzxqbcuzQWUeImSdYBlrRtYJlpFpW+QWQMaqkR1AxqqR
      HUDGqpF1gmWsGrkFkLFqZAeQsWpkB5CxalrhAJY0XV1wD1rOF6WtmVx1h8zlAQZ9V1f+8GUr
      TDVGegQq1U+j1asX42tYM9lMmM9MQLAx7pC5PAh3g/Cgi3sQi1OuPhyCe4ZrX/sxuTam+tOG
      T0T6fdipPkuCUSfY0ZWAxSnoZYJNdaxVbdACeMeQp9Wi1Vbwz6+i6HwyhpET11kWRm4Ol3bw
      VkwWpcM3ckN7hT+35VbAv0iKWRc+j523JvBZeQWZ83TsnDeat5vQWr69LZyQmHyGfXQDbUU+
      KzwyeH/i78yFB3+hFBfm0i/6jIlqTwYLjCIJRQXkzEykwkTRpyFBn4bt3CN98UiSBm7l3E0t
      FVf2EXhyIq9+XAJ0Y0FGre02DIGU2D1jEKkzSoTeD/+R+DeA0yMNS2i2BYFr0Wq1ZCz4ueUp
      Kqm8A9w6z8UfQPvjXeAH7jYxY/Z01j6qeJKe3e1B6cbc/Vq02vvQKfgZuFScR68eXS2nXSyg
      X8/uzZKUatDO7V2sS3Dj+UB37JSgtHuGqAytxZ24H2wfwNBE+c2NYISjCtXkbZQhUfrFX5lg
      2uTHZ1MqoW/+DEJ2JIxDZVADaUzr906mXvJerz/sTlBdDeGGNH/rhkDVZ9n2W2NI4YhrwGKS
      LxqHgI3N5hRWGvWOzUKVxrWMG6cPs14LQs1hovq7EhJ/C7XfCl71b/wsvezU17w9MZSEb3+s
      E/oYy2tQU6FuGGbUZp7L0ln9cFGpcHQdx19PtlAM8L64xPmzT+L2hOVHvDj/G7p0as6W8Y3Y
      OX2StIaUecwoaUsHkPjx278TnwjqoHEMN3kTfZ3fjbU3Kyj/eBLts5YzaOQKrjy3mfyKCq5s
      G873Uc8xaHkWUrcFZOTF4A0wJwmtdi2BjWr9HmZFSAwZvWO4oq0gf4UHGTEhLEq6B1xqvuYv
      JWye5s+cT9UsySpHW36KP3bcxNT+09hcYnpcNtdd1/DVxaMsfux7dr72AZnQhJZx09ft153c
      6QJU3blD1ZB3OJW6AI8mXoG+c97ATw1VRXuI+I0rz4bG6/WwWsLX3/Cflw9zo/wUr3dJZ0XQ
      IpIeuHB9MfnfwJEVesczf5Fc4vxZNVc2ja2N3Rt8kTRs59LFAuiqosT4smrIzpnNbeAAOVF4
      qlSoVB14dNhaqifHkLZplplYRI/AoXgoldja/ovkD2K5ykRef3MoTkolTkPf5PWJcDX2A5It
      XPzGtX516KqA1CiCJrxN1oAPKdf+wKZx7YAWaP6e2cy7aVX0+P2fCO9iC7ZdCP/T7+lRlca7
      m001hUcxfqwTStuB+A0Gqk7zfTGNaxk3wZ30RQwaGc/F7v3p4wxkfErShWpO/zr98PwAABVE
      SURBVOOvbDz0fcOtSLd5pJ5JZH5/e6CKoj1RPDdoEekteYn3C2X2YHuw7cXkaX5QtYNDD2rQ
      wcjta1yu0tL3tS+5odWivbif51JHszxLAq5z5XwVj4zfSPEPWrQ3z7Hy/35PmPlbqEk7/5H+
      DZkbSX50BV/e0KItyealC1Pq2cnauaEtO8FatD9cIXvzAgbUCd7t2zdjzZbaxuLP0lXaOl7R
      bQEZWi3fLu0DBLJWq0VbUcSO157inx+M5wmVClXIZm7XdHZKyF49HrsvF9K3gwpV56Utkjz9
      9a+a/LGc4vghdHi0N9ufeJ13P05jf1S/ZlrPImZuAle9Y8jJPcaJSzfYMjGPpX0c8H11Bbsv
      d2y0H6TsNJI1x27or33SHLiaQPQWS8MP5vKxPyuPzWKPtpAYf8NyL1sX+j6jIuXoWcCX6Es/
      sGeOm74PoLSjzzM9STt0or4SZyN2ug0OpIdnOK9P66KX5LV1IXD4b8ztXFrH8ti+P/XvAO0I
      emkunUjkr28doVSSKD3yFn9NhE5zX2GkBfHGRqVOSzYT4qiic8Qh7L2nMi/6twwH1E9ocGiJ
      5GmfKbzqp6bwnf9lw8VqqL7Ihv99h0J1EBEvNq1V3qiUa6MMYFRoJ8hJZNfZaqguR7JxrEkt
      TE/jrMWZKDks76FC1XkuyaUSUM3Zb3OBTgzq50rtWuZcvi+QkEr3kZxqwczXHxCfUopUfZad
      24+D8xxGD4KaPsKQeP1oXlsOGecsp0dNuYHqs3yebs/LU/rA7W1MdhxCjLHSUimHD55jzotB
      9RUjG7PTZwqv/noDsSmGvmL1DdIPfcXEscNr7RTn802PAU0vidRqtQ18ksQcEHjHiLyGjkma
      IwDhHZNn8n2FuJKyQgT3dtIvyXPqLSbHZIobxvS8GOENgjlJNefcyIwRk582LDF06i0mrz0l
      yo1p6bW2UDuJ3pNjROYNfVrFmc0ibMiTNUsMnxwyXyQWVlguW/kpkRA2RDxpb+FYbZ6I8UbA
      HJFkyDdpDgK8RUyeVmgrzoh1Id1r6zN/qvAE0eONTFFR99i616iiUCTON+arPz846n3xflSw
      ePrJYWJF5g2L17aiMFHMr6kbwv7JIWJ+YqGoMKafWSdCuqsF2IunJ68T0TNNy2C4d/0Wi7io
      /sIehLp7iIipyavOvbV4H+/3UyEKE+cLXyd1TbmjUq7UlLuxe50X423yXDRuR3sjU8RMflp/
      feyfNn/GtFpxeV2QwDum6SWR8mS4/0bSiVCNI8E7hryMBQ+PTnF1CnPfsGF9XFuJpMpTIWQe
      IqSMHNqPbttfRpvu4cnI/EJQBq5kTRvblEMgGatGDoFkrBrZAWSsGnlbFBmrRm4BZKwa2QFk
      rBrZAWSsml+uTCrw027Nract66PL31ijFWYXvJFrunw2GvTQFHbBbLzWtmV/ONDrxtVovbkG
      mIiA6LXLjBpqdpq+JrpmDdNSKVZ0pRwySNs+WJlUqVIU7F4oXl53v9Kerdya2wxJVBbsFgtf
      XteIrSbqo70uMmIniuWfNy/Hz+erBXiIP2ZLxi+E2mQbcmtEOrpIaDRh4tPrWiGEJG4nhws3
      9Tjx8U1h0C7zEdGnK4UkhNDmrhb+ajex9KtG7LVUilUI8d0qr59IJrXV2rZt6QDNsNVEffQa
      Z83X0qqnWfAQav0+eM6J1f0buqaSSA5r+HrdnxSrXjshLFl/hx+cTGpRHL7BGwA4scjdEMbU
      DWmMcp7GJkpH/kaDrKddDyZtOIPWvLEzkfe0Q9M3lA15xkwNtgf8jjWR+ubNTjPY0LwWEecb
      zAZ9YXCvUT9pQX0OzDVonBn0v+YeoDG50QNzFeirf4JF7gp8505DUe96yICWHyvVWFJCBS3a
      KlDaNDBjpxVSrEpjhq3z3sZlUuu/8eq+hesomXy3SnhhIjG62l8/zdlwvFGy1Cc6V2il22J3
      mEagni4SK0xs4yOic7VCur1JjAeBf7y4aDHvltenXgvQhNyo3AI0jXRsiXBzWyIsKaGKawki
      2N4o/doILVSi1IdAu8VtqdUqke0ZsfY02bETcVcDd3J4b7wXgXFNd1wsUXR4P7lomDE7BCcb
      Wzzn/pbRJulf7d3CZXyYPMkTWxsnQiaNgapP+CzVZO2hz2Qmedpi4+THYB8gM5dzD6o+T4ST
      WlnAXzvu4rVpgUxcWwDcbHJHBxkD5QeY/+JORn34Jn51X/K6fOJCf8+9t95jdnPWyLcAr6id
      rKp+kx5KRVsMgzYkk9pyzp87AXThcaMqnFEK1UDl3ZsYQwqFQlETUlyxpFd637SgPr94udFf
      MLp84saFkh+ZRtyIuktmyzkwP4i4nttIimiG2ntLsenJ7G15lAvxIGVSm0Mld8tq/3N/ygf4
      lqKLxmS9FGpNHko14EPseXMJ0qzItr9IzanPL1pu9BeM7speIryfIyXkGOmRPc3n5JfnEBcy
      kIXKv3Hy/RdwaMhIG/EAZVKBLu70B8p+KEOn06FDw+MewMXv+L4cqnN2s6ug1l73gFF4UcWu
      7Xso1VWTt/7v7DPJb+jU+bhxgp2f5VFNOXtnu5jIeTZFF9z1haFMp0Nn4Yluqj6du/YE4J9l
      5eh0uiblRmUsULKFSc9MI3fmUQ5EemKmhKo7zrKBQ4l77D2y147B6QGtVsmN7o3d1H/oBznu
      r+tipAmZVOmciH/BIAnqvlycEkKUHV0qvO2NspbrxR/N5DwlcXnHK3ppS/tOYnT8ahFm1nGV
      xOXkhcLPkJ99p2Fi6cHbhiHLJjrYQhLn4l8QzmoEuIvlp+6jPmWpYqFR/nTiNvFDi+RGhdwJ
      FkJ8s8Kjvgyq4ZpU7JhiMc0oQXs+1sdMjraGFnaChXROJEzrJexlmVSZh4rqvcxerGTj2rYS
      SZXnAsk8ROiOZNNhbFuKpMrrAWSsHLkFkLFqZAeQsWpkB5CxamSZVBmrRm4BZKwa2QFkrBrZ
      AWSsmjZwgBISRhlkJ0M28+BECuvsWd+GFMcPaVyOU6ZNka4mMt+g3eboGsDyzBpVN66mLK7R
      fHN0HdiIZOwdTsbPYqBBl83FPcjEjllunIkegMr05koFbDZIqLbeAUrS2HPY8HdaEgceAplO
      mZ+TPN4dv5hf/7mQH7Rabn79Evkh4Xp515KPeXXiSYYlFlGh1VJyYCrXX7MsGStlRjPpHVui
      skvQaiv4Lq472412TClOYMk75rpwOW+PZrltFNklbSCTWpK2h8M4M3PORNSkkfQQekC3BRmN
      6tHKtCUlXM1zo6ubfh6o0skXP899ZJ0GnpjDfm0GUc/YoQRse0UQOfEqR7Prt/lK/xguXVrP
      BBdbQInTyAW8+pTBTg13SFzxPu38zSWrvFcWcmn9BFxsWx0ClZC25zCoRzH+7bEEA2lJB8zD
      IOkqKYuNyu+OuA6cxWajVumdk8QbZDpVKhUu/UzSkCjYbFT58yI04ds664P1TWA/FwsK9UZ5
      1jfXszxA39S69JtF/HYTudXByzG2mHVDIOlqCosDLMurNiq9KtMMuuPpd4MLl/XD61JpFsfz
      RuPb19Kx/0JbBb9W/qoZdrVoK9WYLh++d3gF73Rcw/JhDZ/fOgco3s3Hh0E9bTTD7IMYO5E6
      YdA9Di8JYOKm/2FRZjna8jTm/N9O5o1eTpYkkRk9iaiM/nx0Q4v2xkb8v9/JvDe26R0o711e
      nLeTH8bs4MrNkyyrOEiSSdYlm8MIisqg/7orVJQf4hVtDCOD38W0sfs67QLDd12heMtE/v39
      TqL+kMf4tCuUp8zj/52KYaYlHdN7h1kSMJFN/7OIzHIt5Wlz+L+d8xi9PAupRdKrMpbpxpxN
      K7g1ywGVSkUH17/QcfN7hFoS+C7ZxSeHgnhxdOcmrUpZO/mHdi6TjfrK0hn+9qfLzPtDIA1J
      NBbEj2ydAxSnJpKDmjHDB6GkHUF6DzAJg7LZt+Uq+L/I9F62YDuA5Se1aAuj8VUq8Y/J58Lu
      kVx4dx4TAl/nEEBZBZVA8ZFU8nAmdJZBHvWVuQTX5HybQ0lpVNXIlvZiwkRvyNvGXhNVU/Wg
      5xlsD/Z9vfEEGDWesU5KbN264gbcsqRjmr0PfZGnoy/yck5qtRRG+6JsifSqjGXuHWbJsPX0
      SStHq9VS8c+NPLFyDNFn6jSjUgHxL73BveVrmNXUmuA76Sx6KZHgD5bia9BXLtm2kiMT/0Jo
      I+d6LEhpjQMUk5qYAwQzcrhee6+d/3CCMAmDir/ndBXwhIb6Dn6Pw5G96TpoMQcUQ1i2K5aJ
      JqlFBTmAGy5GScd27U3WB1dSUQaQwDhD+OQZlQMUct1kebBnt84tr9X3p9EX2dIrqRsz3oqi
      v30VpVmbiBrbm0ddBzcw+iBjkS/3sN5lIhN6GfoAdgMZMaKUDTtPmhx0h/RFo4n3+AefzWtC
      wUwqIH7SSxQs2MfqAIMG5J1E3ljzFCsjPGhCb7wVDlCcSmIOQCIznAzDoG7zSIPaMKjb0/RV
      AwUXuVTPwJfsWX8VvBcQv3IazzqbLY6ju4c3kEex8cR7lSbrg3+F8tcAc0gyahQbPq3tyHZ7
      ui/6ItcvMYC9/0qO3Sjnwpf7eD9qKJ3unCJmZkyLtIdlGuHOSeInD2axTSxfxgY2qpMsXU0h
      0n8EaWMOsW+BycOefZTEolgCOpi8HBPGWRxCv28H0Ic/ELTustkDmBfjTW0Y5M/kuZ3g+HZ2
      nq0GqZTtMxxROYaRdK89HZyByxe4XC1RsC6ORBP73YYG40kVSTuTKZWqOfvhemqlbjsz+sUg
      1Oxnd3IpklRA7BAVqs4RpFtQm28R/pPRF3kn+iJvZ4ajCsewJO61RHtYxjKDQpj77xyyzt2h
      GpB+zObgwV8TOmoASFksHxxE/GNrOBY3EqfGXt8l25juPZOzoQdJWtDLfG1x4Nr6z+ScJLQZ
      C+jGPZLCHBmw8iTV3LcDGMOfAEYNNw8Vug0OpAfGMEiJ78rDJM63Ya2/A6oOPXm9cBQxabGM
      a+dL1MdR9P/XOkY6uDIq5RlmvKCGnOPk3AE8X2P3ltk47p2Kq6sXy1XBZiHSE7M2kRYzhFPz
      XOnQwZfY6smsTVlDoAWx7Rah9GXl4UTm26zF30FFh56vUzgqhrTYcbRT+rJy32bCVB8y3EGF
      ymEcO1zmk7h13sMjNfpz0y6A1f8YzqGXevOESoXmqaVUrjjMSl8l95I/IKaoiqsJ42pGBlUq
      Vc2PWMXxQ2r+PrP5r+y7U8XxqD50MDm2aTHvdoyLTWPmhQh6OKpkkTyZhwhZJ1jGmnkQOsFy
      CyBj1cgtgIxVIzuAjFUjO4CMVdPkmuDLly//FOWQkflZkDfGkrFq5BBIxqqRHUDGqmm1A1Rf
      2ENkgKte+1ahwE7jTsArGzhRej8iSfdHUZwvCoWCuQfqpRhE+Cx/fJsnLNCSktQR/ZOxhK70
      EMuMz4yDJ6FxOdRIMRfF4VvnPtW/r82wU53HhtC+aOwM4oWRe7lieCR1V/bWPLOt0gcoSw0X
      bqhF3yUHxHWtEHot3q1iuhuChoTPHgDNki81SqA2V+PUSIu0jutqEsjU57yI9fEQC/ZfF1oh
      hPb6pyJMoxGLjhoeltTwhmV3m22nQqSGa8Tz7xWISkkIqfK0iPZBjFh/TQhxTawfgfCJPi0q
      pdboBEvHxBI3BCPWi6ZE/B40D9QBWiRqITtAkxxbIjTqcJHawBN+Md5f9F99rnV2biaIYFNh
      kka4/xDoq71suQz9n/en8QU7Rv3e2cwdYodCEcKWMijPiSPU08HQzDngGbqRfEMTdWCuAoVi
      AL9bY9DgNdHfBaA8g2WDNdgpFDgMXEb6rdYtyq3O28orxqbUTsPgyD1cqKYBreOGtYFlmqbo
      1HFujh5WXxXSwPn8U3Tr1LQsZKN2vskm1SOQIc2QjrtvB7hVeJabwLO9ejbvhFP5uK+/i6Td
      zrQOGbw1dhFHvDdTJgRlW4dxdvscfv+xqdrjKU5JL3Pw2iU2Bd3iePSf+OQSQCW7FgQTfbwr
      f8zVUrp/IN9tb4U2V8lGJgycwTbVH/haK9DmLqfjh+PxmrCRku6RZKWGA+ATex6RFUn3ko28
      PPY9/rP4ayQhkf2aPcejp/Ln4/dfBGviYtG3aB7XccQgZq5w8CR0o1GG9hIFuWqufBRcG7s3
      8HJpzM6l4nzoZsfVOKPoesN2Wt0JliRjZ7d+h9Os8+IRSEBPG2xsbbGxGcK7F6+zf8wFVs8Z
      zbDfpwFQbrZGt1YP2E8v+EvuOYDjfP5JFQS/zGxPW2ycxjAvzOO+y3/6oxhSqzyIeutVutqC
      bddXeSvKg6rUGD46beEEWRu4VeikKio2/YPTU3Zz7UeBdPVDusUFsfS4DrjGlcIqHCZt5dqP
      AnG3iFX/t4AXN5a0yI5OJ8HRDexxeptT5QLxw2nmFI+zYEd3/w7g3KMXGiC30DiS0p3ILL1s
      6flYC3q5j3SsXZ1feZCIno/TP3I/imEr2Pu3Kc3PuKiAXIAna1dhte/4yH3WAm5eLwAeoaPJ
      1gF6ewVcv2kpf1kbuDV0ce9Ph1eWs9zHCRvApp0P4yfYsmXvV4AfMTd+JCXcTT9FwaYdvj79
      Sd2VTl0l6MbsdO7aE557g79M76pfKWbrwoSQwHp2yg/Mb0UL4DeDBV5w6uNPOV1nxFOnayIm
      P57I+5fBJ3Idq6b3w8W28cPN6O6BF0B+cc0640pTseEWonncAygze4Pr7Xnh9mT942Vt4Nbx
      RKduVNytNNNd/vHHu3S0s7N4vFZbBe3tULfAjk0nNzzK9buLGKn6sdLETjk5cSEMXKhsTQjk
      xat/nY97cQxTXvmEwns60N2j8JMwxixvIiZv3xENcLH4EtW6fNa+82kL8vXj+elqyNzG9rxq
      dKV7WbepoOnTGqDv9Aj81QXEvPkBF6qh+sIHvBlTgDo4klle1NM6VsvawK2iffAcwo78hbg8
      /ToT3b0TpKc5MW2MF9zaQoidL382pKEr5VD6WcJnBdfb26dRO32nE6H8O6v3luodpPoGBz7P
      YkrI87RHx/FlAxka9xjvZa9trU6wENri3WLpqD4G/V29vm/PYVPF21tPGX4bqKvfK4QQZeLo
      Um9hbzh+2ML5YqQawfitokzU19etN8xZli1WveAs1KiFc5+FIvaPrRsG1eZuES8P62RSnmRx
      2Ti8VlfruFFtYHkYtDlIl5PFQj9nwzX0EwuTL9eM+5dlx4ppRi1m5z5i2vpcoTWk1dUJbsyO
      KMsWsQYtYOx7iWmx2aJMCCEqdogpJhrE8mQ4mYcHWSdYxpqRdYJlZNqY/w8bkx3DxOe5dgAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='164' name='Double check' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Job Family Sheet' width='192'>
      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
      UYA+IIRAL9fbL3hFURbXMguwA2IXLxo42yiTehDk6Xy/En+FoSCDYoeeIJ+acgWHjYKsdHKK
      q6kX2gQPl983oKpKCyi1OuHn+d+ijQ+mbgA8vNzfDCrYuLDnB745cItOzXQkr9rCuGnTCPNS
      UFJqQKpyxlUlx2AoRxBEWAUxCpENKzJcXdQYy8oRJAJ2QYIUO1bk6HUuv/piOiyVLHxnEjfU
      Dckx6vlu3kx8am4+5uy2r3hnt51JQyOQeovQq2+R7qTEXyulrMyASK5Gr9VgM1VSZqhCpnLG
      Va2kylBCpcmB2lXLqfUfs9YykiXT+yECynJOMW36t7Rq6kyu7nFmRfXHXllGtU2MTq/FUW2g
      0myvOXySKdG7KCgrraT4ykE+217EN59GofiDHwCJRILk742zrONPcn9t0Io8lv4QzaDPY3g8
      RME4wGE28NP8Nzlc4oaxqJAXX47k0+lR+HcYwskdy4l4dCA3zmbx3MzpLJ08iGbjniN+6R7a
      9OvKtSsZfLRkHRF+dw5IRGIJrioHJ44nEdx+KLL/ek98WnRlzJihgI2dH09gu4cztiPzWXmq
      jPJiE1+u+Y7YOa9z3aggx6Bi3uwJfPPBAsyWXKobjGDIf00WlaVZnD90irDRK/l8cARFF3bx
      ztxonOUmGg5/H/+UT5h7VE6fzp7EJ9uJXTSUp8Z+w+fzpyO+9iFJ+VPo5PPHXua6l//h5b7n
      AHaziWKjCJ3rndNbQ8FlVuzO5e1PZzKoQSnrd51DoXLhiciX6eSrpWtkFG28TGTklyES+TMy
      6mXCgrT0GT2aNq5G0vJ/7WhnzDvL1tMVCJUGQhu6cyzh9C81bUndu5ypU2ewOu7CnTxlGRw7
      fok2vfqiv5XEjotWot6fz9rFs/BzkuLm6YLdWsnV1Ou1oe938A3tzWsvd2feuF6Mn72B2E3L
      Sa12ws/FwbqfdmCxQ7Oew3lryhSaVZ3lh3XbcYt4guB6OtTiCq7euPWnO7uOh4/7zgAyZz2t
      Q9ScSsmgfQ8PziadR6OVoJGaKDFaKCk3owtWkS8WIZNKEYsltXortQWI5MjlYsSSWh0WACo5
      diiN8I6tUcklFF48hjHkSZY8KTBk4oucn/A1jz/Slp8X5o36jWP+B7UzQCKAnUbdJzAvtJC1
      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
      k/vSbwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Emp FTE ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Job Family FTE' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CTO Occupation' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Emp FTE' width='192'>
      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
      A4D0jKMGLLEjAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 12' width='192'>
      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
      RGQZjgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 13' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9Z3BcV5qm+dz0FplAAgmb8B4gCJIgQdGBJOgpiUaupFL56po2NbsxEzE/
      NmI2tnojZiZidiN6eqemq7qcVFXyosSiJHoLOtDAEt57b9IgfebNuz8AGrkhp7toSsznDyIS
      59573HvOPed89/sESZIkokR5ChEEQZA97kxEifI4iQogylNNVABRnmqiAojyVBMVQJSnmqgA
      ojzVRAUQ5akmKoAoTzVRAUR5qokKIMpTTVQAUZ5qogKI8lQTFUCUp5qoAKI81UQFEOWpJiqA
      KE81UQFEeaqJCiDKU01UAFGeaqICiPJUExVAlKeaqACiPNVEBRDlqSYqgChPNVEBRHmqiQog
      ylNNVABRnmqiAojyVBMVQJSnGsVX/TgxMUHUaXSUh4EkSQiC8LizcQch6h49yqPC7/fj9XqJ
      i4t73FkBou7Ro0T56legr2Ki8wo9fhubymO5/tlpOucWkKtiKFm7gRVZCSD6abt+nlFZHtVr
      c1HgpuHUJfxpyylPlXPlbD3le5+h59wFeqZdCDIVaaWVVC1PY7S5loutExRv2MaqrPiHU1LJ
      ya3ro+SsKUEvg7DPRVtfL86+LgYcQQS5hoLKLVTmWe9e4p3mWtscq1YXoQKI+GmqOU3bqAN9
      UgGbN65EGq3nWG0n4YiAQm9lY/UmEvwDdARSWZFhZOjWZa63jqBOKmLbpnL8/bXMx28g3wL+
      qS7a3CYSF0aQ8lZh08vANcKfTl3G6QkCoFSnUFaWTExSJulxBlyTA4x4VMSGhrl4vZsAoDan
      sGHTRsThWi43DRMGlMZ4NmzZTrJinss1l/GaC6leW4xGsTjm+cdauDSqYtPqAtSBcW50hFix
      MgNlaJ6Gm+PkP1OKNN3D+XNXsS9mBW1KERU2FVJsHjmJerxz/fTM6DF6mrjUOgkI6GLTqd61
      mTjVw2nGByLipbthgKSKEmIApAjd149T2zULQELuWravLwAeZBEcCTLSdJqf/9MbXO2aArx0
      NbeTVL6DLcsTOPnWuwz7we+a4syJTzhz9BTDrjDgo+PqWf7w7icMj09y7fxlHEEXHU0NpK09
      yI5nCqg99BHD89O0906RZdNx8qPTzD60WjES8vUwNOEBwD7RweR8iPnZIGt3H2TfzpUMnj/L
      cGApuSQx2tPLaPdVmoe9SKKf5lOH6Vflsvu55yjUTVDTNIxrtBVD6W4OHtjH6iQ3F+r7Cc72
      0zm+gL3tJGf7NWzevYd8xTBX2qdxDDUz7Fp8RHB+iM6xeaa725j0Lb2JGpLZvutZVls9mJfv
      5bm9lfj7+5hc8APgmRujb2yGmcFpklZs4ODBg5SY3Vyt62JyfI7MVZs5ePAgz+3YTHKMkpH2
      JuxKK97hViZdgTu1EZjv4/jpGrrH7BCYob1rgrAkMd3VTvdoMy09DnSWDKqf3Ue6SU3e6i3s
      WV+Ge6qX0Xnf4j2cY/QMzTE7M05GxS4OHniePNUgZ5smHlor3o+I6KP+7MccPlaH586vApnl
      m9n//G5segFTYvydkf/+M0DYS3e/nYLS7LudU5Ch0RlITc0mSXmUzpEAKm8z87FryPMP09k/
      TXa5ErlCDtPdnG1M4c5CQxBQqtQoZQKiIENlTGLngX3UvPvfMWU+g14CHsYaSZBhs6XTMTWO
      lJLOSOcoqZVVDPX1oFKrUaNCFhGJLGVUQmJoYpSC8tUMd9zCb0qncU7Hi9sK0AkRDCs2Y/bJ
      CbRA/cl3GdELBEMKVu3ZAKEBwEdn4wQr9u4mMU4gcd0uUoMyZqbuk0+ZAr3BiE6jQq0zYDQq
      kAORLyV0UXv0MK0GFUE0rN2+FrpqqfnsEI0GNTpLKjuf3U9cvJmRyxdJWbGLBL0SSQJBAGQq
      istyGWpswbbOtHjLSIiecTtFJaWMDLYSzlmP3mBEo1aj0ekx6DQIX9E4Yfc8Fz59lxadgCjo
      2PqS6V/TUv86BIHU0nLyOns+95tKoyfoHGaaFJ7NiL1TivvPACoz1QdfZsU9F917YwEZAh5u
      XLiJIJOj1ISoudaCBAhqI1t2bWb08in6l0Y9MeDj/KFf8F//4Q9kVu8lSSVHkKvYsGsHnvYa
      OiZCf4Za+GqsmTkIczPYZweYiS2jxKLEOdXF4bff4I+HakjZso1MzWLaiKOFa3UzDA0N0dHW
      yLjLDxJIAsz3XOWN3/0zv3vvIm5g3YGf8IOXq7FYUihIu73Ak6FUCtzZYhBCzE85EBRKwuGl
      Mj7g/oNcLiCK90hAAjCz+aVv8719zxCXYCPPFg/qRHa98j1++tOf8sNXD5BqXODChS4qN1Tg
      6LvKJ59ex33PI9VxeZTnSNxo6EWUIOgapLGpl+HBQVobmxm5Z8a4jUwuR4qId/IvAYqYBHZ/
      6684sKmU+LRCchN1D9YgDwGZTENScgKKL/XsCOPtjcQvW41eefef/6JFsBQJ45yfoa+rmxmZ
      jWz5AB3zGjZsXEP56vUo++sYWqo7c3YlVeWxBBZnTRRqLdte+Vu+t381ffV1TI718dFb79E+
      4UCuNaHXPMR1uSKG5ZkRTtVOkJWRgACYkop4+fv/hr/60XdZX5C0mC4SoPN6F6W7q8nLzqOq
      2ELHVIQ1KWFOXmzGH5PLlrVlJMTq71SgLiGfskQ3V5uGWOweavJXpNN07iIDIyPUnfuMhtEF
      krLyGG6+zvDoCC3dE8THxgAijtkpJienmHd67sxCi8hJTDMw1NnN6MQ4vX2jaE23R1gZRtsK
      So2zXGrqBymEY26WyclJJqdmcPs9BPwiurgMrIKdkQUvgvj5uSQ5Zxny+WFcoQCjLbewrd9B
      Xk4Be1Yn0tgxuVSWu5jj4pjs7mB8YpSOjiGMiRbkS/9LKVlNWrCDq53zBPwevIEwfq8bf+iL
      d3l0hAI+vL4gRBz09UF2RsznBnL5z372s589yI0EQcAQl0Ka1YgUDDM7Pcz0gkDljh0kK0PI
      43JZV1lCWmIiZr2EypyFRafBmp5DUWEmsTHx5BVloVVqSc7IITPdhiE8iyKlmHRjgLaeWVZs
      2U1pquGhvAEtlQKlKRZZIERGhg2lHARBgSUpEbX8nmRhPzMRM5VleVjj40m1JeJfkChcswrV
      XDfNbT3YIxa2bF1NrFqJxpyERa/Eao1nweknISUBjSEeW1Y+8ZFxmlq7CZmL2Lq2AF2cDYO7
      j1udAwjJ5Wwqs6FQhOlpa2d4eIQFSUdKogWFDDTmZOJ0cgzxScidwzS39aBOW8bashxUchmG
      OAsxOg2xCfF43H7S4lX09/QxNDzM8PgsmrgsijKUtLf1EFu8iYo0FTJDAgb1omyV+jiSLbGk
      WONQGAxo9KmsriggKT6exPRUZA4vMYmxKAUZprh4DBolBlM8St8YDS19KJPL2bgqE6UAxrhE
      THodScmxOO1B1NI8cyE9QfsQfrkJo1ZBOBwmFAqh1WofWgvfbWo1ltR4ArNjTC1AnF6OX24i
      wxaPcinJ3//93/999BwgyiMjeg4QJcoTRlQAUZ5qvnIbNBwOP+p8RHkKEEWRSCTyRPWvrxTA
      /Pz8o87HQ0EUxahR3xOEKIqIokgwGHzcWbnDN3oRHAwGiUS+fIQU5fEQDAbx+XyYTI/xoOwe
      tFptdBEc5enmAYzhJES/i3OHfkWXoZqf7k/jvX94C9vzP6FU2ccvf3GSV//Lv4emixy91EpI
      jKBIKOT1V7ax0F3LZ2caCAqAPo2XXt6Hv/4t/vHECBmJWlzhWH7ww+fpOvoetcNubOU7eHXv
      KtQPo6QRB+eOXKN41w6StDJ89lFq6luZv9XAjNaCRohgzlzD8ztWoZWB49YR/tvJEZJjlERC
      EXK37GeN1MA/Hh8gMUYJaKnc+yzW+RaOX+9GRCApr4KVmQEO//EiSmsMgkxO8ab9bCyw4Bmo
      4/AtP8/v3UBMcIy3fvsxTpUahSQi6nL53uubsbfXU1PXjicoEZeziudWmHn36jjff3Y9hFyc
      +uwKZbuqSdJ+2dJMioiceueXWDa9RkV6LI6RRt75pJsD+4r46OOzKNU6JFFCl1PB3ly4NqVh
      77pSQs4JPr3axs71y7l5/gzdUwsoNCZWbtpBWWbsX+YuSdjL5WMf4s3cxY6yRJAidFw5wsW2
      Kdyzk5jKD/DdvcuBB7IF8nDzxPscu9ZL8sbNgETQ5ycckZAiIn6fj8jCKKdO11H6wl+zNilC
      b+8YknucE0dryH72b9mSo+T6h7/gyKUeNisjpJZu5a/25/Dxf/8H2iYEciu2YSvo41BNF+6H
      JQCZmZR0JdMTDpKyY7GPdaNJyCbW6qLqhZdIUcxz8p2TjPtXkaMDKRyiqOol9i834eg8z5+G
      plidGiR/40EOrLAAAgqZj7M1E6w98Cp5RhmTUzMI4WkyyrdQvWMZCkCuVCGJflp7HVi1XvpH
      nZRbIyhi83nlpS3o/TN88vtzTDlGuNo6w44Xv0uc0kNTXTfeUJhAwE8gEIBQAJ8/8IVT4rtI
      kkTQPUT9rTFW2syMtVyjZ0ZHJBLGnPcML21dQWB2gD+c6yCcmUQorFy6LkIwFMY7O8qoZOX1
      77+I6J7FGfqL7PpIUoTpnmZ6J13E25YqS5BRtOEA+RVOTp88Q35lPreHkAeYAeTE5W/mFWWI
      WvdXp/DMTjDj1bPLFoNSCUVlZjxDN5lyx1CdG4dCCcVFWZy5MoSvSGR68BZnTo0wFIpndbKJ
      7JgYrn9yAXNaFvgBzZ+jKr5MRnoWl3rGWJYO3UNQuj2Ri5fHuFZzDpPkYlZlpfIe9bVd/BPO
      Gy5GXCZ+8DdbYHiAjsuf4O/UAGY27t/GuqpSjp7+hHa1jsT0InLiQgw01vL+XCtymZzyrS+Q
      p5vFLmlZmZ/K1f5uyq1J+GY6OfzOKFP9g2Rv+w4WxxyK+FSsBiVgpmL9GrD3ERxr4d13RyAS
      ZGhSRsX/pHzKeBuJjj6GHDH0TcVhS17sALPdtbwzVkf/oIvq13+EQj7wpWuNybksH73I4UN/
      Qmc2UVJeifCwDBMfImH3BDd73awsyWD4C/+zj9zCbyzCZrl7En1/ASi05Bfn0zJydukHOQqF
      hD8QJCILI8WYSIiJxajyMzcfINUCTvsCGr0Zo9rNxKSX9BQ542NTGCwZKBlFZ0ogu2Q55Wt3
      kGoUcTh9rKiq4sr/OEzfzGYstoejAK0llbSum3T1iyizCrCoQKk2EG/LIEEjZ3lCErH3mESU
      Vb/MvnyRE386wYI/QBxQuuVFXlq1+M2CFAmzINjY/0IeAdcMpy5cw6RMJnf1NnbsXr505B5h
      6NpN6huGGeiRM21XUbFiN7rEEna/upW5hjPUTjhRGU0EF0bxBEW0siBd12tRpqSitq3g+weq
      IOTk6OGapf4oMdNbx8maZuKKN7C9snDJHkeHLVPJlU8vEJNZgKF7saMnFG3kteplNJ/7jBGH
      C1WKhoDPRzgiIYaDSBEIRwTSV2ymYLXEaG8Tt251kZm0BtVfmAAWRtpoaW+jO2LHEa9ga8lO
      dCo5EGSka4i0VZUo7inTA38QcxczZauyOXnmQ4ZVASwlK7BYstn2TCZnP/ojLZoIMz4d3/7h
      K+zYVMyxQ2/QG6dmyq7guW+Xo2xuxRCbTG5+HlogaB/ixDsf4lJrUaWXkZ3wkIZ/AJma3KJY
      3j89TPXOQgQCKLUm0rNzSf0a8xSlPo4Nq1M5XNOMJR+6a49zaGAxcXL+CmTjjQy6JJQyAWWs
      DaM2xOCtyxz29CBDIDHVhnMmhp/8+39HgkrC2XWS8/VLRmaCnPTiCm7d+pDuyLdZk9DL4UMf
      oySAT53KiwXyr84UAgm5q3k9d/WdX24baMakZjJ+vJnyDWuZ6r470gtyNYWrVtD04VXcRTuJ
      953jw0MjEA4Ql11J2DnC6Qv1CCoNyFXY8lci/wvr/ABxxTv4P4p3MNZwjEZhJcH5EcaDRnKT
      gwxNx/CMVfW5Se2Bt0GDPjcBSYlRpyYSDuByuRElGVqjEZ1KQUQM4l5wExJBpTNg1KqQIiHc
      rgWCooRCoydGp0YMePCKSox69WJGpAh+rxuPP4RaH4Neo/yzzbpftQ0qSSI+bwC1VotcJuHz
      +FFqdV8yn40EvfjRoFPJkCIhPJ4QajUsLPjufNug0hnRySMseLyIkoBWb0QtF1lwuu9YUSpV
      GuQKJTrtYsVLYhBvQARJQKvXIJMkAj43EaUetUzEvbBAOCJDozegVYLHH8ag04AUwecLoNJo
      kMu+XEOSJOH3eVCqNPi8PrQ6LX5/EI1GQSAMeo1qsexuH0q9HoI+3F4fyJToDQaUcvB73fj8
      IQSFGoNRj/IrnvOvbY9HtQ0aDvoIoUJJmLAkQ6MS8HpDaPTaOwt7rVYrRM8BojwyoucAUaI8
      YUQFEOWp5isXwXNzc486Hw+FqC3Qk0U4HH6iDOHgawRgMBgedT6iPAU8aWsA+BoBqNUP5Sw2
      ylOOJEmEQqEnqn898DmAzznFwLiXvKIMFkb76J90EpucQ2ayienBdsbsIRJsOdgSYhAI0Nc1
      iDUjG6MiSF93DwtSDMXFWaj/zFtr/yu4pgfoGZxBREBrSiQ/L5mJjhamPWEQZBgsaRRkmxho
      6mQ+uOi5QR2XzvIcC2N93UzYvegsqWTbrCzMTqMxm1kYH2Rszg2CgoT0HGwWDWMD3UzaF70A
      aExWslKNTEz4yMpORSELMTEyg0xyMTy1cCdvloxichINEHbT1daDM7D4fJ01gzSdhGSIJVan
      xjk3ARoL9sEmppcc3+hNqeTlpxCyT9A/NEFIYSQ3P5uY8Dz9Hj3ZVj2EFhie9KASnYxMO+9s
      5SbYclFIQTRCEJU5BZNWAVKY2bFpAqKLsalFdx5ylYbsgjJitQASIa+Dgb5BnEGBxIxcbPEG
      5kc66JtYLJNKF0teYS7huUEGRueQ6eOxpd51OvZnRRKxj0+jSLJiECKMdLcxG1CRmZtHrF6J
      gETY66CndwBvRE1WXj5x+sVjygdbBEsiDcff5P978yQe5xCHPjhE31A3773/CSPTgxz56BRD
      w+2888EpFjwuOi8e4f/9zQeMzLkZrj/Fp1faaDn7Eec77TzON/Lh9jrah+aRJJHBpvPc6B6h
      /txFZgMSkuih8dyn9NrnqD1+E5ckIUkSEhLu4QbO1PUTikTob6ilfXiK1hvXGZ2d4XrNNewh
      ETG0wMXjx+gfn+TC1et4g+LS9eCe7+aDX7xD17wXSVrg+rkruEIgSXNcO16H8951im+MCzWt
      +JeejwRhxyCXbnTjcw9z9XovgXCQm1fO4PDfzWMkNMWJI6eZcQdwDTVw/HIXwalmjjdN3XPf
      tsX7Loxz/GoLkiQRds9y8XodY33ttA9MAyD6HFxvaKaj6Qqd4wuLz7gnj5IkcvPsp7SOOogE
      nFw99SndUz46Gi4zMONZSg/iXAdHTtbhDIQZbb3EhZbRh9CqEnNDTfz+n95h2B8iONXG2ZuD
      zI13culaJ+EIIEkM3rpOy+A0c91XudB21znTAwhAZK7jNOfaQmg1gEKNQQkLLhcKnQm9KYu/
      /g//jrU5ZqZnZpgauMW55gliNRJEgvR1dZC8bCsbSgy0tg3y8Lz+PAByDZmFZVSuWUNxppn5
      WRfhcACXw8683UFYpkElAzHkx2m3Y7fb8YclRDEEkQgRmY41O/awItNy956qWJatqmDtuo1U
      FerpGpqFcBDH0vVevwiCiuLyLNprbzDvX+xIcbYiKivLSIu3UV5ZuTj6LxEOeu9cHxAF4vMr
      KdH28fZ7V8h7phKLVo4YCuB0LKbxhCRcLTX4CnexZeM6Nj+7n63FSXx5tFGQkFXImvJi4lOz
      qaysJCN+0YdPVm4usxPjiMD8ZB+K2CxMKnC7HNjtdpyuIHf8nyy00Tmfxc6dW6hcV0XVChvt
      t7qQImHczsX06I0M1l4no+pZqtatZc9zB1iZYX4IjRrA6ZHIyUhDBqiTy3n9+UqkgBcUykUn
      YJLEmNPL8or17NhSwdzo5J1+eF8BBJyTHDnWTMmaInR4sc/N4QpqyCzIBOcMLm8I53ADHxy6
      SE75SlJyVvCdH7xIvHzxwaIoAjIEBKSw+FhnAIJ2ao68zc//xy843yNRXpqKWhuDLTOThbFB
      YkueIcMEKm0sGTk55OTkkBZvxJS5mp3rS9CLdk589CF1/V/lwFFAqZQTiUigNpKVnU1OTi5p
      ibEoBBCMGZSnCTS3D963DtQGC1lLz0+O04MkgkyG0yMiXzpjVupMpGctpkm1xhAOBtHrbttz
      qNAblAiCDCESeaA6V8Wmka+co88ZYGrYTvayHOQKNUlpmeTk5JCVkYLmtgC8HsQY0x07IYVK
      A5EQkkJDsi2LnJwckmLVhIIqdNqlLqZUY1D9Cyxv7ouG7JIiTPcYLcnUBnJy8/A6RwmGFg9C
      w+HQoh8ypRJlIMDtvaj7CkASZOQU5eOfHsflnGOge5AZr4qswkxE5yx2xwQf/ur3+DM28uqe
      NRh0eoz6JXsemYKYGCMu+yRzdg/G+Lh/ifHRnw9VLFX7vs1Pf/p3/Pj1/WSYVSg1JjJyCti7
      ZxNTtxqZDYBaF0tmXh55eXmkxeuY6m1nSjRRVrmJDcXJ2OcdX7p1JOihrXeORIsB1DFkZeeQ
      l5eLLSluyfhKIL24DHG4lfEvO1z7fDYN8WQtPT8lTodzuIUuZwrff6WClms3mPNLqHQmMrOW
      8mg1EZ9TxFRTLXZviIXxVg5/chGnORnVaB/2QBjn1CQBjfqOT5wvIVORVZbDWO0FhlXZ5JiV
      IF8UQF5eHtmZqWhvCyA+n5jperomXURCbjpbO4lJTEFQaklJzyIvL4/kWDNZhTG03ujAHRSZ
      6rrEkTMt//K2e0D8kx00jASxpacji/gRI4u+IE0aLQseL+6pSSLxFm4PFfftj5qYZKr2HmBh
      vJOItoc1W7YRG/mEo2+fpnjH8+Sr5zijsaJw9vHu4TN8f/8W9Gol6dlZGDRa8qr3MXzkNDci
      ObzwbAZfZ971KDCYE5AM9+5AKIhPSUItF9AnL2NT8Rjdg25kDPHOz3+ODNAac3l2/zLGTh7j
      yvEFYjPKqd6UybjoQK/WkGD0cOjX/4xMoSK7fBPLMpNwdV3h97/558Xp15zOrmeysCaokGti
      2bxxNY6Lsyx651OTkJbw+U4p16HytPPGz1sRAFVsLiXZOlauqcQSo2JFppux8TkU/jnef+Pn
      yATQJ6Sza88ediyr4ZM//oaAOp7NO3cSF6vnmfwePvrdr0CfzJY9Oxbt4JU60hJjAZAp1SQl
      xCMTQGlMx6QZIC0vGRkQoxa4cOxtGk7JQKVn7bb9VGTHgtzCzmfXcuHsh1x0Q37FJjaUJtMb
      SkSrud2lBGJLtlPhPM07v7uKwpzJhs3P8BXvZX8G5JiTE9HLZSjNidhrDvOGW0XFlj2E5wdo
      cCjJzcvks9OHuB4wsuWFtXeu/EbbAkV5sog6xooS5QkjKoAoTzVRAUR5qvlGR4n8JpThm8Rt
      x1g+n+9xZ+UO3+hFcPSDmCeLJ80YLvpBTJSnngc+l5rpu8Gxa/O8+OoWBmo+40LbBLbl29i5
      NovGk+/RMBwgr3I7mwoMXDl5jM55FZv37qHAsMBnR04wJSXz4rd2YVE9ppOAiIObNb0UbFxF
      jEIg5JmnvqMLR2crg54IMpmKvMpqqpalIxNAmrrFqalEymij0ZvO9jU5KGfbODkRT3Weiosn
      j9I3G8SSs4p1uXIunr3KrDeMIJdjSC8kVy0nOzeGVncK1SUJd/MhSfTePMb5+hEiMgGNOZXN
      27fhbTvKhbYZZIKAxmSles8+xP4L1NT3IWoTWF9dTdx8Ax9f7FzaSTez8cBuiq0xTHTWMUYq
      FYXJeB09HHnrNC6lHGRylm86wOo8M86RNs5dqsMe1rNh514ylWM0DGmpXJWOghlqT46xbGc5
      Bha/W+5vusil1jnKN2+nPOPebUsJ98ANbniz2FxsRUaE+ZEOai7dYF40UFG1lbIMyyPzpiKJ
      burPnqJpaJ7M8i1sXJWNWpDob65hPqZ88dxiiUhwgdpL9eSsfYYk/eJ50IMJIDDLZ++8zaWF
      Ivbt7Oazy93sOLCVTz8+SUHOQZyyTPbsUPPbt45TEFdFwFjEavUNTl64hU/TxHTcRlZ6znDo
      YhE/3pb9eA7DZGa0mmlGxt2UpBuxj3fiFQ1EMPHcd18mWZjis7fPMpT/GlkawDvL0GwM+fJh
      Glqmyc1OIt83x9CslrlwLVMJG/nB88kM1DURtqzi5e8VcPXkCczLqyhOUXHx8BmC3gAjc1+2
      f3G4RCp2vciKrDi6L39GQ+sgVr/Ehr2vscwWs5Rqig9qZ9j2vR8Q6x6gccaB1jFKVtW32V54
      z/cakoe+W7foVgYpKUwmFPCiT1vDwf0VyN3dvP1WDWmxK7l4oYvNB79NvDTJ2Yt1GIvVjE/H
      LInJx8TQDIVLt4z4XdT3OigvtNDfP/w5AUghJ7XNdkLaGaYzd2EVBzl6oZvNz79GvDjKmWsd
      5Ng2YHhE7xZh5yzBpHK+V53Eqfffpt+WSmqwk7MX60neWHRPygjj7Zc5c2WI5FVr7vx6XwFI
      oo9b5z7Dm7SSFMEHxlRKkuDoJyfQp68jyZJG/o54Go6/gVtjxJxUwO6MOd74L2fI3BiDvc9J
      TGES8WoDrtk5wjwmAQBpaZk0TY0jpaUx2Gsna30hbW31TI2PIkoz+OU61F9oOEGhYUV5Hr2N
      bSTmLHYXo60Yjp7jE4eNrNwCbJovxnHUUlFdBdM3vjojgRnOfvwOV+QBQto09uyzMXflNMcO
      /YGrOiUGSzY7nqsiIy3MySOHycnKJb8wjZADbhz9Pf01CtBY2fncDqyuFuZTN7BRbKVpxE+x
      KkRf3Sl+M16LayHImh2voHH2oUgtw2pQoxAy2LrNSmCqjq5rR/nt8GUEvPhDhXeyJ8nlJCpd
      1DQE2LlvBd6guORbB5yT4wTjEslTzzM8OoM63Icqu4w0sxqBLHZWpz1SdyrKuBNQ9XEAACAA
      SURBVEzWxUmIficxFhsmtY/6xjGKi7Kw3ymQhHe6h+ZxJcsKkz43O91XAJ7ZQY6da0admsT8
      1DzXa67QOm3m23+3lQ/+68f0T1aiGzjCu2dG2PXjf4tBowCs7Ny7gt/86SKFGYudRkJCkMke
      q6Mxc0o62p4WZqYjuBOLWR0jp8E9R2dLE2a1mpLqKlK+5HZTQB2fR46+jlsdE0g6GzprAa98
      Nxv71BDXTh0lYPgha1M+XzJdTAyB6a/JiDqB6oPPkyMf4rNrc8SZdMwZk9nz4o57ZgBIePZV
      yj1O+louc/xsgI1JsGbv9+7OAKKPq2eaGXTrcItTzIw1krVZR07FDqq3p3PhyDESkhNQhcaQ
      BwN3JDo12ocUhoK1e9m/uwQlw3z8q647z53ovI4zfjWrlE1c+vhdlu37MWttiwIYaKulqwdm
      lU5m9AL5z2gIhW7bVkaYHexGkbEM6yMIA3absN9NW0MTyas2o504x8XGAZL0LubiYtlWkoBG
      KdB6rYau0Qih+VkiiQWkVi3ODvcVgC4+l5/+x/+LuYFGfudqoaQ4i/5bXbTXdyLEWTGIA7z5
      h3NYN+0nQRlisquGj8+PUpgUIjY3n+VZLk60X+K6z01hVcbXG2M9CuR6luUrOHx1nA0bKhEQ
      0VvSWbvz2a91jHWb9ILl9LXUEdGIDFz/jOaFeLKsOvRx8RjUXyNrSWJutJeWFhdozBRmp97j
      a0cgxraCku5DXK7vxhr0MNjTAQ4dyFWkxAmcv9COrSAbrcJAbKwBOTA52EFLaNHYUKNV4ojJ
      5VvVq1DJIjRcvcDYbBKgQqFLYPuWMt44cRbrvkp0nhNcuxFCL87SPa5kw4qvL7AMGQv2GRLN
      FgK+SUIBH6KkQfANMebN5uVvr8AgC9N9+RwDmo1YZ2o4V+slJjRNx6SCAxkZjMyAzSwwPhch
      Mcn00Gb9oGOQj9/7FHV+Jfnz48hsVfzvf7uOydaztCqyIbjAjFvO8h2vke9d4NKpS+QWpNzp
      hw/uGGthlq4hOwWlOTgHO+gec5CQXkSWyc/15r7Fd0m9lYrCFCb6u5nwyMgtLMKqDdHZ1oFT
      MlNenofmEX4R9lXboBHRx8jwDEk2G2pFmPGBccy2DHRfGAok9yR9bgNJ8jkWVCkkmxR4pgcZ
      F+PJjoOejk7sPhFDYibFWYnIkZiZGEdltmLSLU4jomuc662DizfUJ1BRkoNKLjA3NYZgSCDO
      oMa/MM3IrIiJOXonloIpKzRk5xehcA3RP25HUhnJK8xH7RmjtXcCcanFzMlpxOljSbQaESQJ
      58wkPgHCfhXJNgtyRAZ7eohLy0UZnKW7exCvpCGvpBSz4GDcoSAtxYwMDyM9LhLzklEBYtBD
      f2c78yEN6WlxBENa0lLjELwzjPp0pMfrAfA7xpmPxBGncNLdPYgPLZn5+SQqvfTMQ16CwMBE
      hPSMxVCqD2MbNOCYoK17EH9YQq41UVBYiFkrxzs/hp04LAoPsz75ovFfJMzE2CTGxCQMKkXU
      MVaUR0v0HCBKlCeMqACiPNV85SLY5/N9I+xowuFw9BXoCeK2Yyy/3/+4s3KHrxRAIBD4Rggg
      ypPF7T71JPWtb/QiOMqTxZP4RdgD2wJFwkH8wQganRox4McfDKNQadGo5IQCXoJhCYVag1oh
      I+j3ERIF1FoNSrmMiBjCHxTRatQIwuM7CguHgkiCAqVCRkQMExZBqVx0MeIPhBDkSrRaNTJB
      AEkiFPDhDy16YZArNWjVSgRBIhQIgFKNUpDw+32Ewrdfs2SoNEoESYZSpQApQigYQqFSIxNA
      DAfx+xYPpASZAq1WQyQcQJCrkMtlIEUIBkIoVCpkQgS/10c4Akq1BrVS/ljr7olGkggHQwgq
      JTIkgj4vIUmGWqNFIReW4jKE8fkXP5JXafWolwJCPLAAWs++yW8uRPi//8/9nHrzTUYCcsK6
      PL730hqO/ubXuNRGhNhlvLYlkfffOkZAIZC17kUOVibTcPoDfnszws//4w8ea9SRzmsnsZtX
      sXFZCvbxRi41yNi6KYGrZy4y6Q0jhiQKN+xhbUEicuDKkV9SP2PAYlASFgxU79tHls7D6cMf
      Yix7mQ05cpqvnKGprYthl0CeLZ+C5WamR03seW4lQmiGo+9fpupbLxCngrH2c3zwaQfxqbGI
      wRB5G/cj1r3JfP4LHFyTjX+2k3/69Xn2/OhV9ONNnG4YRCGXL3qz2L2dzNhHeLz6F4Rnrp+P
      f3eaVX/3fXL9Q7z3UQ2C3kxGyUrWl+WikEk4+6/x5okmzEYDZVtfZGX64mn6A4VJ9U02c6Km
      j5AsC4JuZt0SpauKqGucISgzsfc7f0PE3cE/vtUGe1fx4g++R/uZd+iddzJY38aJ2i5C8tyH
      XA3/MgbbGonYKvlOZS5++zhDc8FF/zECYEhm57q9lKbpqT/1HoMTC5hUA4QSCvAO3MSVU03l
      tgPkZ17n9KCMl7etZnboGv0t04wMDSGE5/GK9z5NS8nG3ezeVMBs/xXONg9jwU1X2xD+1RlM
      tNQxE1HidUzS0G1n/yuvE6eTM9Z4kprmATI3Fz+eSnqi8TPUN4QkX7TuXBhuQ1P2PAeL4ciF
      RnyFWRjVMman7KQXr6aiMBOrVXfn6vsKQPTZOfXZJQo2b8VfN4Ck1GPRyxkaGUWpT0Ct0GIx
      OPjwvdOoUtehjzGjkzup82tQGQPo08t58QUjbx7tf3h18K/A7fVgybEiFwT0cakU3349lQD3
      JKc//YAGg5KQpGPrGiODTaNk56xnoaOWsfkFTMlfPNQRsU8M0nIrBKIbV+he4yIf7VdOMDN4
      AzEQIGf9fuiMJdc1Q8fkJEOjBgptIgHvAhqDBZNOhSCDtNRkHNe/JkTnU4+G4spKZjtmEQBj
      WhGeP33KoT4dfU7YFokAMoxJGcQNjnPrxiCKzPXsXJEGPIAA/B47Lp+fyfpaRkecnD91iR57
      DK9/t5p3//MHDE9NcfWzf6LFn8WPf7ANwTtFz7zAqtU5/PqTVuT7niHe9zB8Qv6vo9NqGXI6
      iEjJ+JwuIiorsSYz3WOjhLNicE90caltmuotGxdNI3TxrF++lYJkIwqVBi0TnKxtw98yAkEn
      hlAG+c8v/8JTlNiK1yy+AgWn+PS9y/f8T03Oyo1sWZuLTK5Ep9NS26mkoDyZU+8dJ31ZMaYJ
      JxqDiaBrgCmnn+QYOQP9wyRYiohyf+S6eDZs3YNZ5UPe0I1SsWiFpDJZWbmuEIO3nbcvTxF6
      UAHo43P4zr/9D9j7bvKLQ41s2bUZ+dwfee+Xh9AXVpBGH2/UjaDPjeHYiRoOro7lzOFzeCQ5
      xZt2EwvYBWFxkfeYSc7KoenYKX7ReB6FNpYNz64lS2dh7PQZfvlP5xEUetZsew61QgAkBIUK
      vcGIyRQDRJi83kLeSz9la54JIezk/JEzjC6UYRIEZLKl8gkyZPcYvAmyu+UWBDkaveFzpgCC
      TIYypRSd4zTWpC24pnpQxySyZWUGJz54E09YwpiQTfXO9EdWT395CEuWxgKRsJurx/+ET22l
      fGMVwdl+uhwKEiIjnL3aQlAwUL79uTuBsqPboFEeGU/iNujjH5ajRHmMRAUQ5akmKoAoTzVf
      uQienJx8ouw1onwzEEWRcDhMIHAf//CPkK9cBH9TOn/0g5gni2AwiN/vJyYm5v6JHwE6ne6r
      bYG+KTYngiB8Y8ryTeB2WzxJbfLAtkDumQEau12sWV/KXEc9jX0zJOWvYnluAoPNl+ma8JNR
      UkFhkpru5joGnUrK16wiUeHi2rUG7GE9z1Stx6J5vMsOMeSgt8tOZnEWahkszAzQ1NyFBz1F
      5SvIsGgYaq2jY3QefUI25cvyMKoiDLY20Dk6jzEpm+XFeRjUAs6JXhpb+xC1VpavKCVeryIS
      9NAzPEV2ViZKuQwiHvpaR1gIzzA+uQDIsBWtpijTgkIA9/wAddc68LLoJKuysozZtou0jboR
      ZEoSc5exIjcJKRxgtLeFzoEZZIYEVleWMdt6na7JpUiTgkDeqi3kWZei84h+elsHSVxWgBGR
      4c5mgpZCchP12CeGcMtjsVlj8DknGZ2VyMlORhI9DPROkpaXg0YO8xOD+JTxpMYbCPsXGByb
      JTUplt6WRkYdIayZJZQXJjDa0U9sbiHB8VaaO0eJaOJYvqocq+FLLjYeOhExQFfdFUa9GkpX
      VpBkUiEgEXRNU99wC1dER9mq1SSbFvP2YL1R9HHx8Bv84Ugtvvk+Dn1yFoUOjh3+hMGpYa7e
      HMRoCPHxB8cYH+2mtmUG5uo4cr6VsY46ep0q1FPX+bim+/EGySOCs+s655q7mHb4gCD1NeeR
      WfMpSNFwq6UP73gz57o85JWUonWP0DM6w0jTRepHQ+QVF6N2dHLyShu+qXaOX+oiIbuIBNks
      l+oWPbYJcgFXTxeDC0FAwj3aTfvUHB1942TkFlJanEvn9VOM2Rc/CnFNjzEb0FNaUoRm/hb1
      gy7G+5rRppZSnJ/GVN0pbo54GGu7RG2Xh9yiIpJVs1y41EmMLZfSLB3D4xHySkuxGu/63PDO
      jdPVVsPNLicRKURfex3nTl9hLiAyN9TDwIQDiDDZdpkzNzpZCIpEwgu0N7XjX7JfUhGgubkV
      vxhmvLOeMY+SsY7r9CzoKSnKxtvfwIgrQE9jE/bgPFfONmHJKiTD4KW+a+xRNy4AvpGbNM3H
      kJNqpr21mUBYAkmir7WRBUU8yYxxpX3iTvoHEECY8aaTNM6YMOsBXRw2k8StxhY0CelY4jL5
      7k++S4bWz6zHgzFpGT/84RamB1xYrXGkV+zhO3tWEva7WHA/5sVP0EFdT4TNpUY6hhed9mhV
      cvo7O3DIrWzbUIpSrUfpGaejc4j4krWUpRm4Nehk9dpV5GRksGp9JbKBPho6e7GWVFCSk0HZ
      miqqlmctCUDHsrJ4ejtniEgReganyc5KQaHSkZKahs2WhkYWvBO8DYKMd9/i0uXLtA44iTFq
      kSnUWJPTycguYmNlJn0dXXR3TFJetYHszEyKV1ezoSyF2Phk0lOtGGMspNpsmLR3nY9Mjg0Q
      V1ZFsPMqjgCgSqbAFqa5ZehukCLfJO0zsWyyeWka93ypugxJOZRbvNRcvkn7vIGK0jS0WjXO
      0S4GJ/0UbNhB5p3XeSUqfHR29yDGFbKtPPOhNOH9CC04EEzJpCToGRocJhgSQZKY9QTIysml
      bHkhnqkZgkvp7ysA39wwH37WRFZeAvjmGeruYsBhZPuBbYgjHYzP+5loPcPvPrjBmqoqDFoF
      SGbWV5XSee0GrrCbK0ff5niHgp1VRY81SN7cUBdjXh8+n5v+2ptMBZRU7H6F57aUExqr5+33
      LxCw5PPii/tYWWCh6diHnL01jCQIKG6bNMhkKCQJCTny27bdMgh7/XciD2pSVpAa7mbc4cQr
      GkhPMsNcL2+9+Vt+9du30WVvJD3htmmzmqwV63l+3z6qK1LpbB3gXgNSSRCQCRKRyOLzZofq
      ePtXv+GdT89g/zov46E5btX14vZ4sdtH6B6ZAyA5bznK6Q6GXCEgwmhbAzNihIAsTMeF6zjD
      X9j8EBQklT6Dd7SNzOJC9DJILtrAKy88S6LawdkP3uLWzO053ci2115j24pcpltP8d6plscy
      2xsLNpE0dZYPP7uKV7g7I0oRcdExmOzzkTPvKwC51szWPTtJUApEIiJBnw9/WEKlVhIJhwj6
      xvnwjcPErNjB7spcHIM3+PB4HXKFjIgkMt1awyeXh6l+7bvkmx9n95cYGR0hPsFKSDCTkxqk
      o7uby2du4lXFUla5igQxxETvTW70zGFOymVlWSYRSSDPIudaUyduv5/B5kYcCUksy7IydKuF
      qQU/E903OXal9e6jBAXWlETGmy4gpZZhUAhgyeX17/+If/OTH1FdkY36HnshuVyJSqVCpVai
      UCgWP/AIB/F7Zmmq6yEpu4DMLA1N126htpayd181ZkX4q+PNSRL2/lZ8iXnEECI9NZG+oUVj
      RJnKxJrKDDqud+AJ++mZcmOz6AnJk0iOmWN4YoFIJEIoFCQYDCFGJARBgd6oQ6tafGfurb9A
      10yYrKIKludoWfAsydU9wNnLHcjMyaxZU4484CcSEREjEtLS30dBxDGGmLqO3dVrybaaUCoE
      RAnMWg0Ou5O5sXHkljhuh0qU/+xnP/vZ/+yGcqWWxFQbSfExCOpY1mzeSKbGxaUrnSzftp8V
      cW46ZkOognY6xtwsLykkONbMjVGBPc9vQ5wZwycpWJjsY16ykJka+8h8g4qieM+Wrhf7vIYV
      61eRZUsjNdmKfyFMiiXA1fOXaOqep6x6EwVpiUy3X+Pi1RvMKtLYuLqUtOxc5NNtnD1fi0uX
      xfbNqzBb0kjRODh/5hyDCwa2Vq/HrLkrcJ1GydicQPnyDFRSBH8oQpLVilLx+TEnEnbRVX+T
      +pZWpqUUdm5ZTnhumJs3btLWMURMSRVVRVbiUrLRLPRy9txleia8rN/xLClmJUIkjC+sJjXl
      dr2GGZ8OULqynLysDNKz01DMOpDFx2K1JmIyp5BgEFGaYzDp0lixuoyMtDSSY3V4giLBqW7q
      mlpoaenBkJmPRSsnGAhgsaagVcnQ6VR036jhcl0rsrRKNpQkEPKFic0sQr/QTk3NNTomJDZt
      rUQz10GrXYfO0U6fL5Z4vYxwOIxGo3lobS5oDMy11VA34Gb1hk0I84MMz0fITomh9UYNzeMK
      Nm1aiVmj4D/9p//0999oY7joOcCTRdQxVpQoTxhRAUR5qokKIMpTzTc6SmSUJ4vbUSJFUbx/
      4kfEN3oRHOXJIvpFWJQoTxgPfDI11HicDy4t8Nd/s5umTz/gxqADS+56Dmwr5sqhN+mal0gu
      2czelWZOHv6UYY+Syl37KNON8/ZHF1gQ4nn5h6+SYXx8MWJ6Gy7gNBazKs+KY6KVhk4Z69am
      0FF7kWudIygMSWzeuYtcqx4BiZtHf01Njx+NUo45tYTduzdiUfq5fuoo6tLnWW4NcOnUpzR2
      j+EKCsQaU1mxKYvAvJlNm4sRQnOcP97A6t3bMSlBDLrpbrjC5cZeIuo41lbvIjHczqEPasGo
      AYWGVdUHofV9ZtN2s7cig5nmY3SEMpjsqGV8fBy/IpY4o42yEoGb1weRqxWgT2D7jl10Hf0H
      +vzxKGUChuQCntuzFYv2mz3G+ac6OXT0Ag6PF3swhhcObqWr5gQTIR0Vm/dSkZuADImJzmuc
      vNSAFyPrdj9PuW0xeOGDCcA3ztGPjtMZKkZ0DnG1bZrtB7by2eHrTFVmYcnbxEtJQX75+8ts
      KNpN2vJqMibPcKlxgMJnYqjcvovBM+9ys89DRvmXoyY+KvyeBbzKRYMFMezD5ZIx3Had7lAy
      P/7rZ3EOt9A2NEZmQj5KATyCkV0vfovSNB03T7xLy6CTNTHjDIR1xLbV40tez6bnXmdZ772O
      sW5wZci/eEgrhVlwuO5EdJnpu0XdmIrv/ORvCM70Ud87hNEcIbNyN3u3ltyJn3bp5gxd9S1U
      lNgQfU5cBhvf+m4pwxffpC3hRXYXaWk+cYw1+17lmdxEACJimJ6YJF559a9J0Xo59v5vGZhZ
      hyVd96V6+CahSSzk9R8WYO+u4XRfLDaTgvCGF1kr9XCxrZfynARUAogqMzte+j7GySv8oXn4
      wQUQCbm5/MkRdGWbsfVMgzGFkiSBY5+eRGdbi9WUQO5KNeff/2d8pixMCRmkpszy+//HR/pa
      E+aMYmRj9Vx0mXjGvBhL8Ukak2bmZsnIrUQpk2HJKGODTeKOlULARVdbE74JJYPzEoXlGvr6
      hsnLL8fd38iE3UNOgv4LdwzSceUEw0NXIRIgqMykauk/83MzJOdWoJHLUCfmsikhwmTXWVrO
      HWaw/TwylZb1e19DoY2jqjSd2kuNlHxt/3Vw4cM/Um/UoDIns2Pnbpwj7bz16/+Ge2qS7KqX
      qLpf4LNvCKJvnov1s6x7bh1Gg4r8cDcfH2tDn7cRAQkEgbScIiQxxGCfjJVFaXeuvX+UyPlh
      rjV0EzROMj7m4vzxc7RPx/L6/7aV9/7zh/ROrEZoeZejzT4O/u02tAqJYDiOHbvK+PWfLrNx
      XS6x1mXsXFnL4bO3KPnRJr7YZR4VSqWSUCiIJElEwiIIcnRaHXaPB0kyEfLMc6t7mNKycjRL
      9hqRiEhE0rBs/S5yE4O8/buLTGh6EO2TZOiLyU7I+cJT/n/23jM4rivL8/y9l95nAplAwntH
      giTovSfoJMpQrlRVKtNVU9UT3TOzPTGxEbsxsbEduz07HTERvRtb091VXapSlUpUSWJREr0n
      QAcSIEASjvDeJBJAIhPp3Xv7AaBcsZrsWVFkS/h9YTDx3L3vnnvfvfec/1FTsfHZBwpjaXV6
      YoHg3P2jAW63dWFWaFiy48XPjQB1CGiclRR6TtE5MAVVDyqNlW2v7P7cCNCas4ht+35EtO0k
      1/0KlE9TT/MYCcy4iBscpOlUyMkEipRiXn3JxHtn6glHS1BpFUhSgqnBFgbJZ33ep18hDzUA
      U/oi/ue//Ttmem/ys/dus3XbSnyDH1B7/CqKzEJS5R7+7/fqcGzZR3BihPGoh/dOtJHlEMlc
      Wsn09cP8ri2BNR5myZYSnmSflJGTTeOlq5yZ6GB2eoKstc9SbDZw5vwlTo7aCU2PYyrbjlIx
      J4yFxkzFkpVU5pgBmZnmM9j2/RVvrEhHjLk58Yc6xsOFj1ymrKIKmk9d5KS/l5hvEtJWUOXw
      MdzWwNn4CKAgvaBy3qtUQeWKZbTerufBAYRB2m9cYbbXBGjIq6wEQBBVFK7fQcdb79DQm8fG
      IhtPUQDWY2F2YhiVrQSlQiA8coffXxogI1WLOS2bZHCK/mkR790/8FG7gvVL82juN7G6ZK7j
      eORl0EQkgGs6iDPLQXjKxcRMCGNqBg5dnL6RybmD1CbyMqz4Jl14oyLpGRkYxChjYxNEBR25
      ORmon6A8tCwl8E65mPKF0RhsZDjtqASJoHeS8alZlDozmRlpc88oy8x6p1Hqbeg1CkAm4vWQ
      MKRgVM0ZSMAzhWiyo04G8UUh1WIkHg3gDwnYbAaQ4sxM+zGnpsz1xrJMJOBhbMIDKgMZmU4U
      CR9jI1PzrsMCRls6ejGIyuREr5LwT02Q0Duw6ZVEZycJq1Kw6kRCXjfjk7PzuX8VWNOdKON+
      DNZ01AoIzriJKM2kGLVPjQE8rmXQaMBDCCNWoxqkBFNjw8zGROwZWegIE4gJCOEppvxztayz
      ZZBtNyIIwtc7S+QCTxcL+wALLPCUsWAAC3yjeeAk2OfzfdXPscA3gHg8TiwWe6ra1wMNQKl8
      kqGLXx4LaVKfLmRZRpKkp+qdPLClGwxPaqX+y2UhIuzp4v770Omeng26R+7qYyEfE54oGdl2
      wtMu3DNhDClO0mw6fO4RPIEkZruTVKMCz4QLX1QkPdOJUaNEikdwu9wYnTnzS4hPDikZYcYT
      wWq3kAzOEBLNWPVz1RCPzDLrj+APBEhKMgq1gXSnA51qPto2NMOQyzOXQww1dmcKyXgCgxo8
      AQlnmg05EcUXCGOxWBGQ8HqmMVjsqJUC/mkXcY2VFKOWeMiLX9Zj0wr4pt14AjF05lTS7WYi
      s9NIGitGjYJ40MOsbCTFqEaI+nFHlKRZ/rgByVIUz1QIi8OGUgApGWPGPYEvnMSQ4iDNakBO
      xpiZnMAXSmKwOUizGZATUabdE/gjEjpLKs5UE/GglxAGrAYVcjyIJyCgE4MEZAMOix5is0yG
      BQjO4I/c135QYk9PQZIV2ExfpfuFhH96gklfFGtaJjaDAs/4CLNxJQ6nE4NGgYBMMhbGPeEm
      JhrIdKbOiZbxCEHx97l98uf8v0e62bzWyYe/eZt+t4urtwYoKDDzh1/9jvGZCa7fdVOQGuLQ
      O6cYG26hL5TK0kIHk121/Lf/+mvSNu0hS//Vzbs/HxQ/R3j0JofO9FJQko9ipoWLzTGKC1IR
      kRlqPEtzRx9X2kdRSRGGupoZT1gpypjbOZxtP807N9xokkFmZiKoNVFu3r6HOTHBoQ8uklu1
      GnVwjAt1TRQUlCDExzj8u1OY84tJNWpoOvoPHO1Vs25xDjP3arjsMpHib+N8Qxfh4Az3mu+i
      zihn6s4xxpTFZNtk2s+fpcEjUZzjROm6xTt3Y6wssv9RWeOuRt4+2UFucQEmjYKBOxe50jJM
      xO+m+U4HtoIKZjtrqb0zSNg/ScuddqwFFcx21HDp9hDRkJeuljtgLyHRf5nGGSslTiMJTzNH
      r3hRuc/zboOfFYvzUY/V8W5rnJSYm57ma9R2eNAiIyYmaRwIUp6X/iffx5cdFC8HRjl24jIz
      oUk6u2ZxWv0cO9OIb2aEUa+aghw7IjBw9xqNXaMEp0fxqNLJsmn5m7/5m79+hNYo4eut5fTN
      aZRqABlZAoNRj4iI0pDNj/7jf2LPmjwmRofROhbzF//xhzgVSRJJmbh/iLMnrhBWah52o8dP
      IsDt29MsK9Nzb9iNIXslWcluxmYTJANDtE2ksLTYQmb5Gnbt2sXWqnwmp2Y+dwmtwYLNZiOz
      IAe79n6ZVJRUZtN8tZ5g/L7BJRlvasRZVUFHxxBJQGlzUCSNUdfjnd/ACtF+t4flOw5QvXsf
      L+7fgUmZ/ETtJDo5RLfCSUZ0DNdM6E+XKxmksWGCqkornYNjkHTT0uxnw75n2bXnGV7YvRaN
      NEbzbS8b9h+ges8zvLh3PZpoPw0tMXa9+BzVu/fw7N4q7tXUE3zAV6NCZyRfH6Xh3vicbpHS
      ROWaTWxdVUHe4jVUV28mTfsERnd9BgdePEB5polkNI7KUc63Du7CaVaTSNwPvJEYm/RQsnwT
      m5am09Ha/4mG00MNIB6Y4uSpJqq2ryNFlSAWSyAIalQ6NUIiRiIBsn+QY0cuYi+pQK/ToFYp
      Mac4CEwMUn/hDFLBOorTtcRjcb4ieZgHEnQP4VLbqSxIYay1j4CsIjs3eqZq9gAAIABJREFU
      g8lxF1PDUzjK8zEK0HX1I37xi1/w/pU+SvIziUVChCNR5qYT84K7AnzivIOAxlpIvmGGrlEP
      AHJ4klvjKlZUFqAeb2fIL4GgIn/VOoKddbgDcSBCNGrEYJxLgq2xppFm+lRPc2hwCLsjnQwD
      3BuafKAMEEBoapRRpZXKvBQm7vXhT4SIySaMOhFBEDGkZpCiThD9zG/61AxSiRAwpmBTiQiC
      gEpnQy34SUhzBfv8/UQyK1egct1lYPopkjcXFahUChTqFAw6H7NBGZVSgc5oJRabIZGYc78s
      zs/izvnDfFzbQmA29Ilo18MNIB7BaDMz1HqXCdcg9ddvMxzQs2JTFZJ7CNfkOO///T8wblnJ
      D1/aRtzTx83mSUpKMpjs6cWvMRCf7GJowk3rrWaCiYfd8fEx0NvC1EAnH529TXCmlZaBAOk5
      mQQ80wx5vORnzA3dpZte4Kc//Sl//uPvsyLPyM1zhzl25hLuEKQXVbJy5UoWF2Wj+kztCYKS
      xauWM9V+G3cYXIO9zEwNcuqjM4wEZ2hr7keSQVDbWFFs5257H2DBYQ/Q0zOJlIzSe+sU52+N
      zY8OQTrvtNLVcp1r3eMMNDUyFXtAoYDhvmamBnv46MwtgjPt3BnWYde76B70IsWDtNR8xJV+
      JQ6jm66BGaR4iPbaj6gZ15IVGeTu8AxSMsZYxx2S1kKsKWbCLhfxZBKfexLZoJ9rKEoTSysL
      ab/T8ljf078EKeimfchLbnkV6foo7qFuumcULFpUgRydJT7vi67Q29l+4DWeWVmEvTDzE/+t
      h06C9bZcDnznR/iGmjl0up0te3Zhjh3mw18fJ3vDLopU43zkU6DRDPHBx+d5dVMOAw0XuBFR
      svnFA+yoykMITvCe/AEVm1fx5OJhAgSimbz8w42kakR8rk7uDgwj5ZdRou+iPVlAilFFVGPA
      rPv0IZUaA5sPfA+A2Y7zDCY/lfUSlWpMRgMqrRaDpEbQpbFuTTHn7gn4AxG2vfQDCu1aYv4J
      rjX1ImhMaFQiqUWLKentwq/TULFmK9eunOOfroawZJRSXZ3J9F0LkrcPbdVL/GBlNkpBor+p
      htHpJL628/y8rxasuby4bwdp5gSzoXRe+uFBHFqRwGQPjV1uFm1czc2rH/NPszFSC5axpzgT
      KWUtV2qP8stzMax5S9hXXoCcJnPl8jHe9MWxZJWya1spJnw47p3hN2/WozKks/O5fOSubgxq
      EZOzkPLiXKLzdSSqP60vhVqHSachMtHBnRkLSw0uWuOFrCl8fDpAgkrLbNcZfnXRR96SjazN
      sXL55GGuRzUsWr+DxMwAt30q8rRBrpx4j4Qhh+27Mz89/+vsC7SwDPp0sSCMtcACTxkLBrDA
      N5oFA1jgG83XWhhLluWvRTm+LkiSRDKZJB5/snmCPsvXehK8wNPFQkDMAgs8ZTyyM5x3tJ3a
      pmmqD6zH1XCRmuYR8pfvZPOyLO5d+ZjGgTBla3eyOl9H0+XztE9r2LpnB4VqD4ePXmQmFKN4
      w/NsX5z2OMvzzyPFGW27ybn6DvQZFezetYHISBs+VRZlOTZCvmG6+pKk24J4hQwUo1eobZvL
      Jaa1prNz70aaPviI8eTc0mr+mv1UL8uCmJdr587RPuYFwF66lqWOOEJqKZGeOmK5q6nKsTHR
      38aMIoPy3BT8o610BNJYWZaGGBriVO0w63dswKqZ5U7NIEXbliJM9FJTcw133Mim6mpKzbPU
      tUZZuboQtRyg5UobznVrcajDtNe0kb5tFalfKHLc7+LapRp6pmIUr9zKpqV5uFovcf5GD3FA
      Y7azbmkh1+sa5jeNLKytXkvC56OycgmSt5+Tp2qZFaxs2FmNUxzn/OkapqOAqGbR+t2kBxq5
      dHccENCn5LH32WpSn5Dni5QMU3/6Qzr9Bjbv2kOBXYuATHRmhIsXavBo8nl293osmrmm/2gG
      EPNx6tCbnJssYev6FA6faWTbM5s5deJjstIP0D2hYd1qB4cOHyXz22sZDKZQamzj6Pk2/myZ
      jx6vlR//aA8W5VefNvOzDLdcprZfwcHXv8Nk+zXqbnWRwyCTeitlOTZioUn6+xKocz2MCkZU
      ngCrdrxARZYJQRRRqcaYDTh5/ic7MQOK++VJhhh0q3n+jTcwA6JCScuVD4kpcvCPtNHeHiTz
      u8/hcw8xojRRnqXmzrVWBkxplORtxRqd4uaVOkjPZO8KDf1tA2Sud3Du2FVW7H+eLYxy/ko9
      9u0OOruDVK0uwN9/j2b3AJ6WTDatMDPc1oPujwwgSs2xY2iX7uc7uww0nj/O+Tik+30Urt3D
      mtI0BEEkeO8kypJdfGu1ExBI+F2cvjNAYbqeo6fq2fL8a1jCQ1ysr0NZZEJKq+SNbctBEFAo
      VbScn6Ji60usytHSc/V9zt8Z47W1mV+s/q+E+FQvPtsqtha4uHntDtkH1qEWZEYHhshYto30
      jgs09C9mV/ncZ9hDDUCWYvTeOMmoqoR0I2DKoCIdTp88jyFnE05HPqWv5NBZ+w4+lFgzKnml
      YJo3/+Ya+dUpuF2duId6ePctL3te/hYldg1PyiF6dHyCksq9mPU6jMu34owkGLp1i6vHDtF2
      VU8sHMBcuOPTE/xjnPjD77imV2FylLD/hTJcvXW888t+VLpMnn95HznzrslxTyfv/HIYlcbM
      xurnPi2jPoOV6TruNPWQPb+JHBzvYSq1mErc9E35WWGA7NJKhJFWBouXAxAdaSOYtZbSTCsK
      zOzbm4sy1j93ASlJ5+AUiyoqGRnoIhxf8eACx0eZDObwTEUWOgUsWVHF6dt9OJQerhx7n2aL
      lrQlu9hthbaaw3jvarHmL6V6RT4A0xPjGHMWkZ+iB6mEvTtymB27TX/9BX7Z0wgqHat3HgT/
      NOeP/JZGrYykMLP7NduX++L+BWjSK9kqdPHB0RZslXsRBRkEkcLlG/F1X+HnnSH2rPzMTv/D
      LhiaGuDIqTtYi3IYHpqgpb6BNreFb//5dj74u4/pn1iHefQ0b37Uxs43/mI+S6SDvc+u4M2T
      NRS/sIjXvr+TdPdp3j58lf/pz3dieqxV8KdRKVXE5uf8UiLKxOQ0SaWVTQe2sr0qG+94E5eu
      f8ZZyZzNC68/M68LBDBAZulm9v3FHr64l6lKXcQPf/As9yWXmvru/0UgrWg57rYb9CcSaDJk
      2puacHl0CIKb3gkLi/bqUGhTWbPOyJXr9YTiCpQqFULyfjZDgYBnFJRz/0tEJ7nT0IipOMxo
      ew/py8ofXGAZZFHm/jKHLM01BjSp7HhpP+vLnQB473awtPrbvL5urtcOTQ0BoFAoQbi/ky7h
      dU8SjosUr3+GF6tXfXKbpj4H+771EtmzN7nYrSDf8WQDXrRppbz2sp73zt4iXJWPaV7lzFKy
      ib98WeD3Dd0sfn6u03ioAWisWXznz3/K5GAbA4MR0tNsaJRRxgZdCDoTqvgQ7/7mDGnrX2BR
      hoGp7qucqPeyJM2PwZ5C3DNO36xAIhImNT2FJyeNC9m52Vy4c5M01SKmupsYURRT+s99qyYi
      uF2jDMleUKhISf0f8+QTlAbWrC7jn355lAJHEeMBAxs2rMaklNHfrqNnoggZJTp7EQXaRk75
      RRSZm3HUfEx9swqHPMHNlml2VecDEtP3GrGueYEVuXpW5Rupa+7BLEWZGBpCgYjBkoLNokdU
      55CfepXrN+6yOMdAR8NdnBU7Ed31j/TcKRnZSHeu0NiVgiE8Sl3bNBuXpBLyTTE0NAQIaI3W
      Tzx8MxetoaDzXa61LWLXYsenEpNfIaHhRs51i1RmihjMFpKxEP6kirHWOqY1TpxSGHOq85MN
      sIcGxIgKNWarDavZjCklnfKqKgpTFAwOelm+tZqyFJmAxkaqVmYqKFNeWoYhMcVI1MLOXVso
      ykrDPz6AV5PHvp2rMCmfXESYMcWJQx2mub0b2VrI1vVL0KuVGC0pWAwaEES0ejN2hxWTJYUU
      TZyh4VFcLheu6VnMqZmkWiw4Mmyf7zkEAaVaR1payie/i6ISk82OzaTDlmLHZE0nw67DatZj
      y61iUVEGKbYUUlPNyIIOe6qD9DQL6Y509BYbmTk5FGWnMtrTwdisgjXbtpBl1qLU6tCobSxe
      XkFGqo2UjGxMsSD6NAOjPf24XG4kbQpOuwkRBVl5eUQmeukcnCRj8UbWlGWgVCgxWVMx6+fn
      MKICrcmO474rtiCg1upJy8inNM9GV2szkyEV67ZsId2iIuAeZXDMhcs1QUQ0kpXhwJqShlmv
      Iy0jlaA/iSPNwhc10BKJBPF4/LGGRCqMqSQn2ulzR1m2ej26+DTTQYHcnFTGezsYjaWybW05
      OqXIX//1X3+9s0Qu8HSxsA+wwAJPGQsGsMA3mgdOgp8mX40Fvj4kEomnzhfoTyrDfR2mBg9S
      hVjgyXFfFSKReIJxsV/gaz0JXogIe7pYiAhbYIGnjEd2huuoeZs3L0b4z//ri9S+82taJ2No
      nSt54+BKzrz5D4zENZjz1/Pa5jQO/+5DphMKllW/ytbMWQ59cJaJ6SAbv/Pv2VZme2Izb99I
      C6fP38Qbk9BZsti2oZDme362bF+NPuai5lIzi9ctpf7MKVzBOApNKqs3LmO47iLdYxP4JRM5
      JeVUGiY42RrEaVYCBnY8v432i7VkrdvPikIroeG7vHe2iapiO277dvYUJTn57t/jznqZH1QX
      UXviA0RBQio5ADf/Hxq9Dkxq0NoLeWb/Tu59+LfcmErBrAG1No/nv7+XFICROv63t+vISjEg
      SQoqtm5H336Za64wepWCuKxhyzMvUGEJcv70BYZmwii1VirXb2FtoYnbl2u40zdGTFJSsHIb
      663jnBqz8+rmMvAO8GbtIAeK4vzuXDMGvYFkQiZj+TY221y8fboRvd4I6FmyfRfq3tMMW7fy
      4vpCwt4hjv3mCCUvHaTtyBF8Gh1KwJC3gteqV6F6jElR5Og0Zz86Sp83THrRZqrXWPno7T/g
      F9TYS9fzwo7lqEWQkzGG2xq4OZzk2b1b0M27pTyCAcgkvD2cOtuETy5DDk3RM5Fg666NXLrQ
      wWxsHWv3v8EOlYuf/aaJ2NaDbH/x20ze/ZCm/jHs/Q0oy/bwvQJIWJ6s6K57dART8QaeW1lA
      YMaN0ppJme0q7T2j2PzdmEuXYZ3txmNZwusvVpL0e0hobSx746cM3jlPV7yYXavzGal7j6rt
      u9lRZgIU6JRe6oNxhrpaKM9eTVt7D36/H0P+OmItffgzbEiWdNRjw/gSFgIBG9kZXjySjM6S
      xjP7fkK5LUrP9RNcb5/AYbCyfcO3KUsFQaHiE6FBWSJ71X5+squM8FADv2sZZUnSwpYXn6HU
      rKXj8kkmpqahvQXt4u38WUU2MU8HJ443kiZauRdO45Xv7UMVdnGny09clkh+ItQkk0xKIEsU
      rNrDrqpcfEN3ONM9gWyVyFuxi+oVhSCIaLRabnTFGLvTgmdNAYGxNvqGZimUZVTWYl58cSsm
      QKHSoHzc28GCmvIN+1mnn+bUsUE8mePoVrzKy+VJjte2EIsvQ60RCbhH6B5zEYuk8NmP/oe2
      yGTEx7mPTpO9oRp/8xDoUilIVXDjRgMaRwUWgxmbLsbR35xBSluOyZaO0zHN7ZOQWizjcYUZ
      HrrMkcYpCqp/RK7T9MRGgLyKKkav1HH8VAd6g4PVm7IpqlzK0IULzBhL2LrCiU4ws7T/PGdO
      DqLUWFm6bh2OL1xHTsRou3WGYJcGSGHngUpUaisaZYCJkXHcgop0rRqFvhC75hKjIzOonNso
      UNcx3CqSyF2KWb6M5zPXFBQa0vMyaL43Qzg4w63zx+jSg8pazIH9a7gvJujuauBUop+Ib4qM
      ohXQ18vNsydpnB7A49jETzanUjcksjzbgUoUUNnzyNY10tmbwJ63HqNaAeos1q6GQM/kA+tp
      sPkyH3XG6BlX8/KPvwszDQy3XOXYaBsojSzbsBlUKRRn+Gkf8KDomSA9Z86vKOrt58yxWTRA
      StEqqleX/tGO8JeJoDaRbZeov9yGwuEgMOlCk2JAp00iMReBBiKmjELWqWUuXB363PkPNYCw
      383g+DTesSlGhme5dLqGtkkz3/0PO3n3v7zPwPga7tS+yY0JK9/9t7tQJWaZ8KnYvLWcf/qw
      iaoyJXl5e9ipvsZvbnexc032E/MHSsgalm/bj4YonTfO0jzoZdeiFHI1MwznLkWvlIkFYxSs
      3sUSDfQ3XqK9d4wiR+nnriOoNKzY+Tx7F807yYXHQaEi06igqaUJoy0HtXIcUVSi00u03LxH
      ybMbMQptXKppY833tyLc+/yzyVKcmXE3qtR89DE7O3Z9mweFTpjS8li8OB9BqcXuMHC3r5tt
      L1ZTJE5z5MOr+GMCacokg5M+0k0aEgE3k2ETZUst3B11Ey13IManuFnTSfESA7FAgFhShmjk
      EyW44jV72b88nSvHj+Dx+HEKULhqNwfWlcw/rMzlNrDlFTJ65WO8KYVkGbsB0KSWsu/be/5E
      Yr8vHzkewhtVsm73QW6e/QMzMRWxUJhYHBSigCj+893tQw3A6Cjlz/+X//3TLJHVG4mN/46P
      fnscdUElTrmHX51txVK1jtsNTdjKFBz+qA6VVqRw/TY2FoV59/hJ/hD2U7Vn1xPNEjnZ38Tl
      5nEUSiVag5Vl6UZAQBQFFIr5RHjT/ZyubQWlAlFhoGLtF0NMQI5HabpwBM+dOd+ZshUrAZGs
      3DRqr7Sw/rXNRLtvg6DAoUlyym9jT7qKRDgNd2yashQR1/y1oj43Fz4+xG1NgrgyhT3POenq
      mubisUPc1c19Rqytfon8eTdTnTWN3Nzc+bPD8/8KqE3ZLM/TcKN1mOfXL+fMhQv8/ibIskD2
      8g2UFVvx9Jzj/feakWNxzMVrWO/MJL/+BO++2wXJBAWVG4FeAESlnqoVi3jvwi3y1hjpv3WO
      Q30NADjK1qEBdMZMwpMnSVmxFfXknAFEp7s4cmgaNYAui50b8nH7FeTrA/SGbRTYvzxhXAA5
      6uXa2RoCSQFjag5rljnp+v0fONSuR59dSdw3StuoksVFD45PeORlUCkZJxJNoNVrSUbChGNJ
      VBodGoVEIBSZO0ihwqhVE4uGiSUFtDodKoVMJBQmIQnoDPrH/034Gb64DCpLCSLhCAlJRqHS
      oNOoEQRIxsJICh0qBSBLRCNhYgkJUaFCq9WgEAWSiRhJeU6HUopFCEU/3cxRaXQIkoRKrSAa
      iaHSakjGoijVWgQpTiQBOq0aOZkgGk+i02pIxqMkBRXEQ0QTMiCg1GjRqpXEI0Gi8fvPLaDV
      G+eeLRknnBTQqe/3WzLxaAxBpUYpgpSIE00KaDVKEtEI0VgC4QtliESiyIICjVaLSiGQiEWJ
      ROMgKtFqNYhygoSsQK1SIEtJItE4KpVINBL9xOtTodKiEiUEhZJkLIqg1iDE46BSkYxGiM9H
      zCEo0WmVJCUBlSgRiiVJxmNf8jKoTDwaJhJLotLq0SgFIqEgCUlArdWhEiXikoBGpUSWksTi
      SdTqufeu0+m+3lkiF/YBni4W9gEWWOApY8EAFvhG88BJ8NTU1NfCh+ZpS8j2Tee+L9DT9E4e
      OAeIx+NfCwNY4OniaZsDaDQa4YEjgEr1JCN3F/i6IkkSCoUCtfrJyuN8lkf2TQh7x+kaClKx
      tJDZgQ66xrykZpdRnG1lvKeZoekYzoJy8lLVDHXfwxVQUrKoDJsyRHtrF/6klsXLl2BRP8Fp
      h5zEO9bPvcEJ1GYni8oL0SkFpGSAoT4vmUXZqMUQHQ0tTEXjCAoNOSUVZKgDjIaUiN4RhqYC
      8xdTkV+5lGyrlvHBbvTpRVi0CnwT/UT12aQ9IBOIf2qMWdlElsOELCWYHO6md9SDqLezpLIU
      jRSgq7UdTwRSc4ooTdPQce8ensBcahhjegGW6DCj3nl3YqWG/NJKslN0yHKSse4WBidDaG2Z
      lGRbGOxqwzu/Qo3eTnmGmp7eMRKAQq2neNFSHEYlJHz0DYTJLnIiecdo7ewjMn8L0ZJFqSVC
      99A0SUChNVFWsRijMEtfVy9TwQT27BKKc+343SMkdXbs5i93rf9RiHlHGQgZKc20gBzDNTCJ
      pSDrc/tOiWgI9/QsaU4nyvlm+GitUUpQf/zX/P075wl5+zl8+GNcUyN88MFRhtyDnDxxlenp
      AX7/3mnGhto4ce42I+0X+PhyG911JzhZ38vAjeOcaBjhSX79eQabOX21BaVOz0zvLa7cGSQp
      y4QH6vn4chMT3gjg4daFViSjEa00zYVTdbjHWrja4Uat1aOKTFB3bxij0YBKISJHhjlz/Cqd
      Q3NuBSNtV7nnivzxzeUkPXXHOdnQiwRE/CPU1txGUOtIjt/mSqeHsebzNI7E0KklmmtvMOUd
      5dytboxGI0ajEZ1GjUZnQKv20nStD6Ve/0m6T8lzj1PX+lDqNEx33qBtPIxWb2Sm/x79U2GM
      ei3TQ23cGwlgMBqQvd1cqL1HVJbxdDVw/kY9o974nO+RQcXgzdtMiyoMWiXdzY24gjJGoxGD
      XodCSFB35hjd0zEMOpG262dpH/Uz0HaLnvGvPgu8FJul/tTvOXFrGFlK0F1/mkOHzuP9zDHJ
      qI+GMx/wYW0rsc80wkcYAZJMtp3lcreAQQeoDVi1MOFyozbmYrIW8JO/+ktG7hzjQsMoRudB
      /uLfF/H+3/0DhgI9RqOZRHCYyZhMhd34xESxAHq7Osmp2snqMgeJxeV4/VGE+Cx1t/1srUqh
      fWCMnBQ1OlM6i6qWYQ1a6bzdSBgzCCqc+SWYFUE6YhGqqiqBBMNXbpO1fgVDXb0sL3X+yXsn
      fZ30JSsoTXTT5V9GHiDHosxGJcqW7yUn3cLoLYlYIEBCXcTugyuxRAaRIr55CRIF6Ro7xeVL
      sGeq6W0Zp3LpYoz3byBDIhEiHBVYtOUAGSl6RCGT+OQY7pRyqspzGLh1l9kpF8NDMeKBIPoc
      PULcR0NnnNWLrPT2DFCwuoRFSwx47gxjW7yExWYNdfdiTLlGUUT1aMx2slLD9M4W8trzGzGI
      UFZcSCipYPjxv8IHIDPa2URQtKBQKpCkMLLZQY4p+bmjIv4AhvxSMnqCn/v9oSNA1DvGhyfv
      ULGiCG0ywJRrnOmwjkUrK5A8Y8z4Y3j6bnLo8DXKV69Br1WCrKOssoCR9lZGJiexZJdTkaVl
      aMDNk4wFkgD1/PxGFBWoVCK+sT5GEgJGLQzeamYqDtMjjfzmZ/+dn//mLLY1VX+kt3mfZHCa
      awMB0vRKFON3aZ74E1ns5Dhd9a1gN5Fmi3H1aicKYw57XthNjlHi7oV3Odk0QUbVPvZsKEaY
      6eP3vz3MWDiJwuykqqqKqqqlFGT8aVdyMbWCV57dTKomzNUPf8fVXs8DDlKTnl9GoUPJeMjE
      +lUFhFxDuCMRtMC9lnYCyT8+DYWe/LLFVFVVsbisGIMcRdIbUCbDNJx9l5//4l2ud479ySyW
      j5OEt5fahnFS08yEZj1EkjpKKwrRKD5/nMGeRWGm/Y864IdLIyrUVK5Yxtj4EMGgj9HBMTwR
      JVn5mUj+emb941z65TtQup/XqlcQHL3LhT6RpQ4zwVsjTJpm0Do2kBFt5fbEDAl4Ys5waak2
      bty7x7K8tUy0X+PKkJoywxCipKNzYJYUnZu73TOkZK/k4F88y/101LMdfQ+8nmdiiFhcYqR3
      EEWamZ76NkofkCQ9EfTRNT2LIjJKn8KKYvoO/X0J3D4ta5evojgtwds3RuiKh1AVrWbl5myS
      40eYjEgodNbP+P78afwDTdwL57Cuaj3pwjQ10yEo/oLpCgosdieL11QRcx/iSus4Jf67JEQr
      feN+MqQR6oeC7Cj4QjMRNdidmeTmzl1PTioxez6kc6KQVbteRqc+TkcwwpMY3iW05OTamBjr
      wudV4g8nMPwLhHkfagBaUzobqp8hMN5FQtvLqq3bSZFPcPrdCyx95iBlmhlqLNkovd2886GS
      b++sQDl5no+6lRx4/SUqjB4+OnqJWimN115ZyVc/PfqUvGWbiEYv8+Y//gP69FL27F2O67aG
      519diUUpEPaO0NzdhyI3nc+uUyiNDrITBgAUOgvZaXNTq3Awysbnv0Vhqgo5HqapsRE5pOP2
      qbdoOSNgK9/Md3YtIxKbJWfRbpYtzUEEBlsbCStNKKfq+NU/nkVpy+XZ5/ZgCPRy8vhvORcR
      yVmykT12C73Ra/zsZ+1zD+JYxI8PbkWpMJKZk/q5l2fILCZ69Ci/qAlhyqhg3565zzFjahpJ
      41yt6y0O0mJ6EHUs3lHNRG09bt1SXn1lKQZRIOYf5FbLCLH8fFKyMzCqFICAzSxw4eghrokC
      qCys372f/Qe3cfnSx1yZDJFWsIRtW8uY7Q2Q0Ivca7qFJT+f8XsDFK1ZjlX1he74S0RtzWbr
      rmyYzIYhC06rFoiQnu9EA/jGe+idUbFiUR5KtQGn0/459+yvtS/QAk8XC8JYCyzwlLFgAAt8
      o1kwgAW+0SxkiVzgK+N+lshQKPSkH+UTvtaT4IWAmKeLp80ZbiEgZoFvPI/sDOfqvMaxOi+v
      v7GDnotHuXxvgqzKHezbVMStE4doHotTuHIn2xeZuXzqBF1eFVv2PUOJxsWRo5fxKzM4+K1n
      SNc9OW2gZDxIb9N1rjT3o00tYEf1VhKjzcyo81laaCc400vLPYlM+yweMQfF0EUud3pRigI6
      m5Od+9Zx/dcfMK1RIQAFa59hd1U2RKc5f/QEPZ4wgiBgyl7GC9WL6Dh7h+z964m31XHuRgeS
      xsbKzdvJiA0xImZQlW+j/WYN/pSlrCvPQEAm5h+n9sIl+ifDZJauZOO6Rcy01HChoQ9JIaK2
      ZrJ9dS7njl9Fms90uGrLXlxT0zyzaRlTg+1cvHwTv2yiatMOFpt9fHjiArNRACX5q7ZTLHdw
      vn4QFCIqo4PNu/ZSnK5/om4q/6PIiVlunjtLy8gMOZVb2bI8i5Y8zbN0AAAP6UlEQVSa47SO
      xajYsJO1ZRkogIh3hNrzNQyGdezYt59ix9yO5aO1xsgkJ37/PnWhCl6Z6eX0jT52v7iDY0cu
      UFluJWYo59m9Cn759jkqM7YjOJax1lDHhSvNeOUbRPNeYEPwNEdq+vg3+0of3eq+ZIZbrnPX
      Z+WNH/2Y6e4GOjoGSU9OMaPPACARDTA5mcCimcYjOFDFFWx/7tssyrov8jGIoK3g9Z/s/HyO
      MCmGJ+rg9Z/uwxSd4fhbxxiM5OMZdZMam6D+hptd3/0RqaExWse8RCLTTEka7gxdY1QsYWdp
      BoIAUjzMtYuXMC/eyY+LHXRcPc6FeoGSYIIVz77Kyvmd2OhEA8b8zbz03NK5DTvfML9omyY6
      3cXZawNsP/h9rLFRzt3opGiJASlzJT/d/WlOr+bL7VTtPMjaMgf99ae51dxHYXUlj2+76vGR
      9HsRclfxg91pnHv/EM2xNIa0a3j9FROdA26SUgaiKNNcfwv7yr1s0k7R6Q/BoxqAlAhx+/wx
      4jlryBrzgymTSqfAiaOnMeRuID01i5LtNuqP/YqgPgVregnVOdO89V/95G9OxeizEXAP4U6E
      mRwfJETpV6YZ80UmpjwUlqxGLYo4S1aRmpDor2/ixsn36ajTE48EMOVv+/SE2TGOv/9bruhV
      mOxF7H62BFfPNd7+eQ8qXQbPPF9N9idZIjt4++cDRGdmMJVsYYdWzSiAKpVFJWrOHX6f7NxC
      SsrKYbiH/oZztIgOXn29DP18y0vEgvhlPctz0xFFgbLFi7h2ZQg0XmoOv8Mtg4bMxdvZXpyk
      p+EUb47XIdpLeWNLAQAzY2MYC0rJMKpAzmXvzkxi7jYmWi/x8/5GQMuizbswxzzUHv09Dcoo
      EU0mBw5u/Ve7HKi05bLWJpMIz2BMzUOa7WUmAO99MEPeii1zecpkGe/sONPXTtOUULKmev+n
      5z/sBqHpAc5cuovCmcbUuJdrFy7T4rby3b/cwXt/e5g+11q0PUd4v3ac/T95BYNGCaSxZ38V
      /3T0Jpv+00HWNjQz2Sug0uueWO8PoFGricxLcyeiAboHJ0BhYd3+TWxdmoXPdZfLNz+bJTKT
      Z1/d87kRwFm8keovjgCAKqWcN75TjfvmKZqDFjT399tFLYu3PEtJOMDQvXqO1zTwXJGMuWAN
      mw0urjV28eKOJWgEEASRpJQkKUmAgkQ8hkJUAFa2vbz3cyNA8ep9nxsBANQaDbGZ+3Itccba
      u1DYZNIrt/Odz44AUylsfW43i00THK8dwmL61/n5c59ExE9LUzPZKzcj3x3Ek7eFPYUxPjxf
      T6gsB5NGAEFL5fbnqVD1cOhGDxXZK4FHMACDo4z/+H/+X3j6GvnFkbusXFnOyL0ebl9vRrBn
      Ykr28svf1pC+7XlMUpDxjkt8cH6QUmcSe0kBgdbrXO8M4kxqWL298okKY+UXF3H++mVueHOY
      He0lmbGavH/uzUf9dLU3E3bpQKklt/AhbnyCkoKl62l5/yidU3ONVfINcuRcE2k5OWgTIukO
      C+DBnuGkYuky3B+/T02Tmd0rclFqLVRmG6i5WEOu04yrv5fypZuh784jlc+WX4atpYazV4Po
      o1N0ebQcXJtC0D1AY+NcQVXWjHltTAFjxhJW5PRRe6OVl7ZXfqWaTV8WsZk+3vvdR+jK11Hk
      GiKrYDnhltvcDirRWxzI0VkmgiKF+QX097QQkWdw5FV94pD5yMugsYCH3lEvxWX5zA730Dvu
      IzW7hFxThNvtg3OusHo7y4rTmRjsYyIkUlBSQooyxL3OPuIaO4vLclE/QWEs5ARe1zC9o9No
      zA6KC3OJz7qJKszYLTriES9THhmjLkZYMCHODjLgnvcfV2rJK8wiNh0nrSDt8x6tyTAjoz7S
      c52oZAnv+CAhvQPljA9jQQZx1xD9Y9NISj25BYXoEz4CgoE0q4HwrJtxn0BBth1BEJCTEUb7
      +nD5wticeeRmphByu5HMNmz6OTfHZGSGsRmRrAzL3KdLPES/O0BBVhqxwBTdPYNEBR05hUXY
      FGG6e/sIRufqQWXNJM8iIGltpJi0xEIeRiej5OY4UTzmd/M4lkGjs246e4eIJUHUmigqLCA0
      3o3LL5NVWIJZDDITVpBuEenv6WdW0lNaVoBBpVgQxlrgq2VhH2CBBZ4yFgxggW80D5wEB4PB
      B/38r46nTYTpm879BHnhcPjhB39FPNAAnqYsfv9/eZg+/AJfHYIgIAgP1+z/KvlaT4IXeLp4
      GiPCHnlfKhmPEAgnMJkNxEMBgpE4ap0Rg1ZFJDhLOC6jN5rQqBQgJwn4g2gNRpSCRMDvJ4EK
      s9mAQnhya83xSAB/MIrMnMa9yaQjMusjkpCY0+fXYzZqkZNxQoEg0aSMWmfAqBEJhxNoDVpE
      mNfNj6FSKQkHA8SToNYZMOjUkEwQDPiJJWVUWgM6RRJ/MPyJtr6o1mMzze2GyFKCoN9PXNBg
      MekQ5+smmYjg9wVJAggCWoMZlRQDtQ61KBOJxFCrFfj9ARLzWvwqrRGzXkU0HCQYiaFQ6TAa
      dSgEASkZJxqV0Oo0cy4XiRjheJJkJERcAgQRg8mCVvWZnlmKEwwl0Rm0iMJcmUMBP9HEfJ3o
      1CDLxCJhZJUWjVIkEQsTCIRIynOJPYxGw+PfW5AlwsEA4VgCtc6EXqsg7PcRlUQMRhNqpYiA
      jJSI4w8ESMoKDCYTmnllrEc2gNbzb/HLy/B//OfnOfXWW0zKWkKKPL736jpO/upNAqISY9ke
      3thTyXTXNf7bb6/yo3/373D4Gnn7TBtCLM6Gb/+UdbnGh9/sMdF5/WPOtQZxOoyEQzGqdu+i
      6/e/wpdegkkZxx8Q2Pft75LsvEBtixuNWklcVrFx5wa6Lt9i6YHnyNIJRHz9nL06RL4tTFPP
      NFqNSCypZ/tzz6Mdv8Hxq93odCpCURObtxRyr6GJlvZ+7IVFZJas4rmNFQAEhm7x/vl2QkGR
      53/yPXJ1c41lsv8G775/l/TCNARRSdnaHRjHbuAyLWeFM8LVRhdbqwz893dqKcicy2DmKF/P
      mvQQF2pvE0YgGpFYsnUfKwtSiQddnLvYwbb9OzGrRSa7m7g24mOyvh5NXjHqpB9F+joO7F6K
      ft4GwmO3OHR2kn2vPUO2QWSstZaLd8dRiEkCUSMvfvcgdjHMrVOHmMrdy4FV2Yy31XLkcg9p
      aSnEIjGyq7azvSqPx2kDCd8AH35Ui6wWiUgpVG8u4OyJayj0KpxlW6heV4wSGG25ypnGfoTo
      LBmbvs3+ZenAIxmARGi0idNXBkkq8iARxheCoqUF3G3zkVTaeOF7/4ahxhNcmPYxNdzCkWPX
      SAoySDE67zSSvuo1VgePcaqpn5W5S56YLAoqM6u2b2dzpZO+WydoGZhEbXJQuWIVDlWIlus3
      CMwO03I3ys5Xv0W2XoG7t47LN8dYWmZmeGCSzPIURlqasecUcqd1gme/9Tp2tcBkZw0XrnRQ
      ZXNhzFvGpiU5qAURkz2V0tx81OJ5KvbsJd/y6V64KMWIqizYbSLqz3miKXHklbFyVREKUSQ1
      zYLJsYahyw1cGoxRsmInOqEPnT2fVasqABFTaiqtN26SvnwH68qc+CdHmJzf/FIb08i0djDp
      DWFO0zEwPEZR4SKEqTg7X34GY3KUD96+zmx8KXoNyMkQd+/OUFSqo697hOwKNTcaPGz+1ivk
      6gQmejtJxJKEoxP4dBko+5sZW5wJqClZW83+daWEJno4VNPCxsqcz48sXzKiIYN9B1/DYlJR
      c+QdAopNvPjKQYa7btI3G5jXKpIYnJpl/e6XKBXu8dYdF8l5A3jokyVCM5w+UcfiHdtw6kFW
      arDolLinplBq9CgVGuw2HVFBi0qKo7XkcPAHr5OrAWSJSDSCUq1FrVISC4V5kO7SV0bcy/VT
      h/nlm7/m3B0PBUVpJMOzDPd1c+LwEeSS7ZSpppi1ZuE0qhFEBSZ7JsqYB7uzEN/0CFLIRXcg
      k0XWEAlHBg6tCkFUYs7JQjE5hXPpFnIVk9y6fpET5+sfLDTFXN7awYkQmtAIs6YMYsOd+KP3
      V6ySzE6N0dfXR1/fAN5wEqXeQrYqQJ9HSZp9bhSN+Sfnj+lnwhvCH49jt5oRBQFLWg7FOQ4E
      AQRRzaJSOz0DU8jREabiOeQ6dLi6b/LOr9/k1299hFi4GOt8zxTxTeMWdawszmd4sJ9EeJYZ
      fQrpBjWiqCKjpJIMo4i7+w76ws2U5El0d7s/UzoBvdGMwOOPyBNVOmxmHZGxTuTMleQ5bZjV
      CWaDEkkxQjIpgwyRaASFUoHKYkE9O8t98cqHjgDRsI9oMkF/Qx0jwz4unUmhx2vije9v5d3/
      8j7DwwN4BIHCxeWcvlpDWL2VLNt8dyaI6HQ6wgEfgWAUvcX8RJ3hUFlYvWsTGxZlIIgK1KoQ
      w7Yclu3ah36xhcPXugmuXIXde4kudzmLUtW4+juRzTmY0jLI7R6isWMcZ2kOVnsCQ20jvTPF
      FJhERls7EfMric74yF+xlVV6gdaTb3LPDZsekO0xHpqldXCKZ159naYPf8lbpxbzFz8pn/+r
      mpyKVezes/QTF2XPwG26xQL2VYaob+xkdyEYsxaxZ896AGRZQurXMzQ6QVFaPhOdN7npUvPC
      thUIgoA+o5LsvsvUXUuQt3YHeoWLtMIVbH5+H2aVgFKtnheMlXF11tHWPMZQbyuRmRANq75P
      drSR7skgi60ivVeOMZCymMmmIaaTv6U5ESbq0JFXcb90Mp7JcRRKDYrHveIjRRnsaKPPr2TD
      qkqUwXFGIiY2rF/L4fP1xOJJtFoRk1ZHJBIlGp0inpr6Se7lhzvDpRby+r/9K7z9c85wO/bt
      QDP7Du/9/AiWJesoSFNx6p1DuONKijdvx6FTAQJqrQaFUsuS9Vu5c+QoJ+J6DvxZ3hM1AIVS
      jVarRau9L88loFKrEASBlPzlVN59j/oBBes2FXLp+DvUhGVMzgJ27y5DJagoWWTn8LlBtuyr
      QjAq2Lx6jEt/eIszcQFzegl79uYT6a7lzIlzRCURi7OE/XZAEFCqlJ9McgGUOgOFKUqOvPsB
      SmMR5ekJPN4QqWkGBDFO57XjDHZfBhQUlC9GiMWp2rSFLG0Y78WLdHjyCPRc5Wc/awRAzFzO
      D7etoOZcLf9YdxKlIY3Ne/byiVyboCI928idxigv25QQFlDrdHP18dlv0qSXgUkbP/wPL+PU
      iv/fGH68Os+w/exrBjNbNYYDmxYxHPr+l4FTRJXBRvgLA5u1L0O0vhLD/z9fGI5s3s3w9BcX
      w/WD6xnuneFlYOHgZzBx9GD49fYew4U3TAzqPJ8Yrn4VZtCQwHJ0HgXg85PLDCuWr2T4IyDL
      cPvuPQYXC02G43vXMXz6x8GgaurA8PvdA4ZzH1kZ5CQFGTZsXcxw4CcTg1FADHz16+gw6Cig
      GxiMw6CDZ0ZiFIyCAQAAht0Au/WcoSkAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
